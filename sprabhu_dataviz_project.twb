<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='win' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='sprabhu_dataviz_project' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Unemploymentbenefits' inline='true' name='federated.0ym66pd14s03oo1h5n4ke00n64zl' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Unemploymentbenefits' name='textscan.0sdaibr0xey5611ch7tp51m1269g'>
            <connection class='textscan' directory='G:/Santa Clara University/Q3/Dashboards/Individual prj/FINAL CLEANED DATA' filename='Unemploymentbenefits.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0sdaibr0xey5611ch7tp51m1269g' name='Unemploymentbenefits.csv' table='[Unemploymentbenefits#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='States' ordinal='1' />
            <column datatype='integer' name='Max Weeks of Benefits' ordinal='2' />
            <column datatype='integer' name='Max.Weekly Benefits' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Unemploymentbenefits.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[States]</local-name>
            <parent-name>[Unemploymentbenefits.csv]</parent-name>
            <remote-alias>States</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max Weeks of Benefits</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Max Weeks of Benefits]</local-name>
            <parent-name>[Unemploymentbenefits.csv]</parent-name>
            <remote-alias>Max Weeks of Benefits</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max.Weekly Benefits</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Max.Weekly Benefits]</local-name>
            <parent-name>[Unemploymentbenefits.csv]</parent-name>
            <remote-alias>Max.Weekly Benefits</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Unemploymentbenefits.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Max Total Benefit' datatype='integer' name='[Calculation_295830211260784640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Max.Weekly Benefits]*[Max Weeks of Benefits]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Owner/Documents/My Tableau Repository/Datasources/Unemploymentbenefits.tde' schema='Extract' tablename='Extract' update-time='05/26/2017 10:24:48 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_295830211260784640]' formula='[Max.Weekly Benefits]*[Max Weeks of Benefits]' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51' timestamp-start='2017-05-26 22:24:48.703' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_295830211260784640</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Calculation_295830211260784640]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_295830211260784640</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>549100.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10766.666666666666</statistic>
                <statistic aggregation='Min' datatype='integer'>5225</statistic>
                <statistic aggregation='Max' datatype='integer'>18000</statistic>
                <statistic aggregation='Stdev' datatype='real'>3126.8894426676916</statistic>
                <statistic aggregation='StdevP' datatype='real'>3096.0818988171172</statistic>
                <statistic aggregation='Var' datatype='real'>9777437.586666666</statistic>
                <statistic aggregation='VarP' datatype='real'>9585723.1241830066</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6400848546.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>Unemploymentbenefits.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1275.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.866068747318506</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.719601443879744</statistic>
                <statistic aggregation='Var' datatype='real'>221.0</statistic>
                <statistic aggregation='VarP' datatype='real'>216.66666666666666</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='integer'>25</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>42925.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Max Weeks of Benefits</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Max Weeks of Benefits]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Max Weeks of Benefits</remote-alias>
              <ordinal>2</ordinal>
              <family>Unemploymentbenefits.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1291.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.313725490196077</statistic>
                <statistic aggregation='Min' datatype='integer'>18</statistic>
                <statistic aggregation='Max' datatype='integer'>30</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.3107591486646233</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2879924934611484</statistic>
                <statistic aggregation='Var' datatype='real'>5.3396078431372551</statistic>
                <statistic aggregation='VarP' datatype='real'>5.234909650134564</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>32947.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Max.Weekly Benefits</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Max.Weekly Benefits]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Max.Weekly Benefits</remote-alias>
              <ordinal>3</ordinal>
              <family>Unemploymentbenefits.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>21511.0</statistic>
                <statistic aggregation='Avg' datatype='real'>421.78431372549022</statistic>
                <statistic aggregation='Min' datatype='integer'>221</statistic>
                <statistic aggregation='Max' datatype='integer'>636</statistic>
                <statistic aggregation='Stdev' datatype='real'>104.41231991015049</statistic>
                <statistic aggregation='StdevP' datatype='real'>103.38360201553</statistic>
                <statistic aggregation='Var' datatype='real'>10901.932549019608</statistic>
                <statistic aggregation='VarP' datatype='real'>10688.169165705498</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9618099.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>51.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>51.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>States</remote-name>
              <remote-type>129</remote-type>
              <local-name>[States]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>States</remote-alias>
              <ordinal>5</ordinal>
              <family>Unemploymentbenefits.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ALABAMA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WYOMING&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;MISSOURI&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.404545' measure-ordering='alphabetic' measure-percentage='0.595455' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='USmedianhousehold' inline='true' name='federated.1dyvsfe05g5nqp13rkitw0xb5cqm' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='USmedianhousehold' name='textscan.0jw7y120bepuon1evrt1q0pjm8ci'>
            <connection class='textscan' directory='G:/Santa Clara University/Q3/Dashboards/Individual prj/FINAL CLEANED DATA' filename='USmedianhousehold.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0jw7y120bepuon1evrt1q0pjm8ci' name='USmedianhousehold.csv' table='[USmedianhousehold#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='US Household Median Income' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[USmedianhousehold.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[USmedianhousehold.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US Household Median Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[US Household Median Income]</local-name>
            <parent-name>[USmedianhousehold.csv]</parent-name>
            <remote-alias>US Household Median Income</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[USmedianhousehold.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Owner/Documents/My Tableau Repository/Datasources/USmedianhousehold.tde' schema='Extract' tablename='Extract' update-time='05/26/2017 10:25:13 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11' timestamp-start='2017-05-26 22:25:13.677' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>USmedianhousehold.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>55.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.3166247903553998</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1622776601683795</statistic>
                <statistic aggregation='Var' datatype='real'>11.0</statistic>
                <statistic aggregation='VarP' datatype='real'>10.0</statistic>
                <statistic aggregation='Count' datatype='integer'>11</statistic>
                <statistic aggregation='Median' datatype='integer'>4</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>385.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;desc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>11</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>11.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>US Household Median Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[US Household Median Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>US Household Median Income</remote-alias>
              <ordinal>2</ordinal>
              <family>USmedianhousehold.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>558945.0</statistic>
                <statistic aggregation='Avg' datatype='real'>50813.181818181816</statistic>
                <statistic aggregation='Min' datatype='integer'>46326</statistic>
                <statistic aggregation='Max' datatype='integer'>56516</statistic>
                <statistic aggregation='Stdev' datatype='real'>2826.69601542797</statistic>
                <statistic aggregation='StdevP' datatype='real'>2695.1489018801512</statistic>
                <statistic aggregation='Var' datatype='real'>7990210.3636363633</statistic>
                <statistic aggregation='VarP' datatype='real'>7263827.603305785</statistic>
                <statistic aggregation='Count' datatype='integer'>11</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>28481676015.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>3</ordinal>
              <family>USmedianhousehold.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>22110.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2010.0</statistic>
                <statistic aggregation='Min' datatype='integer'>2005</statistic>
                <statistic aggregation='Max' datatype='integer'>2015</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.3166247903553998</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1622776601683795</statistic>
                <statistic aggregation='Var' datatype='real'>11.0</statistic>
                <statistic aggregation='VarP' datatype='real'>10.0</statistic>
                <statistic aggregation='Count' datatype='integer'>11</statistic>
                <statistic aggregation='Median' datatype='integer'>2010</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>44441210.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.452273' measure-ordering='alphabetic' measure-percentage='0.547727' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='allStatesCrimerate' inline='true' name='federated.1pdak030h08zzb11m9gm91chd6yk' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='allStatesCrimerate' name='textscan.16n7gg31byoyb110i4gz001s9ur4'>
            <connection class='textscan' directory='G:/Santa Clara University/Q3/Dashboards/Individual prj/FINAL CLEANED DATA' filename='allStatesCrimerate.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.16n7gg31byoyb110i4gz001s9ur4' name='allStatesCrimerate.csv' table='[allStatesCrimerate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='States' ordinal='2' />
            <column datatype='real' name='Violent crime' ordinal='3' />
            <column datatype='real' name='Murder and nonnegligent manslaughter' ordinal='4' />
            <column datatype='real' name='Robbery' ordinal='5' />
            <column datatype='real' name='Aggravated assault' ordinal='6' />
            <column datatype='real' name='Property crime' ordinal='7' />
            <column datatype='real' name='Burglary' ordinal='8' />
            <column datatype='real' name='Larceny-theft' ordinal='9' />
            <column datatype='real' name='Motor vehicle theft' ordinal='10' />
            <column datatype='real' name='Unemployment Rate' ordinal='11' />
            <column datatype='integer' name='Median Household Income' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[States]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>States</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Violent crime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Violent crime]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Violent crime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Murder and nonnegligent manslaughter</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Murder and nonnegligent manslaughter]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Murder and nonnegligent manslaughter</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Robbery</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Robbery]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Robbery</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aggravated assault</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aggravated assault]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Aggravated assault</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property crime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Property crime]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Property crime</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Burglary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Burglary]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Burglary</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Larceny-theft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Larceny-theft]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Larceny-theft</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Motor vehicle theft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Motor vehicle theft]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Motor vehicle theft</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment Rate]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Unemployment Rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Household Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median Household Income]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Median Household Income</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Median Household Income]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Median Household Income]' derivation='Avg' name='[avg:Median Household Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Owner/Documents/My Tableau Repository/Datasources/allStatesCrimerate.tde' schema='Extract' tablename='Extract' update-time='05/26/2017 10:24:06 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='547' timestamp-start='2017-05-26 22:24:06.331' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Aggravated assault</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Aggravated assault]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Aggravated assault</remote-alias>
              <ordinal>0</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>512</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>137530.19999999995</statistic>
                <statistic aggregation='Avg' datatype='real'>251.42632541133446</statistic>
                <statistic aggregation='Min' datatype='real'>59.0</statistic>
                <statistic aggregation='Max' datatype='real'>789.10000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>124.78783841808747</statistic>
                <statistic aggregation='StdevP' datatype='real'>124.67372057216147</statistic>
                <statistic aggregation='Var' datatype='real'>15572.004617058707</statistic>
                <statistic aggregation='VarP' datatype='real'>15543.536601305399</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>43081027.339999951</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Burglary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Burglary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Burglary</remote-alias>
              <ordinal>1</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>531</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>350776.69999999995</statistic>
                <statistic aggregation='Avg' datatype='real'>641.27367458866536</statistic>
                <statistic aggregation='Min' datatype='real'>223.69999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>1212.7</statistic>
                <statistic aggregation='Stdev' datatype='real'>231.35696219849953</statistic>
                <statistic aggregation='StdevP' datatype='real'>231.14538742886839</statistic>
                <statistic aggregation='Var' datatype='real'>53526.043957717935</statistic>
                <statistic aggregation='VarP' datatype='real'>53428.190129641669</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>254169083.36999986</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>2</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>13416.0</statistic>
                <statistic aggregation='Avg' datatype='real'>24.526508226691043</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.601442903178633</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.58808995763005</statistic>
                <statistic aggregation='Var' datatype='real'>213.20213485478567</statistic>
                <statistic aggregation='VarP' datatype='real'>212.81236861190672</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>445456.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Larceny-theft</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Larceny-theft]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Larceny-theft</remote-alias>
              <ordinal>3</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>536</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1125874.8000000005</statistic>
                <statistic aggregation='Avg' datatype='real'>2058.2720292504578</statistic>
                <statistic aggregation='Min' datatype='real'>1063.8</statistic>
                <statistic aggregation='Max' datatype='real'>4082.3000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>465.72645208559993</statistic>
                <statistic aggregation='StdevP' datatype='real'>465.30054760503111</statistic>
                <statistic aggregation='Var' datatype='real'>216901.12817224063</statistic>
                <statistic aggregation='VarP' datatype='real'>216504.59960154185</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2435784625.2599983</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median Household Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median Household Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median Household Income</remote-alias>
              <ordinal>4</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>544</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>28040492.0</statistic>
                <statistic aggregation='Avg' datatype='real'>51262.325411334554</statistic>
                <statistic aggregation='Min' datatype='integer'>32338</statistic>
                <statistic aggregation='Max' datatype='integer'>76165</statistic>
                <statistic aggregation='Stdev' datatype='real'>8551.7631010027271</statistic>
                <statistic aggregation='StdevP' datatype='real'>8543.9425569791492</statistic>
                <statistic aggregation='Var' datatype='real'>73132652.135671765</statistic>
                <statistic aggregation='VarP' datatype='real'>72998954.41695939</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1477351253664.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Motor vehicle theft</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Motor vehicle theft]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Motor vehicle theft</remote-alias>
              <ordinal>5</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>511</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>142156.49999999997</statistic>
                <statistic aggregation='Avg' datatype='real'>259.8839122486288</statistic>
                <statistic aggregation='Min' datatype='real'>28.399999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>1402.3</statistic>
                <statistic aggregation='Stdev' datatype='real'>170.33443519726234</statistic>
                <statistic aggregation='StdevP' datatype='real'>170.17866521936909</statistic>
                <statistic aggregation='Var' datatype='real'>29013.819813970367</statistic>
                <statistic aggregation='VarP' datatype='real'>28960.778095846108</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>52785732.990000017</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Murder and nonnegligent manslaughter</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Murder and nonnegligent manslaughter]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Murder and nonnegligent manslaughter</remote-alias>
              <ordinal>6</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>101</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2632.5000000000023</statistic>
                <statistic aggregation='Avg' datatype='real'>4.8126142595978108</statistic>
                <statistic aggregation='Min' datatype='real'>0.5</statistic>
                <statistic aggregation='Max' datatype='real'>35.399999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.6185326194418606</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.6152234896966995</statistic>
                <statistic aggregation='Var' datatype='real'>13.093778317964773</statistic>
                <statistic aggregation='VarP' datatype='real'>13.069840880454782</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19818.410000000014</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>7</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>547.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>547.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Property crime</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Property crime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Property crime</remote-alias>
              <ordinal>8</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>538</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1618807.0999999994</statistic>
                <statistic aggregation='Avg' datatype='real'>2959.4279707495421</statistic>
                <statistic aggregation='Min' datatype='real'>1406.5999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>5182.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>744.1172395245286</statistic>
                <statistic aggregation='StdevP' datatype='real'>743.43674807946934</statistic>
                <statistic aggregation='Var' datatype='real'>553710.46615760459</statistic>
                <statistic aggregation='VarP' datatype='real'>552698.19839497644</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5093068925.5100012</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Robbery</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Robbery]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Robbery</remote-alias>
              <ordinal>9</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>451</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>58103.399999999965</statistic>
                <statistic aggregation='Avg' datatype='real'>106.22193784277873</statistic>
                <statistic aggregation='Min' datatype='real'>7.4000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>748.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>95.711711103666644</statistic>
                <statistic aggregation='StdevP' datatype='real'>95.624183228839243</statistic>
                <statistic aggregation='Var' datatype='real'>9160.7316423917437</statistic>
                <statistic aggregation='VarP' datatype='real'>9143.9844181826193</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>11173615.219999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>States</remote-name>
              <remote-type>129</remote-type>
              <local-name>[States]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>States</remote-alias>
              <ordinal>10</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ALABAMA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WYOMING&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unemployment Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unemployment Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unemployment Rate</remote-alias>
              <ordinal>11</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>90</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3459.7999999999979</statistic>
                <statistic aggregation='Avg' datatype='real'>6.3250457038391188</statistic>
                <statistic aggregation='Min' datatype='real'>2.6000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>13.699999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.180426947579662</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1784329581844526</statistic>
                <statistic aggregation='Var' datatype='real'>4.7542616737315617</statistic>
                <statistic aggregation='VarP' datatype='real'>4.7455701533042642</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24479.220000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Violent crime</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Violent crime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Violent crime</remote-alias>
              <ordinal>12</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>520</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>217146.29999999996</statistic>
                <statistic aggregation='Avg' datatype='real'>396.9767824497257</statistic>
                <statistic aggregation='Min' datatype='real'>98.200000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>1508.4000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>205.05099345731981</statistic>
                <statistic aggregation='StdevP' datatype='real'>204.8634753628086</statistic>
                <statistic aggregation='Var' datatype='real'>42045.909917833807</statistic>
                <statistic aggregation='VarP' datatype='real'>41969.043537728081</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>109159106.31000011</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>13</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1099414.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2009.8976234003655</statistic>
                <statistic aggregation='Min' datatype='integer'>2005</statistic>
                <statistic aggregation='Max' datatype='integer'>2015</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.1391031681682273</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1362324742269587</statistic>
                <statistic aggregation='Var' datatype='real'>9.8539687004038008</statistic>
                <statistic aggregation='VarP' datatype='real'>9.8359541323957504</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='Median' datatype='integer'>2010</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2209714966.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.213636' measure-ordering='alphabetic' measure-percentage='0.786364' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Median Household Income:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[avg:US Household Median Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[sum:US Household Median Income:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:States:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DISTRICT OF COLUMBIA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NEVADA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WEST VIRGINIA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALABAMA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MARYLAND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SOUTH CAROLINA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CALIFORNIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MISSISSIPPI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UTAH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDAHO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NEW YORK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FLORIDA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NEW HAMPSHIRE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WISCONSIN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COLORADO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MISSOURI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VERMONT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LOUISIANA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PENNSYLVANIA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALASKA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MASSACHUSETTS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SOUTH DAKOTA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KANSAS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OKLAHOMA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CONNECTICUT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MONTANA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VIRGINIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ILLINOIS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NORTH CAROLINA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;INDIANA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NORTH DAKOTA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KENTUCKY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OREGON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MAINE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RHODE ISLAND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GEORGIA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NEW JERSEY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WYOMING&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DELAWARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NEBRASKA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WASHINGTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ARIZONA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MICHIGAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TENNESSEE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IOWA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OHIO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HAWAII&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NEW MEXICO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ARKANSAS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MINNESOTA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TEXAS&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.1dyvsfe05g5nqp13rkitw0xb5cqm'>
        <column datatype='integer' name='[US Household Median Income]' role='measure' type='quantitative' />
        <column-instance column='[US Household Median Income]' derivation='Avg' name='[avg:US Household Median Income:qk]' pivot='key' type='quantitative' />
        <column-instance column='[US Household Median Income]' derivation='Sum' name='[sum:US Household Median Income:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Statewise Unemployment Rate' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='US Median Income' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Median Income'>
      <table>
        <view>
          <datasources>
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
            <datasource caption='USmedianhousehold' name='federated.1dyvsfe05g5nqp13rkitw0xb5cqm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dyvsfe05g5nqp13rkitw0xb5cqm'>
            <column datatype='integer' name='[US Household Median Income]' role='measure' type='quantitative' />
            <column-instance column='[US Household Median Income]' derivation='Avg' name='[avg:US Household Median Income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='integer' name='[Median Household Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Median Household Income]' derivation='Avg' name='[avg:Median Household Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Median Household Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[avg:US Household Median Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Median Household Income:qk] + [federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[avg:US Household Median Income:qk])</rows>
        <cols>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Statewise Median Income '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>&lt;</run>
            <run bold='true' fontname='Times New Roman'>Sheet Name</run>
            <run bold='true' fontname='Times New Roman'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
            <datasource caption='Unemploymentbenefits' name='federated.0ym66pd14s03oo1h5n4ke00n64zl' />
          </datasources>
          <datasource-dependencies datasource='federated.0ym66pd14s03oo1h5n4ke00n64zl'>
            <column datatype='string' name='[States]' role='dimension' type='nominal' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='integer' name='[Median Household Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median Household Income]' derivation='Sum' name='[sum:Median Household Income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:States:nk]' member='&quot;CALIFORNIA&quot;' />
              <groupfilter function='member' level='[none:States:nk]' member='&quot;TENNESSEE&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='11'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pdak030h08zzb11m9gm91chd6yk].[sum:Median Household Income:qk]</rows>
        <cols>([federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk] * [federated.1pdak030h08zzb11m9gm91chd6yk].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Statewise Property Crime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>&lt;</run>
            <run bold='true' fontname='Times New Roman'>Sheet Name</run>
            <run bold='true' fontname='Times New Roman'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='real' name='[Property crime]' role='measure' type='quantitative' />
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Property crime]' derivation='Avg' name='[avg:Property crime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
          </filter>
          <slices>
            <column>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]' field-type='quantitative' max='-2998391.9263959564' min='-16509634.729817163' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]' field-type='quantitative' max='13251893.692564528' min='1943213.584591548' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]' />
              <lod column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
              <geometry column='[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</rows>
        <cols>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Statewise Unemployment Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>&lt;</run>
            <run bold='true' fontname='Times New Roman'>Sheet Name</run>
            <run bold='true' fontname='Times New Roman'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Unemployment Rate]' role='measure' type='quantitative' />
            <column-instance column='[Unemployment Rate]' derivation='Avg' name='[avg:Unemployment Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
          </filter>
          <slices>
            <column>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]' field-type='quantitative' max='7373493.9196487516' min='-30311643.102089241' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]' field-type='quantitative' max='15487390.743529769' min='-6491733.56138031' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]' />
              <lod column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
              <geometry column='[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</rows>
        <cols>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Statewise Violent Crime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>&lt;</run>
            <run bold='true' fontname='Times New Roman'>Sheet Name</run>
            <run bold='true' fontname='Times New Roman'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Violent crime]' role='measure' type='quantitative' />
            <column-instance column='[Violent crime]' derivation='Avg' name='[avg:Violent crime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
          </filter>
          <slices>
            <column>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]' field-type='quantitative' max='155918.13383059576' min='-18686650.377038401' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]' field-type='quantitative' max='9293359.5303631835' min='-1580033.8889792212' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]' />
              <lod column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
              <geometry column='[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</rows>
        <cols>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='US Median Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>US Median Household Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='USmedianhousehold' name='federated.1dyvsfe05g5nqp13rkitw0xb5cqm' />
          </datasources>
          <datasource-dependencies datasource='federated.1dyvsfe05g5nqp13rkitw0xb5cqm'>
            <column datatype='integer' name='[US Household Median Income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[US Household Median Income]' derivation='Sum' name='[sum:US Household Median Income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[sum:US Household Median Income:qk]</rows>
        <cols>[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Unemployment benefits'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>Statewise Unemployment Compensation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Unemploymentbenefits' name='federated.0ym66pd14s03oo1h5n4ke00n64zl' />
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
          </datasources>
          <datasource-dependencies datasource='federated.0ym66pd14s03oo1h5n4ke00n64zl'>
            <column caption='Max Total Benefit' datatype='integer' name='[Calculation_295830211260784640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Max.Weekly Benefits]*[Max Weeks of Benefits]' />
            </column>
            <column datatype='integer' name='[Max Weeks of Benefits]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Max.Weekly Benefits]' role='measure' type='quantitative' />
            <column datatype='string' name='[States]' role='dimension' type='nominal' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_295830211260784640]' derivation='Sum' name='[sum:Calculation_295830211260784640:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]' />
          </filter>
          <slices>
            <column>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[sum:Calculation_295830211260784640:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[sum:Calculation_295830211260784640:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ym66pd14s03oo1h5n4ke00n64zl].[sum:Calculation_295830211260784640:qk]</rows>
        <cols>[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
      </datasources>
      <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
        <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='12' name='Statewise Unemployment Rate' w='42000' x='0' y='0' />
              <zone h='50000' id='15' name='Statewise Violent Crime' w='42000' x='0' y='50000' />
              <zone h='50000' id='20' name='Unemployment benefits' w='42000' x='42000' y='50000' />
              <zone h='50000' id='21' name='Statewise Property Crime' w='42000' x='42000' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='100000' id='13' name='Statewise Unemployment Rate' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' type='filter' w='16000' x='84000' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='9500' id='14' name='Statewise Unemployment Rate' pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]' type='color' w='14000' x='1400' y='30500' />
        <zone h='6250' id='17' name='Statewise Violent Crime' pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]' type='color' w='14000' x='1200' y='82875' />
        <zone h='9500' id='22' name='Statewise Property Crime' pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]' type='color' w='14000' x='68600' y='38000' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='12'>California Median House hold income has always been higher than the average US income. On the contrary it has always been low for Tenessee</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Unemploymentbenefits' name='federated.0ym66pd14s03oo1h5n4ke00n64zl' />
      </datasources>
      <datasource-dependencies datasource='federated.0ym66pd14s03oo1h5n4ke00n64zl'>
        <column datatype='string' name='[States]' role='dimension' type='nominal' />
        <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='35' h='5875' id='8' is-fixed='true' type='title' w='100000' x='0' y='0' />
            <zone h='94125' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5875'>
              <zone h='94125' id='3' type='layout-basic' w='84000' x='0' y='5875'>
                <zone h='47063' id='1' name='Statewise Median Income ' w='84000' x='0' y='5875' />
                <zone h='47062' id='7' name='US Median Income' w='84000' x='0' y='52938' />
              </zone>
              <zone fixed-size='160' h='94125' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='5875'>
                <zone h='94125' id='6' name='Statewise Median Income ' param='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]' type='filter' w='16000' x='84000' y='5875' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Times New Roman' fontsize='12'>Providing better unemployment benefits and compensating families with lower incomes may reduce crime possibly caused due to unemployment. </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3907' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='14193' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='3907' />
            <zone h='81379' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='18100'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='The average unemployment rate in California and Tennessee over past 10 years is higher than the US average.' captured-sheet='Statewise Unemployment Rate' id='1'>
                    <capturedDeltas>
                      <worksheet name='Statewise Unemployment Rate'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>Califonia</run>
                              <run fontcolor='#787878'>&#10;Avg. Unemployment Rate: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>8.360000000000003</value>
                                    <value>&quot;CALIFORNIA&quot;</value>
                                    <value>&quot;MULTIPOLYGON(((-114.6271 33.4342,-114.6514 33.4133,-114.6827 33.4185,-114.7244 33.4046,-114.707 33.3838,-114.6983 33.3525,-114.7035 33.3299,-114.7296 33.2986,-114.7192 33.2865,-114.6844 33.276,-114.674 33.2587,-114.6896 33.2448,-114.6757 33.2222,-114.6757 33.1839,-114.707 33.0918,-114.6914 33.0831,-114.6653 33.0345,-114.6462 33.0484,-114.6132 33.0275,-114.5749 33.0362,-114.5158 33.0275,-114.5019 33.0084,-114.4932 32.9719,-114.4689 32.9719,-114.4811 32.9354,-114.4637 32.9041,-114.4759 32.8398,-114.5106 32.8155,-114.5297 32.7929,-114.528 32.7582,-114.5836 32.7356,-114.6166 32.7286,-114.6879 32.7373,-114.7018 32.746,-114.7192 32.7182,-115.0116 32.6989,-116.1039 32.6187,-116.4216 32.5936,-116.8785 32.5555,-117.1252 32.5339,-117.2269 32.6956,-117.2478 32.7303,-117.2704 32.8172,-117.2773 32.9267,-117.3086 33.024,-117.3677 33.1387,-117.4546 33.2534,-117.5258 33.3299,-117.5954 33.389,-117.6388 33.4255,-117.8317 33.5558,-118.0524 33.6949,-118.1202 33.7279,-118.1671 33.7383,-118.2575 33.7192,-118.3079 33.7227,-118.3896 33.754,-118.4069 33.7835,-118.4261 33.8704,-118.4678 33.9416,-118.5234 33.9955,-118.5842 34.0216,-118.6624 34.0285,-118.8084 34.0268,-118.9422 34.0598,-118.9787 34.0685,-119.1021 34.1137,-119.1994 34.1693,-119.2776 34.2406,-119.3489 34.291,-119.4479 34.3501,-119.4844 34.364,-119.54 34.3883,-119.6096 34.4057,-119.733 34.4074,-120.1483 34.463,-120.4159 34.4804,-120.5967 34.5621,-120.6175 34.5864,-120.6245 34.6298,-120.621 34.8228,-120.6419 34.9375,-120.6419 34.967,-120.6401 35.08,-120.6506 35.1182,-120.6731 35.1443,-120.7079 35.1651,-120.7844 35.1894,-120.8348 35.2242,-120.8661 35.2729,-120.88 35.3858,-120.9025 35.4223,-121.0068 35.4849,-121.1771 35.6257,-121.2727 35.683,-121.3631 35.796,-121.5125 35.9784,-121.6672 36.1331,-121.8097 36.2513,-121.8636 36.3139,-121.9227 36.4546,-121.947 36.5832,-121.9331 36.611,-121.8879 36.6197,-121.8636 36.6319,-121.841 36.6632,-121.8254 36.7153,-121.8184 36.79,-121.8341 36.8474,-121.8723 36.9117,-121.914 36.9482,-121.947 36.9603,-122.0687 36.9673,-122.1295 36.9882,-122.2042 37.0316,-122.2946 37.1029,-122.3832 37.1706,-122.418 37.2384,-122.4006 37.3531,-122.4475 37.4852,-122.5136 37.5043,-122.5136 37.5982,-122.4962 37.6659,-122.5031 37.7076,-122.517 37.7754,-122.4736 37.8015,-122.4145 37.8067,-122.3867 37.7963,-122.3537 37.7233,-122.3728 37.7076,-122.3832 37.6989,-122.3728 37.6433,-122.3433 37.6016,-122.1921 37.5339,-122.1573 37.5339,-122.1538 37.5512,-122.1521 37.5651,-122.1799 37.6416,-122.2529 37.7493,-122.305 37.7893,-122.3172 37.8136,-122.3241 37.8797,-122.3363 37.8901,-122.3954 37.944,-122.3919 37.9596,-122.3519 38.0031,-122.3015 38.0291,-122.2876 38.0517,-122.2946 38.0674,-122.3311 38.1056,-122.3867 38.1265,-122.4076 38.1282,-122.458 38.1021,-122.4684 38.0969,-122.4805 38.0309,-122.4666 37.9874,-122.484 37.9283,-122.4284 37.8814,-122.4788 37.8328,-122.5379 37.8241,-122.5727 37.8519,-122.7186 37.9197,-122.8455 37.9944,-122.9341 38.0152,-122.9793 38.01,-122.9932 38.0205,-122.9915 38.0517,-122.9724 38.1213,-122.9706 38.1717,-122.9811 38.2446,-122.9915 38.269,-123.0228 38.295,-123.054 38.3124,-123.1409 38.4341,-123.313 38.5644,-123.4416 38.6861,-123.5407 38.7677,-123.6223 38.8355,-123.7005 38.9172,-123.7127 38.9589,-123.711 39.0528,-123.7961 39.2978,-123.8065 39.3691,-123.7892 39.5359,-123.7926 39.6037,-123.8048 39.6714,-123.8517 39.7948,-123.8795 39.8383,-124.0325 40.0016,-124.1002 40.0729,-124.3071 40.2137,-124.3557 40.3075,-124.3783 40.3735,-124.4096 40.4396,-124.3714 40.5421,-124.2063 40.8115,-124.1593 40.9123,-124.1367 40.987,-124.1454 41.1295,-124.1107 41.2633,-124.0916 41.3711,-124.0898 41.4649,-124.1072 41.5692,-124.1524 41.6978,-124.2567 41.7778,-124.2393 41.8073,-124.2132 41.9272,-124.2115 41.9985,-123.8222 41.995,-123.5181 42.0002,-123.2313 42.0037,-122.2894 42.0072,-121.4482 41.9967,-120.88 41.9933,-119.9988 41.995,-120.0006 41.1834,-120.0006 39.7218,-120.0041 39.4455,-120.0058 39.3169,-120.0041 39.1657,-120.0041 39.1118,-120.0023 39.0667,-120.0006 38.9989,-119.905 38.9328,-119.5852 38.7139,-119.328 38.5349,-119.1577 38.415,-118.4278 37.8971,-117.8334 37.4643,-117.1661 36.9708,-115.8453 35.9645,-115.6489 35.8099,-114.634 35.0018,-114.634 34.8714,-114.5871 34.8349,-114.5523 34.7654,-114.4706 34.7115,-114.4255 34.609,-114.4359 34.5951,-114.4029 34.5655,-114.3803 34.5291,-114.3855 34.4578,-114.3751 34.4474,-114.3351 34.4491,-114.2986 34.4248,-114.2882 34.4057,-114.2638 34.4004,-114.2273 34.3674,-114.1787 34.3501,-114.1387 34.3031,-114.1335 34.2597,-114.1648 34.2579,-114.2239 34.2041,-114.2291 34.1884,-114.2569 34.1728,-114.2882 34.171,-114.3229 34.138,-114.3507 34.1328,-114.389 34.1102,-114.4133 34.1085,-114.4359 34.0789,-114.4394 34.0216,-114.4654 34.0112,-114.4602 33.9955,-114.5002 33.9625,-114.5228 33.9556,-114.5349 33.933,-114.5263 33.8999,-114.5037 33.8687,-114.5297 33.8565,-114.521 33.8252,-114.528 33.8148,-114.5054 33.7609,-114.5106 33.7331,-114.495 33.7088,-114.4985 33.6966,-114.5297 33.6775,-114.5158 33.6601,-114.5315 33.6514,-114.5228 33.6132,-114.5402 33.5819,-114.5245 33.5524,-114.5593 33.5298,-114.5662 33.5124,-114.5923 33.5002,-114.6201 33.4585,-114.6271 33.4342)),((-118.3322 33.356,-118.334 33.3334,-118.3618 33.3264,-118.4243 33.3369,-118.4626 33.3612,-118.506 33.4133,-118.5373 33.4342,-118.5442 33.4498,-118.4991 33.4446,-118.4191 33.4151,-118.3322 33.356)),((-118.5807 33.0345,-118.4434 32.8763,-118.4573 32.8624,-118.5043 32.8972,-118.5581 32.9719,-118.5773 33.0101,-118.5807 33.0345)),((-119.5435 33.2795,-119.481 33.2552,-119.4688 33.2291,-119.5314 33.2448,-119.5487 33.2621,-119.5435 33.2795)),((-119.9137 34.0772,-119.6826 34.032,-119.6356 34.0303,-119.5852 34.0407,-119.5626 34.0233,-119.5957 34.0025,-119.7225 33.9747,-119.7868 33.9729,-119.8633 33.9938,-119.905 34.0529,-119.9137 34.0772)),((-120.0458 34.0007,-120.0075 33.9695,-120.018 33.9486,-120.0631 33.9277,-120.1153 33.9243,-120.1622 33.9399,-120.2161 33.992,-120.2057 34.0042,-120.0718 34.0268,-120.0458 34.0007)),((-120.3621 34.0737,-120.3377 34.0407,-120.369 34.0251,-120.442 34.0372,-120.3621 34.0737)))&quot;</value>
                                    <value>37.25</value>
                                    <value>-119.75</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-186' y='-30' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='1' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]&gt;</run>
                              <run fontcolor='#787878'>&#10;Avg. Unemployment Rate: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>7.1999999999999993</value>
                                    <value>&quot;TENNESSEE&quot;</value>
                                    <value>&quot;POLYGON((-84.3219 34.9879,-84.6208 34.9879,-84.7755 34.9879,-84.8102 34.9879,-84.9771 34.9879,-84.9805 34.9879,-85.2655 34.9844,-85.3646 34.9826,-85.4741 34.9826,-85.6044 34.9844,-85.8634 34.9879,-86.3117 34.9913,-86.3187 34.9913,-86.7844 34.9913,-86.8366 34.9913,-87.2102 34.9983,-87.2241 35,-87.6065 35.0035,-87.9853 35.0052,-88.2026 35.0087,-88.2008 34.9948,-88.3642 34.9948,-88.3798 34.9948,-88.7865 34.9948,-88.823 34.9948,-89.0176 34.9948,-89.1984 34.9948,-89.353 34.9931,-89.645 34.9948,-89.7249 34.9948,-90.3089 34.9965,-90.2932 35.0417,-90.2133 35.0261,-90.2011 35.033,-90.1751 35.1165,-90.142 35.1356,-90.0969 35.1182,-90.0656 35.1373,-90.0673 35.153,-90.0951 35.1599,-90.1177 35.1894,-90.0969 35.1947,-90.0777 35.2259,-90.1021 35.2537,-90.149 35.2555,-90.1681 35.2798,-90.1559 35.3024,-90.109 35.3041,-90.109 35.3424,-90.0743 35.3841,-90.1299 35.4136,-90.1455 35.3997,-90.1368 35.3771,-90.1733 35.3789,-90.1716 35.4136,-90.1403 35.4362,-90.1125 35.4727,-90.0812 35.4762,-90.0673 35.4658,-90.0743 35.4362,-90.0551 35.3893,-90.0412 35.3963,-90.0517 35.4067,-90.0326 35.4275,-90.0186 35.4675,-90.0482 35.5057,-90.0378 35.5492,-89.9891 35.5596,-89.9578 35.5422,-89.9509 35.5214,-89.9213 35.5144,-89.9092 35.5388,-89.9109 35.5492,-89.9422 35.5579,-89.9561 35.5892,-89.9109 35.617,-89.8953 35.6152,-89.857 35.6343,-89.8518 35.6569,-89.864 35.6708,-89.897 35.6517,-89.9318 35.6604,-89.9561 35.6934,-89.9561 35.7334,-89.9092 35.7595,-89.8744 35.7404,-89.8483 35.756,-89.8188 35.7577,-89.7823 35.8047,-89.7354 35.8064,-89.7058 35.8186,-89.7058 35.8359,-89.7719 35.8655,-89.7667 35.8898,-89.7493 35.902,-89.711 35.9055,-89.6711 35.8846,-89.645 35.9037,-89.6572 35.9263,-89.7145 35.9645,-89.7336 36.001,-89.7093 36.0028,-89.6937 36.0202,-89.6745 36.0879,-89.5946 36.1279,-89.5963 36.1574,-89.6294 36.1853,-89.6937 36.2252,-89.6937 36.253,-89.6016 36.2374,-89.5633 36.2513,-89.539 36.2496,-89.539 36.2756,-89.5772 36.2878,-89.612 36.3104,-89.6207 36.3243,-89.6033 36.3417,-89.5442 36.3364,-89.5199 36.3486,-89.5094 36.3747,-89.5442 36.4268,-89.5199 36.4685,-89.539 36.4981,-89.4851 36.4981,-89.4921 36.4685,-89.4677 36.4581,-89.4434 36.4685,-89.4173 36.4998,-89.3461 36.5033,-88.8352 36.5033,-88.8265 36.5033,-88.816 36.5033,-88.5171 36.5015,-88.4893 36.5015,-88.0531 36.4963,-88.0392 36.512,-88.0322 36.5398,-88.0705 36.6788,-87.8567 36.6649,-87.8428 36.6336,-87.6934 36.6371,-87.6412 36.6388,-87.3354 36.6423,-87.1146 36.6423,-87.0608 36.6423,-86.7636 36.6493,-86.5985 36.6527,-86.5637 36.6336,-86.5064 36.6527,-86.4108 36.651,-86.2057 36.6406,-85.9763 36.6284,-85.7886 36.6215,-85.4359 36.618,-85.2968 36.6249,-85.276 36.6267,-84.9753 36.6162,-84.7859 36.6041,-84.7789 36.6041,-84.261 36.5919,-84.228 36.5919,-83.9882 36.5902,-83.9308 36.5884,-83.6945 36.5832,-83.6754 36.6006,-83.472 36.5971,-82.9854 36.5937,-82.8308 36.5937,-82.6083 36.5937,-82.2938 36.5954,-82.2434 36.5954,-82.146 36.5954,-81.941 36.5937,-81.9219 36.6162,-81.8263 36.6145,-81.6473 36.6128,-81.6768 36.5884,-81.6907 36.5519,-81.7081 36.5363,-81.6959 36.5068,-81.6942 36.4668,-81.7168 36.4564,-81.7185 36.4251,-81.7411 36.4112,-81.729 36.3921,-81.7342 36.3799,-81.722 36.3521,-81.7654 36.3399,-81.7933 36.3625,-81.8558 36.3364,-81.8784 36.3139,-81.9062 36.3034,-81.9184 36.2878,-81.9323 36.2652,-82.0296 36.1244,-82.0539 36.1262,-82.08 36.1036,-82.1304 36.1053,-82.1495 36.1488,-82.1773 36.1435,-82.2225 36.1574,-82.2451 36.1314,-82.2903 36.1349,-82.3355 36.1157,-82.3546 36.1157,-82.4032 36.0879,-82.4172 36.0723,-82.4606 36.008,-82.5058 35.9784,-82.5405 35.968,-82.5579 35.9541,-82.6101 35.968,-82.6135 36.0045,-82.5909 36.0323,-82.6031 36.0393,-82.6361 36.0653,-82.7508 36.0063,-82.7752 36.001,-82.7769 35.9698,-82.8221 35.9228,-82.8516 35.9489,-82.8985 35.9454,-82.902 35.928,-82.9194 35.928,-82.902 35.8933,-82.9211 35.8672,-82.9159 35.8412,-82.9455 35.8238,-82.9611 35.7908,-82.9959 35.7734,-83.0358 35.7873,-83.0793 35.789,-83.121 35.7664,-83.161 35.7647,-83.1905 35.7282,-83.2392 35.7247,-83.2548 35.7143,-83.2548 35.6952,-83.2878 35.6726,-83.2983 35.6569,-83.3417 35.6639,-83.3973 35.6239,-83.446 35.61,-83.4981 35.5631,-83.5833 35.5631,-83.6076 35.5787,-83.6406 35.5666,-83.6632 35.5683,-83.764 35.5631,-83.8283 35.5249,-83.8804 35.5179,-83.9135 35.4762,-83.9534 35.4606,-83.9604 35.464,-84.023 35.4119,-84.0073 35.3719,-84.0386 35.3476,-84.0299 35.332,-84.0299 35.292,-84.0542 35.2694,-84.0977 35.2468,-84.1481 35.2468,-84.1881 35.2398,-84.2106 35.2659,-84.2263 35.2677,-84.2906 35.2259,-84.2923 35.2068,-84.3219 34.9879))&quot;</value>
                                    <value>35.75</value>
                                    <value>-86.25</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='188' y='28' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The average property crime rate in California is much lower. But the same in Tennessee is too high.' captured-sheet='Statewise Property Crime' id='2'>
                    <capturedDeltas>
                      <worksheet name='Statewise Property Crime'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]&gt;</run>
                              <run fontcolor='#787878'>&#10;Avg. Property crime: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>2845.2999999999997</value>
                                    <value>&quot;CALIFORNIA&quot;</value>
                                    <value>&quot;MULTIPOLYGON(((-114.6271 33.4342,-114.6514 33.4133,-114.6827 33.4185,-114.7244 33.4046,-114.707 33.3838,-114.6983 33.3525,-114.7035 33.3299,-114.7296 33.2986,-114.7192 33.2865,-114.6844 33.276,-114.674 33.2587,-114.6896 33.2448,-114.6757 33.2222,-114.6757 33.1839,-114.707 33.0918,-114.6914 33.0831,-114.6653 33.0345,-114.6462 33.0484,-114.6132 33.0275,-114.5749 33.0362,-114.5158 33.0275,-114.5019 33.0084,-114.4932 32.9719,-114.4689 32.9719,-114.4811 32.9354,-114.4637 32.9041,-114.4759 32.8398,-114.5106 32.8155,-114.5297 32.7929,-114.528 32.7582,-114.5836 32.7356,-114.6166 32.7286,-114.6879 32.7373,-114.7018 32.746,-114.7192 32.7182,-115.0116 32.6989,-116.1039 32.6187,-116.4216 32.5936,-116.8785 32.5555,-117.1252 32.5339,-117.2269 32.6956,-117.2478 32.7303,-117.2704 32.8172,-117.2773 32.9267,-117.3086 33.024,-117.3677 33.1387,-117.4546 33.2534,-117.5258 33.3299,-117.5954 33.389,-117.6388 33.4255,-117.8317 33.5558,-118.0524 33.6949,-118.1202 33.7279,-118.1671 33.7383,-118.2575 33.7192,-118.3079 33.7227,-118.3896 33.754,-118.4069 33.7835,-118.4261 33.8704,-118.4678 33.9416,-118.5234 33.9955,-118.5842 34.0216,-118.6624 34.0285,-118.8084 34.0268,-118.9422 34.0598,-118.9787 34.0685,-119.1021 34.1137,-119.1994 34.1693,-119.2776 34.2406,-119.3489 34.291,-119.4479 34.3501,-119.4844 34.364,-119.54 34.3883,-119.6096 34.4057,-119.733 34.4074,-120.1483 34.463,-120.4159 34.4804,-120.5967 34.5621,-120.6175 34.5864,-120.6245 34.6298,-120.621 34.8228,-120.6419 34.9375,-120.6419 34.967,-120.6401 35.08,-120.6506 35.1182,-120.6731 35.1443,-120.7079 35.1651,-120.7844 35.1894,-120.8348 35.2242,-120.8661 35.2729,-120.88 35.3858,-120.9025 35.4223,-121.0068 35.4849,-121.1771 35.6257,-121.2727 35.683,-121.3631 35.796,-121.5125 35.9784,-121.6672 36.1331,-121.8097 36.2513,-121.8636 36.3139,-121.9227 36.4546,-121.947 36.5832,-121.9331 36.611,-121.8879 36.6197,-121.8636 36.6319,-121.841 36.6632,-121.8254 36.7153,-121.8184 36.79,-121.8341 36.8474,-121.8723 36.9117,-121.914 36.9482,-121.947 36.9603,-122.0687 36.9673,-122.1295 36.9882,-122.2042 37.0316,-122.2946 37.1029,-122.3832 37.1706,-122.418 37.2384,-122.4006 37.3531,-122.4475 37.4852,-122.5136 37.5043,-122.5136 37.5982,-122.4962 37.6659,-122.5031 37.7076,-122.517 37.7754,-122.4736 37.8015,-122.4145 37.8067,-122.3867 37.7963,-122.3537 37.7233,-122.3728 37.7076,-122.3832 37.6989,-122.3728 37.6433,-122.3433 37.6016,-122.1921 37.5339,-122.1573 37.5339,-122.1538 37.5512,-122.1521 37.5651,-122.1799 37.6416,-122.2529 37.7493,-122.305 37.7893,-122.3172 37.8136,-122.3241 37.8797,-122.3363 37.8901,-122.3954 37.944,-122.3919 37.9596,-122.3519 38.0031,-122.3015 38.0291,-122.2876 38.0517,-122.2946 38.0674,-122.3311 38.1056,-122.3867 38.1265,-122.4076 38.1282,-122.458 38.1021,-122.4684 38.0969,-122.4805 38.0309,-122.4666 37.9874,-122.484 37.9283,-122.4284 37.8814,-122.4788 37.8328,-122.5379 37.8241,-122.5727 37.8519,-122.7186 37.9197,-122.8455 37.9944,-122.9341 38.0152,-122.9793 38.01,-122.9932 38.0205,-122.9915 38.0517,-122.9724 38.1213,-122.9706 38.1717,-122.9811 38.2446,-122.9915 38.269,-123.0228 38.295,-123.054 38.3124,-123.1409 38.4341,-123.313 38.5644,-123.4416 38.6861,-123.5407 38.7677,-123.6223 38.8355,-123.7005 38.9172,-123.7127 38.9589,-123.711 39.0528,-123.7961 39.2978,-123.8065 39.3691,-123.7892 39.5359,-123.7926 39.6037,-123.8048 39.6714,-123.8517 39.7948,-123.8795 39.8383,-124.0325 40.0016,-124.1002 40.0729,-124.3071 40.2137,-124.3557 40.3075,-124.3783 40.3735,-124.4096 40.4396,-124.3714 40.5421,-124.2063 40.8115,-124.1593 40.9123,-124.1367 40.987,-124.1454 41.1295,-124.1107 41.2633,-124.0916 41.3711,-124.0898 41.4649,-124.1072 41.5692,-124.1524 41.6978,-124.2567 41.7778,-124.2393 41.8073,-124.2132 41.9272,-124.2115 41.9985,-123.8222 41.995,-123.5181 42.0002,-123.2313 42.0037,-122.2894 42.0072,-121.4482 41.9967,-120.88 41.9933,-119.9988 41.995,-120.0006 41.1834,-120.0006 39.7218,-120.0041 39.4455,-120.0058 39.3169,-120.0041 39.1657,-120.0041 39.1118,-120.0023 39.0667,-120.0006 38.9989,-119.905 38.9328,-119.5852 38.7139,-119.328 38.5349,-119.1577 38.415,-118.4278 37.8971,-117.8334 37.4643,-117.1661 36.9708,-115.8453 35.9645,-115.6489 35.8099,-114.634 35.0018,-114.634 34.8714,-114.5871 34.8349,-114.5523 34.7654,-114.4706 34.7115,-114.4255 34.609,-114.4359 34.5951,-114.4029 34.5655,-114.3803 34.5291,-114.3855 34.4578,-114.3751 34.4474,-114.3351 34.4491,-114.2986 34.4248,-114.2882 34.4057,-114.2638 34.4004,-114.2273 34.3674,-114.1787 34.3501,-114.1387 34.3031,-114.1335 34.2597,-114.1648 34.2579,-114.2239 34.2041,-114.2291 34.1884,-114.2569 34.1728,-114.2882 34.171,-114.3229 34.138,-114.3507 34.1328,-114.389 34.1102,-114.4133 34.1085,-114.4359 34.0789,-114.4394 34.0216,-114.4654 34.0112,-114.4602 33.9955,-114.5002 33.9625,-114.5228 33.9556,-114.5349 33.933,-114.5263 33.8999,-114.5037 33.8687,-114.5297 33.8565,-114.521 33.8252,-114.528 33.8148,-114.5054 33.7609,-114.5106 33.7331,-114.495 33.7088,-114.4985 33.6966,-114.5297 33.6775,-114.5158 33.6601,-114.5315 33.6514,-114.5228 33.6132,-114.5402 33.5819,-114.5245 33.5524,-114.5593 33.5298,-114.5662 33.5124,-114.5923 33.5002,-114.6201 33.4585,-114.6271 33.4342)),((-118.3322 33.356,-118.334 33.3334,-118.3618 33.3264,-118.4243 33.3369,-118.4626 33.3612,-118.506 33.4133,-118.5373 33.4342,-118.5442 33.4498,-118.4991 33.4446,-118.4191 33.4151,-118.3322 33.356)),((-118.5807 33.0345,-118.4434 32.8763,-118.4573 32.8624,-118.5043 32.8972,-118.5581 32.9719,-118.5773 33.0101,-118.5807 33.0345)),((-119.5435 33.2795,-119.481 33.2552,-119.4688 33.2291,-119.5314 33.2448,-119.5487 33.2621,-119.5435 33.2795)),((-119.9137 34.0772,-119.6826 34.032,-119.6356 34.0303,-119.5852 34.0407,-119.5626 34.0233,-119.5957 34.0025,-119.7225 33.9747,-119.7868 33.9729,-119.8633 33.9938,-119.905 34.0529,-119.9137 34.0772)),((-120.0458 34.0007,-120.0075 33.9695,-120.018 33.9486,-120.0631 33.9277,-120.1153 33.9243,-120.1622 33.9399,-120.2161 33.992,-120.2057 34.0042,-120.0718 34.0268,-120.0458 34.0007)),((-120.3621 34.0737,-120.3377 34.0407,-120.369 34.0251,-120.442 34.0372,-120.3621 34.0737)))&quot;</value>
                                    <value>37.25</value>
                                    <value>-119.75</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-188' y='-13' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='1' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]&gt;</run>
                              <run fontcolor='#787878'>&#10;Avg. Property crime: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>3644.7272727272725</value>
                                    <value>&quot;TENNESSEE&quot;</value>
                                    <value>&quot;POLYGON((-84.3219 34.9879,-84.6208 34.9879,-84.7755 34.9879,-84.8102 34.9879,-84.9771 34.9879,-84.9805 34.9879,-85.2655 34.9844,-85.3646 34.9826,-85.4741 34.9826,-85.6044 34.9844,-85.8634 34.9879,-86.3117 34.9913,-86.3187 34.9913,-86.7844 34.9913,-86.8366 34.9913,-87.2102 34.9983,-87.2241 35,-87.6065 35.0035,-87.9853 35.0052,-88.2026 35.0087,-88.2008 34.9948,-88.3642 34.9948,-88.3798 34.9948,-88.7865 34.9948,-88.823 34.9948,-89.0176 34.9948,-89.1984 34.9948,-89.353 34.9931,-89.645 34.9948,-89.7249 34.9948,-90.3089 34.9965,-90.2932 35.0417,-90.2133 35.0261,-90.2011 35.033,-90.1751 35.1165,-90.142 35.1356,-90.0969 35.1182,-90.0656 35.1373,-90.0673 35.153,-90.0951 35.1599,-90.1177 35.1894,-90.0969 35.1947,-90.0777 35.2259,-90.1021 35.2537,-90.149 35.2555,-90.1681 35.2798,-90.1559 35.3024,-90.109 35.3041,-90.109 35.3424,-90.0743 35.3841,-90.1299 35.4136,-90.1455 35.3997,-90.1368 35.3771,-90.1733 35.3789,-90.1716 35.4136,-90.1403 35.4362,-90.1125 35.4727,-90.0812 35.4762,-90.0673 35.4658,-90.0743 35.4362,-90.0551 35.3893,-90.0412 35.3963,-90.0517 35.4067,-90.0326 35.4275,-90.0186 35.4675,-90.0482 35.5057,-90.0378 35.5492,-89.9891 35.5596,-89.9578 35.5422,-89.9509 35.5214,-89.9213 35.5144,-89.9092 35.5388,-89.9109 35.5492,-89.9422 35.5579,-89.9561 35.5892,-89.9109 35.617,-89.8953 35.6152,-89.857 35.6343,-89.8518 35.6569,-89.864 35.6708,-89.897 35.6517,-89.9318 35.6604,-89.9561 35.6934,-89.9561 35.7334,-89.9092 35.7595,-89.8744 35.7404,-89.8483 35.756,-89.8188 35.7577,-89.7823 35.8047,-89.7354 35.8064,-89.7058 35.8186,-89.7058 35.8359,-89.7719 35.8655,-89.7667 35.8898,-89.7493 35.902,-89.711 35.9055,-89.6711 35.8846,-89.645 35.9037,-89.6572 35.9263,-89.7145 35.9645,-89.7336 36.001,-89.7093 36.0028,-89.6937 36.0202,-89.6745 36.0879,-89.5946 36.1279,-89.5963 36.1574,-89.6294 36.1853,-89.6937 36.2252,-89.6937 36.253,-89.6016 36.2374,-89.5633 36.2513,-89.539 36.2496,-89.539 36.2756,-89.5772 36.2878,-89.612 36.3104,-89.6207 36.3243,-89.6033 36.3417,-89.5442 36.3364,-89.5199 36.3486,-89.5094 36.3747,-89.5442 36.4268,-89.5199 36.4685,-89.539 36.4981,-89.4851 36.4981,-89.4921 36.4685,-89.4677 36.4581,-89.4434 36.4685,-89.4173 36.4998,-89.3461 36.5033,-88.8352 36.5033,-88.8265 36.5033,-88.816 36.5033,-88.5171 36.5015,-88.4893 36.5015,-88.0531 36.4963,-88.0392 36.512,-88.0322 36.5398,-88.0705 36.6788,-87.8567 36.6649,-87.8428 36.6336,-87.6934 36.6371,-87.6412 36.6388,-87.3354 36.6423,-87.1146 36.6423,-87.0608 36.6423,-86.7636 36.6493,-86.5985 36.6527,-86.5637 36.6336,-86.5064 36.6527,-86.4108 36.651,-86.2057 36.6406,-85.9763 36.6284,-85.7886 36.6215,-85.4359 36.618,-85.2968 36.6249,-85.276 36.6267,-84.9753 36.6162,-84.7859 36.6041,-84.7789 36.6041,-84.261 36.5919,-84.228 36.5919,-83.9882 36.5902,-83.9308 36.5884,-83.6945 36.5832,-83.6754 36.6006,-83.472 36.5971,-82.9854 36.5937,-82.8308 36.5937,-82.6083 36.5937,-82.2938 36.5954,-82.2434 36.5954,-82.146 36.5954,-81.941 36.5937,-81.9219 36.6162,-81.8263 36.6145,-81.6473 36.6128,-81.6768 36.5884,-81.6907 36.5519,-81.7081 36.5363,-81.6959 36.5068,-81.6942 36.4668,-81.7168 36.4564,-81.7185 36.4251,-81.7411 36.4112,-81.729 36.3921,-81.7342 36.3799,-81.722 36.3521,-81.7654 36.3399,-81.7933 36.3625,-81.8558 36.3364,-81.8784 36.3139,-81.9062 36.3034,-81.9184 36.2878,-81.9323 36.2652,-82.0296 36.1244,-82.0539 36.1262,-82.08 36.1036,-82.1304 36.1053,-82.1495 36.1488,-82.1773 36.1435,-82.2225 36.1574,-82.2451 36.1314,-82.2903 36.1349,-82.3355 36.1157,-82.3546 36.1157,-82.4032 36.0879,-82.4172 36.0723,-82.4606 36.008,-82.5058 35.9784,-82.5405 35.968,-82.5579 35.9541,-82.6101 35.968,-82.6135 36.0045,-82.5909 36.0323,-82.6031 36.0393,-82.6361 36.0653,-82.7508 36.0063,-82.7752 36.001,-82.7769 35.9698,-82.8221 35.9228,-82.8516 35.9489,-82.8985 35.9454,-82.902 35.928,-82.9194 35.928,-82.902 35.8933,-82.9211 35.8672,-82.9159 35.8412,-82.9455 35.8238,-82.9611 35.7908,-82.9959 35.7734,-83.0358 35.7873,-83.0793 35.789,-83.121 35.7664,-83.161 35.7647,-83.1905 35.7282,-83.2392 35.7247,-83.2548 35.7143,-83.2548 35.6952,-83.2878 35.6726,-83.2983 35.6569,-83.3417 35.6639,-83.3973 35.6239,-83.446 35.61,-83.4981 35.5631,-83.5833 35.5631,-83.6076 35.5787,-83.6406 35.5666,-83.6632 35.5683,-83.764 35.5631,-83.8283 35.5249,-83.8804 35.5179,-83.9135 35.4762,-83.9534 35.4606,-83.9604 35.464,-84.023 35.4119,-84.0073 35.3719,-84.0386 35.3476,-84.0299 35.332,-84.0299 35.292,-84.0542 35.2694,-84.0977 35.2468,-84.1481 35.2468,-84.1881 35.2398,-84.2106 35.2659,-84.2263 35.2677,-84.2906 35.2259,-84.2923 35.2068,-84.3219 34.9879))&quot;</value>
                                    <value>35.75</value>
                                    <value>-86.25</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='188' y='65' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]' field-type='quantitative' max='20262964.406379953' min='-5067857.1292238748' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]' field-type='quantitative' max='3850186.014161814' min='-23358212.670374934' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The average violent crime rate in California is also low. But the same in Tennessee is too high.' captured-sheet='Statewise Violent Crime' id='3'>
                    <capturedDeltas>
                      <worksheet name='Statewise Violent Crime'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]&gt;</run>
                              <run fontcolor='#787878'>&#10;Avg. Violent crime: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>666.60000000000014</value>
                                    <value>&quot;TENNESSEE&quot;</value>
                                    <value>&quot;POLYGON((-84.3219 34.9879,-84.6208 34.9879,-84.7755 34.9879,-84.8102 34.9879,-84.9771 34.9879,-84.9805 34.9879,-85.2655 34.9844,-85.3646 34.9826,-85.4741 34.9826,-85.6044 34.9844,-85.8634 34.9879,-86.3117 34.9913,-86.3187 34.9913,-86.7844 34.9913,-86.8366 34.9913,-87.2102 34.9983,-87.2241 35,-87.6065 35.0035,-87.9853 35.0052,-88.2026 35.0087,-88.2008 34.9948,-88.3642 34.9948,-88.3798 34.9948,-88.7865 34.9948,-88.823 34.9948,-89.0176 34.9948,-89.1984 34.9948,-89.353 34.9931,-89.645 34.9948,-89.7249 34.9948,-90.3089 34.9965,-90.2932 35.0417,-90.2133 35.0261,-90.2011 35.033,-90.1751 35.1165,-90.142 35.1356,-90.0969 35.1182,-90.0656 35.1373,-90.0673 35.153,-90.0951 35.1599,-90.1177 35.1894,-90.0969 35.1947,-90.0777 35.2259,-90.1021 35.2537,-90.149 35.2555,-90.1681 35.2798,-90.1559 35.3024,-90.109 35.3041,-90.109 35.3424,-90.0743 35.3841,-90.1299 35.4136,-90.1455 35.3997,-90.1368 35.3771,-90.1733 35.3789,-90.1716 35.4136,-90.1403 35.4362,-90.1125 35.4727,-90.0812 35.4762,-90.0673 35.4658,-90.0743 35.4362,-90.0551 35.3893,-90.0412 35.3963,-90.0517 35.4067,-90.0326 35.4275,-90.0186 35.4675,-90.0482 35.5057,-90.0378 35.5492,-89.9891 35.5596,-89.9578 35.5422,-89.9509 35.5214,-89.9213 35.5144,-89.9092 35.5388,-89.9109 35.5492,-89.9422 35.5579,-89.9561 35.5892,-89.9109 35.617,-89.8953 35.6152,-89.857 35.6343,-89.8518 35.6569,-89.864 35.6708,-89.897 35.6517,-89.9318 35.6604,-89.9561 35.6934,-89.9561 35.7334,-89.9092 35.7595,-89.8744 35.7404,-89.8483 35.756,-89.8188 35.7577,-89.7823 35.8047,-89.7354 35.8064,-89.7058 35.8186,-89.7058 35.8359,-89.7719 35.8655,-89.7667 35.8898,-89.7493 35.902,-89.711 35.9055,-89.6711 35.8846,-89.645 35.9037,-89.6572 35.9263,-89.7145 35.9645,-89.7336 36.001,-89.7093 36.0028,-89.6937 36.0202,-89.6745 36.0879,-89.5946 36.1279,-89.5963 36.1574,-89.6294 36.1853,-89.6937 36.2252,-89.6937 36.253,-89.6016 36.2374,-89.5633 36.2513,-89.539 36.2496,-89.539 36.2756,-89.5772 36.2878,-89.612 36.3104,-89.6207 36.3243,-89.6033 36.3417,-89.5442 36.3364,-89.5199 36.3486,-89.5094 36.3747,-89.5442 36.4268,-89.5199 36.4685,-89.539 36.4981,-89.4851 36.4981,-89.4921 36.4685,-89.4677 36.4581,-89.4434 36.4685,-89.4173 36.4998,-89.3461 36.5033,-88.8352 36.5033,-88.8265 36.5033,-88.816 36.5033,-88.5171 36.5015,-88.4893 36.5015,-88.0531 36.4963,-88.0392 36.512,-88.0322 36.5398,-88.0705 36.6788,-87.8567 36.6649,-87.8428 36.6336,-87.6934 36.6371,-87.6412 36.6388,-87.3354 36.6423,-87.1146 36.6423,-87.0608 36.6423,-86.7636 36.6493,-86.5985 36.6527,-86.5637 36.6336,-86.5064 36.6527,-86.4108 36.651,-86.2057 36.6406,-85.9763 36.6284,-85.7886 36.6215,-85.4359 36.618,-85.2968 36.6249,-85.276 36.6267,-84.9753 36.6162,-84.7859 36.6041,-84.7789 36.6041,-84.261 36.5919,-84.228 36.5919,-83.9882 36.5902,-83.9308 36.5884,-83.6945 36.5832,-83.6754 36.6006,-83.472 36.5971,-82.9854 36.5937,-82.8308 36.5937,-82.6083 36.5937,-82.2938 36.5954,-82.2434 36.5954,-82.146 36.5954,-81.941 36.5937,-81.9219 36.6162,-81.8263 36.6145,-81.6473 36.6128,-81.6768 36.5884,-81.6907 36.5519,-81.7081 36.5363,-81.6959 36.5068,-81.6942 36.4668,-81.7168 36.4564,-81.7185 36.4251,-81.7411 36.4112,-81.729 36.3921,-81.7342 36.3799,-81.722 36.3521,-81.7654 36.3399,-81.7933 36.3625,-81.8558 36.3364,-81.8784 36.3139,-81.9062 36.3034,-81.9184 36.2878,-81.9323 36.2652,-82.0296 36.1244,-82.0539 36.1262,-82.08 36.1036,-82.1304 36.1053,-82.1495 36.1488,-82.1773 36.1435,-82.2225 36.1574,-82.2451 36.1314,-82.2903 36.1349,-82.3355 36.1157,-82.3546 36.1157,-82.4032 36.0879,-82.4172 36.0723,-82.4606 36.008,-82.5058 35.9784,-82.5405 35.968,-82.5579 35.9541,-82.6101 35.968,-82.6135 36.0045,-82.5909 36.0323,-82.6031 36.0393,-82.6361 36.0653,-82.7508 36.0063,-82.7752 36.001,-82.7769 35.9698,-82.8221 35.9228,-82.8516 35.9489,-82.8985 35.9454,-82.902 35.928,-82.9194 35.928,-82.902 35.8933,-82.9211 35.8672,-82.9159 35.8412,-82.9455 35.8238,-82.9611 35.7908,-82.9959 35.7734,-83.0358 35.7873,-83.0793 35.789,-83.121 35.7664,-83.161 35.7647,-83.1905 35.7282,-83.2392 35.7247,-83.2548 35.7143,-83.2548 35.6952,-83.2878 35.6726,-83.2983 35.6569,-83.3417 35.6639,-83.3973 35.6239,-83.446 35.61,-83.4981 35.5631,-83.5833 35.5631,-83.6076 35.5787,-83.6406 35.5666,-83.6632 35.5683,-83.764 35.5631,-83.8283 35.5249,-83.8804 35.5179,-83.9135 35.4762,-83.9534 35.4606,-83.9604 35.464,-84.023 35.4119,-84.0073 35.3719,-84.0386 35.3476,-84.0299 35.332,-84.0299 35.292,-84.0542 35.2694,-84.0977 35.2468,-84.1481 35.2468,-84.1881 35.2398,-84.2106 35.2659,-84.2263 35.2677,-84.2906 35.2259,-84.2923 35.2068,-84.3219 34.9879))&quot;</value>
                                    <value>35.75</value>
                                    <value>-86.25</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='76' y='-155' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='1' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]&gt;</run>
                              <run fontcolor='#787878'>&#10;Avg. Violent crime: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>466.04000000000008</value>
                                    <value>&quot;CALIFORNIA&quot;</value>
                                    <value>&quot;MULTIPOLYGON(((-114.6271 33.4342,-114.6514 33.4133,-114.6827 33.4185,-114.7244 33.4046,-114.707 33.3838,-114.6983 33.3525,-114.7035 33.3299,-114.7296 33.2986,-114.7192 33.2865,-114.6844 33.276,-114.674 33.2587,-114.6896 33.2448,-114.6757 33.2222,-114.6757 33.1839,-114.707 33.0918,-114.6914 33.0831,-114.6653 33.0345,-114.6462 33.0484,-114.6132 33.0275,-114.5749 33.0362,-114.5158 33.0275,-114.5019 33.0084,-114.4932 32.9719,-114.4689 32.9719,-114.4811 32.9354,-114.4637 32.9041,-114.4759 32.8398,-114.5106 32.8155,-114.5297 32.7929,-114.528 32.7582,-114.5836 32.7356,-114.6166 32.7286,-114.6879 32.7373,-114.7018 32.746,-114.7192 32.7182,-115.0116 32.6989,-116.1039 32.6187,-116.4216 32.5936,-116.8785 32.5555,-117.1252 32.5339,-117.2269 32.6956,-117.2478 32.7303,-117.2704 32.8172,-117.2773 32.9267,-117.3086 33.024,-117.3677 33.1387,-117.4546 33.2534,-117.5258 33.3299,-117.5954 33.389,-117.6388 33.4255,-117.8317 33.5558,-118.0524 33.6949,-118.1202 33.7279,-118.1671 33.7383,-118.2575 33.7192,-118.3079 33.7227,-118.3896 33.754,-118.4069 33.7835,-118.4261 33.8704,-118.4678 33.9416,-118.5234 33.9955,-118.5842 34.0216,-118.6624 34.0285,-118.8084 34.0268,-118.9422 34.0598,-118.9787 34.0685,-119.1021 34.1137,-119.1994 34.1693,-119.2776 34.2406,-119.3489 34.291,-119.4479 34.3501,-119.4844 34.364,-119.54 34.3883,-119.6096 34.4057,-119.733 34.4074,-120.1483 34.463,-120.4159 34.4804,-120.5967 34.5621,-120.6175 34.5864,-120.6245 34.6298,-120.621 34.8228,-120.6419 34.9375,-120.6419 34.967,-120.6401 35.08,-120.6506 35.1182,-120.6731 35.1443,-120.7079 35.1651,-120.7844 35.1894,-120.8348 35.2242,-120.8661 35.2729,-120.88 35.3858,-120.9025 35.4223,-121.0068 35.4849,-121.1771 35.6257,-121.2727 35.683,-121.3631 35.796,-121.5125 35.9784,-121.6672 36.1331,-121.8097 36.2513,-121.8636 36.3139,-121.9227 36.4546,-121.947 36.5832,-121.9331 36.611,-121.8879 36.6197,-121.8636 36.6319,-121.841 36.6632,-121.8254 36.7153,-121.8184 36.79,-121.8341 36.8474,-121.8723 36.9117,-121.914 36.9482,-121.947 36.9603,-122.0687 36.9673,-122.1295 36.9882,-122.2042 37.0316,-122.2946 37.1029,-122.3832 37.1706,-122.418 37.2384,-122.4006 37.3531,-122.4475 37.4852,-122.5136 37.5043,-122.5136 37.5982,-122.4962 37.6659,-122.5031 37.7076,-122.517 37.7754,-122.4736 37.8015,-122.4145 37.8067,-122.3867 37.7963,-122.3537 37.7233,-122.3728 37.7076,-122.3832 37.6989,-122.3728 37.6433,-122.3433 37.6016,-122.1921 37.5339,-122.1573 37.5339,-122.1538 37.5512,-122.1521 37.5651,-122.1799 37.6416,-122.2529 37.7493,-122.305 37.7893,-122.3172 37.8136,-122.3241 37.8797,-122.3363 37.8901,-122.3954 37.944,-122.3919 37.9596,-122.3519 38.0031,-122.3015 38.0291,-122.2876 38.0517,-122.2946 38.0674,-122.3311 38.1056,-122.3867 38.1265,-122.4076 38.1282,-122.458 38.1021,-122.4684 38.0969,-122.4805 38.0309,-122.4666 37.9874,-122.484 37.9283,-122.4284 37.8814,-122.4788 37.8328,-122.5379 37.8241,-122.5727 37.8519,-122.7186 37.9197,-122.8455 37.9944,-122.9341 38.0152,-122.9793 38.01,-122.9932 38.0205,-122.9915 38.0517,-122.9724 38.1213,-122.9706 38.1717,-122.9811 38.2446,-122.9915 38.269,-123.0228 38.295,-123.054 38.3124,-123.1409 38.4341,-123.313 38.5644,-123.4416 38.6861,-123.5407 38.7677,-123.6223 38.8355,-123.7005 38.9172,-123.7127 38.9589,-123.711 39.0528,-123.7961 39.2978,-123.8065 39.3691,-123.7892 39.5359,-123.7926 39.6037,-123.8048 39.6714,-123.8517 39.7948,-123.8795 39.8383,-124.0325 40.0016,-124.1002 40.0729,-124.3071 40.2137,-124.3557 40.3075,-124.3783 40.3735,-124.4096 40.4396,-124.3714 40.5421,-124.2063 40.8115,-124.1593 40.9123,-124.1367 40.987,-124.1454 41.1295,-124.1107 41.2633,-124.0916 41.3711,-124.0898 41.4649,-124.1072 41.5692,-124.1524 41.6978,-124.2567 41.7778,-124.2393 41.8073,-124.2132 41.9272,-124.2115 41.9985,-123.8222 41.995,-123.5181 42.0002,-123.2313 42.0037,-122.2894 42.0072,-121.4482 41.9967,-120.88 41.9933,-119.9988 41.995,-120.0006 41.1834,-120.0006 39.7218,-120.0041 39.4455,-120.0058 39.3169,-120.0041 39.1657,-120.0041 39.1118,-120.0023 39.0667,-120.0006 38.9989,-119.905 38.9328,-119.5852 38.7139,-119.328 38.5349,-119.1577 38.415,-118.4278 37.8971,-117.8334 37.4643,-117.1661 36.9708,-115.8453 35.9645,-115.6489 35.8099,-114.634 35.0018,-114.634 34.8714,-114.5871 34.8349,-114.5523 34.7654,-114.4706 34.7115,-114.4255 34.609,-114.4359 34.5951,-114.4029 34.5655,-114.3803 34.5291,-114.3855 34.4578,-114.3751 34.4474,-114.3351 34.4491,-114.2986 34.4248,-114.2882 34.4057,-114.2638 34.4004,-114.2273 34.3674,-114.1787 34.3501,-114.1387 34.3031,-114.1335 34.2597,-114.1648 34.2579,-114.2239 34.2041,-114.2291 34.1884,-114.2569 34.1728,-114.2882 34.171,-114.3229 34.138,-114.3507 34.1328,-114.389 34.1102,-114.4133 34.1085,-114.4359 34.0789,-114.4394 34.0216,-114.4654 34.0112,-114.4602 33.9955,-114.5002 33.9625,-114.5228 33.9556,-114.5349 33.933,-114.5263 33.8999,-114.5037 33.8687,-114.5297 33.8565,-114.521 33.8252,-114.528 33.8148,-114.5054 33.7609,-114.5106 33.7331,-114.495 33.7088,-114.4985 33.6966,-114.5297 33.6775,-114.5158 33.6601,-114.5315 33.6514,-114.5228 33.6132,-114.5402 33.5819,-114.5245 33.5524,-114.5593 33.5298,-114.5662 33.5124,-114.5923 33.5002,-114.6201 33.4585,-114.6271 33.4342)),((-118.3322 33.356,-118.334 33.3334,-118.3618 33.3264,-118.4243 33.3369,-118.4626 33.3612,-118.506 33.4133,-118.5373 33.4342,-118.5442 33.4498,-118.4991 33.4446,-118.4191 33.4151,-118.3322 33.356)),((-118.5807 33.0345,-118.4434 32.8763,-118.4573 32.8624,-118.5043 32.8972,-118.5581 32.9719,-118.5773 33.0101,-118.5807 33.0345)),((-119.5435 33.2795,-119.481 33.2552,-119.4688 33.2291,-119.5314 33.2448,-119.5487 33.2621,-119.5435 33.2795)),((-119.9137 34.0772,-119.6826 34.032,-119.6356 34.0303,-119.5852 34.0407,-119.5626 34.0233,-119.5957 34.0025,-119.7225 33.9747,-119.7868 33.9729,-119.8633 33.9938,-119.905 34.0529,-119.9137 34.0772)),((-120.0458 34.0007,-120.0075 33.9695,-120.018 33.9486,-120.0631 33.9277,-120.1153 33.9243,-120.1622 33.9399,-120.2161 33.992,-120.2057 34.0042,-120.0718 34.0268,-120.0458 34.0007)),((-120.3621 34.0737,-120.3377 34.0407,-120.369 34.0251,-120.442 34.0372,-120.3621 34.0737)))&quot;</value>
                                    <value>37.25</value>
                                    <value>-119.75</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-165' y='-56' />
                          </annotation>
                        </annotations>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='California provides better unemployments and also ranks 1 for the process friendliness. Tennessee provides very little unemployment benefits' captured-sheet='Unemployment benefits' id='4' />
                  <story-point caption='The average median household income in California has always been higher than the US average. But the same is too low in Tennessee.' captured-sheet='Statewise Median Income ' id='5' />
                  <story-point caption='The average median income in California is higher than the US average. But it has always been low for Tennessee' captured-sheet='US Median Income' id='7' />
                  <story-point caption='The motive for crime is thus low in California than in Tennessee.' captured-sheet='Dashboard 1' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Statewise Unemployment Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Statewise Property Crime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Statewise Violent Crime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Unemployment benefits'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Median Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;CALIFORNIA&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[none:Year:qk]</field>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Statewise Median Income '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='11' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='US Median Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Statewise Property Crime'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Statewise Unemployment Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Statewise Violent Crime'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Unemployment benefits'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Statewise Median Income '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Median Income'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='3' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Median Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Statewise Median Income ' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Statewise Property Crime' width='192'>
      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
      L+Zls2wKN6LgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Statewise Unemployment Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Statewise Violent Crime' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      AKLRkAAQjeY/C9V41m+garsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='US Median Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Unemployment benefits' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
