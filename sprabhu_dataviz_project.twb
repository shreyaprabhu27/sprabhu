<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='win' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Project_new' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Unemploymentbenefits' inline='true' name='federated.0ym66pd14s03oo1h5n4ke00n64zl' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Unemploymentbenefits' name='textscan.0sdaibr0xey5611ch7tp51m1269g'>
            <connection class='textscan' directory='G:/Santa Clara University/Q3/Dashboards/Individual prj/FINAL CLEANED DATA' filename='Unemploymentbenefits.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0sdaibr0xey5611ch7tp51m1269g' name='Unemploymentbenefits.csv' table='[Unemploymentbenefits#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='States' ordinal='1' />
            <column datatype='integer' name='Max Weeks of Benefits' ordinal='2' />
            <column datatype='integer' name='Max.Weekly Benefits' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Unemploymentbenefits.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[States]</local-name>
            <parent-name>[Unemploymentbenefits.csv]</parent-name>
            <remote-alias>States</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max Weeks of Benefits</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Max Weeks of Benefits]</local-name>
            <parent-name>[Unemploymentbenefits.csv]</parent-name>
            <remote-alias>Max Weeks of Benefits</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max.Weekly Benefits</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Max.Weekly Benefits]</local-name>
            <parent-name>[Unemploymentbenefits.csv]</parent-name>
            <remote-alias>Max.Weekly Benefits</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Unemploymentbenefits.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Max Total Benefit' datatype='integer' name='[Calculation_295830211260784640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Max.Weekly Benefits]*[Max Weeks of Benefits]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Owner/Documents/My Tableau Repository/Datasources/Unemploymentbenefits.tde' schema='Extract' tablename='Extract' update-time='05/26/2017 10:24:48 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_295830211260784640]' formula='[Max.Weekly Benefits]*[Max Weeks of Benefits]' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51' timestamp-start='2017-05-26 22:24:48.703' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_295830211260784640</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Calculation_295830211260784640]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_295830211260784640</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>549100.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10766.666666666666</statistic>
                <statistic aggregation='Min' datatype='integer'>5225</statistic>
                <statistic aggregation='Max' datatype='integer'>18000</statistic>
                <statistic aggregation='Stdev' datatype='real'>3126.8894426676916</statistic>
                <statistic aggregation='StdevP' datatype='real'>3096.0818988171172</statistic>
                <statistic aggregation='Var' datatype='real'>9777437.586666666</statistic>
                <statistic aggregation='VarP' datatype='real'>9585723.1241830066</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6400848546.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>Unemploymentbenefits.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1275.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.866068747318506</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.719601443879744</statistic>
                <statistic aggregation='Var' datatype='real'>221.0</statistic>
                <statistic aggregation='VarP' datatype='real'>216.66666666666666</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='integer'>25</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>42925.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Max Weeks of Benefits</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Max Weeks of Benefits]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Max Weeks of Benefits</remote-alias>
              <ordinal>2</ordinal>
              <family>Unemploymentbenefits.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1291.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.313725490196077</statistic>
                <statistic aggregation='Min' datatype='integer'>18</statistic>
                <statistic aggregation='Max' datatype='integer'>30</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.3107591486646233</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2879924934611484</statistic>
                <statistic aggregation='Var' datatype='real'>5.3396078431372551</statistic>
                <statistic aggregation='VarP' datatype='real'>5.234909650134564</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>32947.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Max.Weekly Benefits</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Max.Weekly Benefits]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Max.Weekly Benefits</remote-alias>
              <ordinal>3</ordinal>
              <family>Unemploymentbenefits.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>21511.0</statistic>
                <statistic aggregation='Avg' datatype='real'>421.78431372549022</statistic>
                <statistic aggregation='Min' datatype='integer'>221</statistic>
                <statistic aggregation='Max' datatype='integer'>636</statistic>
                <statistic aggregation='Stdev' datatype='real'>104.41231991015049</statistic>
                <statistic aggregation='StdevP' datatype='real'>103.38360201553</statistic>
                <statistic aggregation='Var' datatype='real'>10901.932549019608</statistic>
                <statistic aggregation='VarP' datatype='real'>10688.169165705498</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9618099.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>51.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>51.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>States</remote-name>
              <remote-type>129</remote-type>
              <local-name>[States]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>States</remote-alias>
              <ordinal>5</ordinal>
              <family>Unemploymentbenefits.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ALABAMA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WYOMING&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;MISSOURI&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.404545' measure-ordering='alphabetic' measure-percentage='0.595455' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='USmedianhousehold' inline='true' name='federated.1dyvsfe05g5nqp13rkitw0xb5cqm' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='USmedianhousehold' name='textscan.0jw7y120bepuon1evrt1q0pjm8ci'>
            <connection class='textscan' directory='G:/Santa Clara University/Q3/Dashboards/Individual prj/FINAL CLEANED DATA' filename='USmedianhousehold.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0jw7y120bepuon1evrt1q0pjm8ci' name='USmedianhousehold.csv' table='[USmedianhousehold#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='US Household Median Income' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[USmedianhousehold.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[USmedianhousehold.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US Household Median Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[US Household Median Income]</local-name>
            <parent-name>[USmedianhousehold.csv]</parent-name>
            <remote-alias>US Household Median Income</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[USmedianhousehold.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Owner/Documents/My Tableau Repository/Datasources/USmedianhousehold.tde' schema='Extract' tablename='Extract' update-time='05/26/2017 10:25:13 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11' timestamp-start='2017-05-26 22:25:13.677' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>USmedianhousehold.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>55.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.3166247903553998</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1622776601683795</statistic>
                <statistic aggregation='Var' datatype='real'>11.0</statistic>
                <statistic aggregation='VarP' datatype='real'>10.0</statistic>
                <statistic aggregation='Count' datatype='integer'>11</statistic>
                <statistic aggregation='Median' datatype='integer'>4</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>385.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;desc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>11</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>11.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>US Household Median Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[US Household Median Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>US Household Median Income</remote-alias>
              <ordinal>2</ordinal>
              <family>USmedianhousehold.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>558945.0</statistic>
                <statistic aggregation='Avg' datatype='real'>50813.181818181816</statistic>
                <statistic aggregation='Min' datatype='integer'>46326</statistic>
                <statistic aggregation='Max' datatype='integer'>56516</statistic>
                <statistic aggregation='Stdev' datatype='real'>2826.69601542797</statistic>
                <statistic aggregation='StdevP' datatype='real'>2695.1489018801512</statistic>
                <statistic aggregation='Var' datatype='real'>7990210.3636363633</statistic>
                <statistic aggregation='VarP' datatype='real'>7263827.603305785</statistic>
                <statistic aggregation='Count' datatype='integer'>11</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>28481676015.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>3</ordinal>
              <family>USmedianhousehold.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>22110.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2010.0</statistic>
                <statistic aggregation='Min' datatype='integer'>2005</statistic>
                <statistic aggregation='Max' datatype='integer'>2015</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.3166247903553998</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1622776601683795</statistic>
                <statistic aggregation='Var' datatype='real'>11.0</statistic>
                <statistic aggregation='VarP' datatype='real'>10.0</statistic>
                <statistic aggregation='Count' datatype='integer'>11</statistic>
                <statistic aggregation='Median' datatype='integer'>2010</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>44441210.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.452273' measure-ordering='alphabetic' measure-percentage='0.547727' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='allStatesCrimerate' inline='true' name='federated.1pdak030h08zzb11m9gm91chd6yk' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='allStatesCrimerate' name='textscan.16n7gg31byoyb110i4gz001s9ur4'>
            <connection class='textscan' directory='G:/Santa Clara University/Q3/Dashboards/Individual prj/FINAL CLEANED DATA' filename='allStatesCrimerate.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.16n7gg31byoyb110i4gz001s9ur4' name='allStatesCrimerate.csv' table='[allStatesCrimerate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='States' ordinal='2' />
            <column datatype='real' name='Violent crime' ordinal='3' />
            <column datatype='real' name='Murder and nonnegligent manslaughter' ordinal='4' />
            <column datatype='real' name='Robbery' ordinal='5' />
            <column datatype='real' name='Aggravated assault' ordinal='6' />
            <column datatype='real' name='Property crime' ordinal='7' />
            <column datatype='real' name='Burglary' ordinal='8' />
            <column datatype='real' name='Larceny-theft' ordinal='9' />
            <column datatype='real' name='Motor vehicle theft' ordinal='10' />
            <column datatype='real' name='Unemployment Rate' ordinal='11' />
            <column datatype='integer' name='Median Household Income' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[States]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>States</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Violent crime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Violent crime]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Violent crime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Murder and nonnegligent manslaughter</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Murder and nonnegligent manslaughter]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Murder and nonnegligent manslaughter</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Robbery</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Robbery]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Robbery</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aggravated assault</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aggravated assault]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Aggravated assault</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property crime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Property crime]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Property crime</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Burglary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Burglary]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Burglary</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Larceny-theft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Larceny-theft]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Larceny-theft</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Motor vehicle theft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Motor vehicle theft]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Motor vehicle theft</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment Rate]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Unemployment Rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Household Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median Household Income]</local-name>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias>Median Household Income</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[allStatesCrimerate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Median Household Income]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Median Household Income]' derivation='Avg' name='[avg:Median Household Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Owner/Documents/My Tableau Repository/Datasources/allStatesCrimerate.tde' schema='Extract' tablename='Extract' update-time='05/26/2017 10:24:06 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='547' timestamp-start='2017-05-26 22:24:06.331' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Aggravated assault</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Aggravated assault]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Aggravated assault</remote-alias>
              <ordinal>0</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>512</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>137530.19999999995</statistic>
                <statistic aggregation='Avg' datatype='real'>251.42632541133446</statistic>
                <statistic aggregation='Min' datatype='real'>59.0</statistic>
                <statistic aggregation='Max' datatype='real'>789.10000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>124.78783841808747</statistic>
                <statistic aggregation='StdevP' datatype='real'>124.67372057216147</statistic>
                <statistic aggregation='Var' datatype='real'>15572.004617058707</statistic>
                <statistic aggregation='VarP' datatype='real'>15543.536601305399</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>43081027.339999951</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Burglary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Burglary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Burglary</remote-alias>
              <ordinal>1</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>531</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>350776.69999999995</statistic>
                <statistic aggregation='Avg' datatype='real'>641.27367458866536</statistic>
                <statistic aggregation='Min' datatype='real'>223.69999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>1212.7</statistic>
                <statistic aggregation='Stdev' datatype='real'>231.35696219849953</statistic>
                <statistic aggregation='StdevP' datatype='real'>231.14538742886839</statistic>
                <statistic aggregation='Var' datatype='real'>53526.043957717935</statistic>
                <statistic aggregation='VarP' datatype='real'>53428.190129641669</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>254169083.36999986</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>2</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>13416.0</statistic>
                <statistic aggregation='Avg' datatype='real'>24.526508226691043</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.601442903178633</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.58808995763005</statistic>
                <statistic aggregation='Var' datatype='real'>213.20213485478567</statistic>
                <statistic aggregation='VarP' datatype='real'>212.81236861190672</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>445456.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Larceny-theft</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Larceny-theft]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Larceny-theft</remote-alias>
              <ordinal>3</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>536</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1125874.8000000005</statistic>
                <statistic aggregation='Avg' datatype='real'>2058.2720292504578</statistic>
                <statistic aggregation='Min' datatype='real'>1063.8</statistic>
                <statistic aggregation='Max' datatype='real'>4082.3000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>465.72645208559993</statistic>
                <statistic aggregation='StdevP' datatype='real'>465.30054760503111</statistic>
                <statistic aggregation='Var' datatype='real'>216901.12817224063</statistic>
                <statistic aggregation='VarP' datatype='real'>216504.59960154185</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2435784625.2599983</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median Household Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median Household Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median Household Income</remote-alias>
              <ordinal>4</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>544</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>28040492.0</statistic>
                <statistic aggregation='Avg' datatype='real'>51262.325411334554</statistic>
                <statistic aggregation='Min' datatype='integer'>32338</statistic>
                <statistic aggregation='Max' datatype='integer'>76165</statistic>
                <statistic aggregation='Stdev' datatype='real'>8551.7631010027271</statistic>
                <statistic aggregation='StdevP' datatype='real'>8543.9425569791492</statistic>
                <statistic aggregation='Var' datatype='real'>73132652.135671765</statistic>
                <statistic aggregation='VarP' datatype='real'>72998954.41695939</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1477351253664.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Motor vehicle theft</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Motor vehicle theft]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Motor vehicle theft</remote-alias>
              <ordinal>5</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>511</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>142156.49999999997</statistic>
                <statistic aggregation='Avg' datatype='real'>259.8839122486288</statistic>
                <statistic aggregation='Min' datatype='real'>28.399999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>1402.3</statistic>
                <statistic aggregation='Stdev' datatype='real'>170.33443519726234</statistic>
                <statistic aggregation='StdevP' datatype='real'>170.17866521936909</statistic>
                <statistic aggregation='Var' datatype='real'>29013.819813970367</statistic>
                <statistic aggregation='VarP' datatype='real'>28960.778095846108</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>52785732.990000017</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Murder and nonnegligent manslaughter</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Murder and nonnegligent manslaughter]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Murder and nonnegligent manslaughter</remote-alias>
              <ordinal>6</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>101</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2632.5000000000023</statistic>
                <statistic aggregation='Avg' datatype='real'>4.8126142595978108</statistic>
                <statistic aggregation='Min' datatype='real'>0.5</statistic>
                <statistic aggregation='Max' datatype='real'>35.399999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.6185326194418606</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.6152234896966995</statistic>
                <statistic aggregation='Var' datatype='real'>13.093778317964773</statistic>
                <statistic aggregation='VarP' datatype='real'>13.069840880454782</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19818.410000000014</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>7</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>547.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>547.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Property crime</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Property crime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Property crime</remote-alias>
              <ordinal>8</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>538</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1618807.0999999994</statistic>
                <statistic aggregation='Avg' datatype='real'>2959.4279707495421</statistic>
                <statistic aggregation='Min' datatype='real'>1406.5999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>5182.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>744.1172395245286</statistic>
                <statistic aggregation='StdevP' datatype='real'>743.43674807946934</statistic>
                <statistic aggregation='Var' datatype='real'>553710.46615760459</statistic>
                <statistic aggregation='VarP' datatype='real'>552698.19839497644</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5093068925.5100012</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Robbery</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Robbery]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Robbery</remote-alias>
              <ordinal>9</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>451</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>58103.399999999965</statistic>
                <statistic aggregation='Avg' datatype='real'>106.22193784277873</statistic>
                <statistic aggregation='Min' datatype='real'>7.4000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>748.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>95.711711103666644</statistic>
                <statistic aggregation='StdevP' datatype='real'>95.624183228839243</statistic>
                <statistic aggregation='Var' datatype='real'>9160.7316423917437</statistic>
                <statistic aggregation='VarP' datatype='real'>9143.9844181826193</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>11173615.219999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>States</remote-name>
              <remote-type>129</remote-type>
              <local-name>[States]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>States</remote-alias>
              <ordinal>10</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ALABAMA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WYOMING&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unemployment Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unemployment Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unemployment Rate</remote-alias>
              <ordinal>11</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>90</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3459.7999999999979</statistic>
                <statistic aggregation='Avg' datatype='real'>6.3250457038391188</statistic>
                <statistic aggregation='Min' datatype='real'>2.6000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>13.699999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.180426947579662</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1784329581844526</statistic>
                <statistic aggregation='Var' datatype='real'>4.7542616737315617</statistic>
                <statistic aggregation='VarP' datatype='real'>4.7455701533042642</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24479.220000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Violent crime</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Violent crime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Violent crime</remote-alias>
              <ordinal>12</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>520</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>217146.29999999996</statistic>
                <statistic aggregation='Avg' datatype='real'>396.9767824497257</statistic>
                <statistic aggregation='Min' datatype='real'>98.200000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>1508.4000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>205.05099345731981</statistic>
                <statistic aggregation='StdevP' datatype='real'>204.8634753628086</statistic>
                <statistic aggregation='Var' datatype='real'>42045.909917833807</statistic>
                <statistic aggregation='VarP' datatype='real'>41969.043537728081</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>109159106.31000011</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>13</ordinal>
              <family>allStatesCrimerate.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1099414.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2009.8976234003655</statistic>
                <statistic aggregation='Min' datatype='integer'>2005</statistic>
                <statistic aggregation='Max' datatype='integer'>2015</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.1391031681682273</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1362324742269587</statistic>
                <statistic aggregation='Var' datatype='real'>9.8539687004038008</statistic>
                <statistic aggregation='VarP' datatype='real'>9.8359541323957504</statistic>
                <statistic aggregation='Count' datatype='integer'>547</statistic>
                <statistic aggregation='Median' datatype='integer'>2010</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2209714966.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.213636' measure-ordering='alphabetic' measure-percentage='0.786364' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Median Household Income:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[avg:US Household Median Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[sum:US Household Median Income:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:States:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DISTRICT OF COLUMBIA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NEVADA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WEST VIRGINIA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALABAMA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MARYLAND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SOUTH CAROLINA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CALIFORNIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MISSISSIPPI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UTAH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDAHO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NEW YORK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FLORIDA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NEW HAMPSHIRE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WISCONSIN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COLORADO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MISSOURI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VERMONT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LOUISIANA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PENNSYLVANIA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALASKA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MASSACHUSETTS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SOUTH DAKOTA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KANSAS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OKLAHOMA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CONNECTICUT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MONTANA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VIRGINIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ILLINOIS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NORTH CAROLINA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;INDIANA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NORTH DAKOTA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KENTUCKY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OREGON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MAINE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RHODE ISLAND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GEORGIA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NEW JERSEY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WYOMING&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DELAWARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NEBRASKA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WASHINGTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ARIZONA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MICHIGAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TENNESSEE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IOWA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OHIO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HAWAII&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NEW MEXICO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ARKANSAS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MINNESOTA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TEXAS&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.1dyvsfe05g5nqp13rkitw0xb5cqm'>
        <column datatype='integer' name='[US Household Median Income]' role='measure' type='quantitative' />
        <column-instance column='[US Household Median Income]' derivation='Avg' name='[avg:US Household Median Income:qk]' pivot='key' type='quantitative' />
        <column-instance column='[US Household Median Income]' derivation='Sum' name='[sum:US Household Median Income:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Statewise Unemployment Rate' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='US Median Income' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Median Income'>
      <table>
        <view>
          <datasources>
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
            <datasource caption='USmedianhousehold' name='federated.1dyvsfe05g5nqp13rkitw0xb5cqm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dyvsfe05g5nqp13rkitw0xb5cqm'>
            <column datatype='integer' name='[US Household Median Income]' role='measure' type='quantitative' />
            <column-instance column='[US Household Median Income]' derivation='Avg' name='[avg:US Household Median Income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='integer' name='[Median Household Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Median Household Income]' derivation='Avg' name='[avg:Median Household Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Median Household Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[avg:US Household Median Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Median Household Income:qk] + [federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[avg:US Household Median Income:qk])</rows>
        <cols>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Statewise Median Income '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>&lt;</run>
            <run bold='true' fontname='Times New Roman'>Sheet Name</run>
            <run bold='true' fontname='Times New Roman'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
            <datasource caption='Unemploymentbenefits' name='federated.0ym66pd14s03oo1h5n4ke00n64zl' />
          </datasources>
          <datasource-dependencies datasource='federated.0ym66pd14s03oo1h5n4ke00n64zl'>
            <column datatype='string' name='[States]' role='dimension' type='nominal' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='integer' name='[Median Household Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median Household Income]' derivation='Sum' name='[sum:Median Household Income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:States:nk]' member='&quot;CALIFORNIA&quot;' />
              <groupfilter function='member' level='[none:States:nk]' member='&quot;TENNESSEE&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='11'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pdak030h08zzb11m9gm91chd6yk].[sum:Median Household Income:qk]</rows>
        <cols>([federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk] * [federated.1pdak030h08zzb11m9gm91chd6yk].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Statewise Property Crime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>&lt;</run>
            <run bold='true' fontname='Times New Roman'>Sheet Name</run>
            <run bold='true' fontname='Times New Roman'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='real' name='[Property crime]' role='measure' type='quantitative' />
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Property crime]' derivation='Avg' name='[avg:Property crime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
          </filter>
          <slices>
            <column>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]' field-type='quantitative' max='-2998391.9263959564' min='-16509634.729817163' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]' field-type='quantitative' max='13251893.692564528' min='1943213.584591548' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]' />
              <lod column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
              <geometry column='[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</rows>
        <cols>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Statewise Unemployment Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>&lt;</run>
            <run bold='true' fontname='Times New Roman'>Sheet Name</run>
            <run bold='true' fontname='Times New Roman'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Unemployment Rate]' role='measure' type='quantitative' />
            <column-instance column='[Unemployment Rate]' derivation='Avg' name='[avg:Unemployment Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
          </filter>
          <slices>
            <column>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]' field-type='quantitative' max='-5839800.9292261396' min='-17098348.253214352' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]' field-type='quantitative' max='9255740.4822933339' min='-260083.30014387611' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]' />
              <lod column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
              <geometry column='[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</rows>
        <cols>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Statewise Violent Crime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>&lt;</run>
            <run bold='true' fontname='Times New Roman'>Sheet Name</run>
            <run bold='true' fontname='Times New Roman'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Violent crime]' role='measure' type='quantitative' />
            <column-instance column='[Violent crime]' derivation='Avg' name='[avg:Violent crime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
          </filter>
          <slices>
            <column>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]' field-type='quantitative' max='155918.13383059576' min='-18686650.377038401' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]' field-type='quantitative' max='9293359.5303631835' min='-1580033.8889792212' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]' />
              <lod column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' />
              <geometry column='[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</rows>
        <cols>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='US Median Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>US Median Household Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='USmedianhousehold' name='federated.1dyvsfe05g5nqp13rkitw0xb5cqm' />
          </datasources>
          <datasource-dependencies datasource='federated.1dyvsfe05g5nqp13rkitw0xb5cqm'>
            <column datatype='integer' name='[US Household Median Income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[US Household Median Income]' derivation='Sum' name='[sum:US Household Median Income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[sum:US Household Median Income:qk]</rows>
        <cols>[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Unemployment benefits'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>Statewise Unemployment Compensation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Unemploymentbenefits' name='federated.0ym66pd14s03oo1h5n4ke00n64zl' />
            <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
          </datasources>
          <datasource-dependencies datasource='federated.0ym66pd14s03oo1h5n4ke00n64zl'>
            <column caption='Max Total Benefit' datatype='integer' name='[Calculation_295830211260784640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Max.Weekly Benefits]*[Max Weeks of Benefits]' />
            </column>
            <column datatype='integer' name='[Max Weeks of Benefits]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Max.Weekly Benefits]' role='measure' type='quantitative' />
            <column datatype='string' name='[States]' role='dimension' type='nominal' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_295830211260784640]' derivation='Sum' name='[sum:Calculation_295830211260784640:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]' />
          </filter>
          <slices>
            <column>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[sum:Calculation_295830211260784640:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[sum:Calculation_295830211260784640:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ym66pd14s03oo1h5n4ke00n64zl].[sum:Calculation_295830211260784640:qk]</rows>
        <cols>[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='allStatesCrimerate' name='federated.1pdak030h08zzb11m9gm91chd6yk' />
      </datasources>
      <datasource-dependencies datasource='federated.1pdak030h08zzb11m9gm91chd6yk'>
        <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='12' name='Statewise Unemployment Rate' w='42000' x='0' y='0' />
              <zone h='50000' id='15' name='Statewise Violent Crime' w='42000' x='0' y='50000' />
              <zone h='50000' id='20' name='Unemployment benefits' w='42000' x='42000' y='50000' />
              <zone h='50000' id='21' name='Statewise Property Crime' w='42000' x='42000' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='100000' id='13' name='Statewise Unemployment Rate' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' type='filter' w='16000' x='84000' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='9500' id='14' name='Statewise Unemployment Rate' pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]' type='color' w='14000' x='1400' y='30500' />
        <zone h='6250' id='17' name='Statewise Violent Crime' pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]' type='color' w='14000' x='1200' y='82875' />
        <zone h='9500' id='22' name='Statewise Property Crime' pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]' type='color' w='14000' x='68600' y='38000' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='12'>California Median House hold income  always been higher than the overall US rate. On the contrary it has always been low for Tenessee</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Unemploymentbenefits' name='federated.0ym66pd14s03oo1h5n4ke00n64zl' />
      </datasources>
      <datasource-dependencies datasource='federated.0ym66pd14s03oo1h5n4ke00n64zl'>
        <column datatype='string' name='[States]' role='dimension' type='nominal' />
        <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='35' h='5875' id='8' is-fixed='true' type='title' w='100000' x='0' y='0' />
            <zone h='94125' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5875'>
              <zone h='94125' id='3' type='layout-basic' w='84000' x='0' y='5875'>
                <zone h='47063' id='1' name='Statewise Median Income ' w='84000' x='0' y='5875' />
                <zone h='47062' id='7' name='US Median Income' w='84000' x='0' y='52938' />
              </zone>
              <zone fixed-size='160' h='94125' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='5875'>
                <zone h='94125' id='6' name='Statewise Median Income ' param='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]' type='filter' w='16000' x='84000' y='5875' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Times New Roman' fontsize='12'>Providing better unemployment benefits and compensating families with lower incomes may reduce crime possibly caused due to unemployment. </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3112' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='3112' />
            <zone h='85166' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='14419'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='The average unemployment rate in California and Tennessee over past 10 years is higher than the US average.' captured-sheet='Statewise Unemployment Rate' id='1'>
                    <capturedDeltas>
                      <worksheet name='Statewise Unemployment Rate'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>Califonia</run>
                              <run fontcolor='#787878'>&#10;Avg. Unemployment Rate: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>8.360000000000003</value>
                                    <value>&quot;CALIFORNIA&quot;</value>
                                    <value>&quot;MULTIPOLYGON(((-114.6271 33.4342,-114.6514 33.4133,-114.6827 33.4185,-114.7244 33.4046,-114.707 33.3838,-114.6983 33.3525,-114.7035 33.3299,-114.7296 33.2986,-114.7192 33.2865,-114.6844 33.276,-114.674 33.2587,-114.6896 33.2448,-114.6757 33.2222,-114.6757 33.1839,-114.707 33.0918,-114.6914 33.0831,-114.6653 33.0345,-114.6462 33.0484,-114.6132 33.0275,-114.5749 33.0362,-114.5158 33.0275,-114.5019 33.0084,-114.4932 32.9719,-114.4689 32.9719,-114.4811 32.9354,-114.4637 32.9041,-114.4759 32.8398,-114.5106 32.8155,-114.5297 32.7929,-114.528 32.7582,-114.5836 32.7356,-114.6166 32.7286,-114.6879 32.7373,-114.7018 32.746,-114.7192 32.7182,-115.0116 32.6989,-116.1039 32.6187,-116.4216 32.5936,-116.8785 32.5555,-117.1252 32.5339,-117.2269 32.6956,-117.2478 32.7303,-117.2704 32.8172,-117.2773 32.9267,-117.3086 33.024,-117.3677 33.1387,-117.4546 33.2534,-117.5258 33.3299,-117.5954 33.389,-117.6388 33.4255,-117.8317 33.5558,-118.0524 33.6949,-118.1202 33.7279,-118.1671 33.7383,-118.2575 33.7192,-118.3079 33.7227,-118.3896 33.754,-118.4069 33.7835,-118.4261 33.8704,-118.4678 33.9416,-118.5234 33.9955,-118.5842 34.0216,-118.6624 34.0285,-118.8084 34.0268,-118.9422 34.0598,-118.9787 34.0685,-119.1021 34.1137,-119.1994 34.1693,-119.2776 34.2406,-119.3489 34.291,-119.4479 34.3501,-119.4844 34.364,-119.54 34.3883,-119.6096 34.4057,-119.733 34.4074,-120.1483 34.463,-120.4159 34.4804,-120.5967 34.5621,-120.6175 34.5864,-120.6245 34.6298,-120.621 34.8228,-120.6419 34.9375,-120.6419 34.967,-120.6401 35.08,-120.6506 35.1182,-120.6731 35.1443,-120.7079 35.1651,-120.7844 35.1894,-120.8348 35.2242,-120.8661 35.2729,-120.88 35.3858,-120.9025 35.4223,-121.0068 35.4849,-121.1771 35.6257,-121.2727 35.683,-121.3631 35.796,-121.5125 35.9784,-121.6672 36.1331,-121.8097 36.2513,-121.8636 36.3139,-121.9227 36.4546,-121.947 36.5832,-121.9331 36.611,-121.8879 36.6197,-121.8636 36.6319,-121.841 36.6632,-121.8254 36.7153,-121.8184 36.79,-121.8341 36.8474,-121.8723 36.9117,-121.914 36.9482,-121.947 36.9603,-122.0687 36.9673,-122.1295 36.9882,-122.2042 37.0316,-122.2946 37.1029,-122.3832 37.1706,-122.418 37.2384,-122.4006 37.3531,-122.4475 37.4852,-122.5136 37.5043,-122.5136 37.5982,-122.4962 37.6659,-122.5031 37.7076,-122.517 37.7754,-122.4736 37.8015,-122.4145 37.8067,-122.3867 37.7963,-122.3537 37.7233,-122.3728 37.7076,-122.3832 37.6989,-122.3728 37.6433,-122.3433 37.6016,-122.1921 37.5339,-122.1573 37.5339,-122.1538 37.5512,-122.1521 37.5651,-122.1799 37.6416,-122.2529 37.7493,-122.305 37.7893,-122.3172 37.8136,-122.3241 37.8797,-122.3363 37.8901,-122.3954 37.944,-122.3919 37.9596,-122.3519 38.0031,-122.3015 38.0291,-122.2876 38.0517,-122.2946 38.0674,-122.3311 38.1056,-122.3867 38.1265,-122.4076 38.1282,-122.458 38.1021,-122.4684 38.0969,-122.4805 38.0309,-122.4666 37.9874,-122.484 37.9283,-122.4284 37.8814,-122.4788 37.8328,-122.5379 37.8241,-122.5727 37.8519,-122.7186 37.9197,-122.8455 37.9944,-122.9341 38.0152,-122.9793 38.01,-122.9932 38.0205,-122.9915 38.0517,-122.9724 38.1213,-122.9706 38.1717,-122.9811 38.2446,-122.9915 38.269,-123.0228 38.295,-123.054 38.3124,-123.1409 38.4341,-123.313 38.5644,-123.4416 38.6861,-123.5407 38.7677,-123.6223 38.8355,-123.7005 38.9172,-123.7127 38.9589,-123.711 39.0528,-123.7961 39.2978,-123.8065 39.3691,-123.7892 39.5359,-123.7926 39.6037,-123.8048 39.6714,-123.8517 39.7948,-123.8795 39.8383,-124.0325 40.0016,-124.1002 40.0729,-124.3071 40.2137,-124.3557 40.3075,-124.3783 40.3735,-124.4096 40.4396,-124.3714 40.5421,-124.2063 40.8115,-124.1593 40.9123,-124.1367 40.987,-124.1454 41.1295,-124.1107 41.2633,-124.0916 41.3711,-124.0898 41.4649,-124.1072 41.5692,-124.1524 41.6978,-124.2567 41.7778,-124.2393 41.8073,-124.2132 41.9272,-124.2115 41.9985,-123.8222 41.995,-123.5181 42.0002,-123.2313 42.0037,-122.2894 42.0072,-121.4482 41.9967,-120.88 41.9933,-119.9988 41.995,-120.0006 41.1834,-120.0006 39.7218,-120.0041 39.4455,-120.0058 39.3169,-120.0041 39.1657,-120.0041 39.1118,-120.0023 39.0667,-120.0006 38.9989,-119.905 38.9328,-119.5852 38.7139,-119.328 38.5349,-119.1577 38.415,-118.4278 37.8971,-117.8334 37.4643,-117.1661 36.9708,-115.8453 35.9645,-115.6489 35.8099,-114.634 35.0018,-114.634 34.8714,-114.5871 34.8349,-114.5523 34.7654,-114.4706 34.7115,-114.4255 34.609,-114.4359 34.5951,-114.4029 34.5655,-114.3803 34.5291,-114.3855 34.4578,-114.3751 34.4474,-114.3351 34.4491,-114.2986 34.4248,-114.2882 34.4057,-114.2638 34.4004,-114.2273 34.3674,-114.1787 34.3501,-114.1387 34.3031,-114.1335 34.2597,-114.1648 34.2579,-114.2239 34.2041,-114.2291 34.1884,-114.2569 34.1728,-114.2882 34.171,-114.3229 34.138,-114.3507 34.1328,-114.389 34.1102,-114.4133 34.1085,-114.4359 34.0789,-114.4394 34.0216,-114.4654 34.0112,-114.4602 33.9955,-114.5002 33.9625,-114.5228 33.9556,-114.5349 33.933,-114.5263 33.8999,-114.5037 33.8687,-114.5297 33.8565,-114.521 33.8252,-114.528 33.8148,-114.5054 33.7609,-114.5106 33.7331,-114.495 33.7088,-114.4985 33.6966,-114.5297 33.6775,-114.5158 33.6601,-114.5315 33.6514,-114.5228 33.6132,-114.5402 33.5819,-114.5245 33.5524,-114.5593 33.5298,-114.5662 33.5124,-114.5923 33.5002,-114.6201 33.4585,-114.6271 33.4342)),((-118.3322 33.356,-118.334 33.3334,-118.3618 33.3264,-118.4243 33.3369,-118.4626 33.3612,-118.506 33.4133,-118.5373 33.4342,-118.5442 33.4498,-118.4991 33.4446,-118.4191 33.4151,-118.3322 33.356)),((-118.5807 33.0345,-118.4434 32.8763,-118.4573 32.8624,-118.5043 32.8972,-118.5581 32.9719,-118.5773 33.0101,-118.5807 33.0345)),((-119.5435 33.2795,-119.481 33.2552,-119.4688 33.2291,-119.5314 33.2448,-119.5487 33.2621,-119.5435 33.2795)),((-119.9137 34.0772,-119.6826 34.032,-119.6356 34.0303,-119.5852 34.0407,-119.5626 34.0233,-119.5957 34.0025,-119.7225 33.9747,-119.7868 33.9729,-119.8633 33.9938,-119.905 34.0529,-119.9137 34.0772)),((-120.0458 34.0007,-120.0075 33.9695,-120.018 33.9486,-120.0631 33.9277,-120.1153 33.9243,-120.1622 33.9399,-120.2161 33.992,-120.2057 34.0042,-120.0718 34.0268,-120.0458 34.0007)),((-120.3621 34.0737,-120.3377 34.0407,-120.369 34.0251,-120.442 34.0372,-120.3621 34.0737)))&quot;</value>
                                    <value>37.25</value>
                                    <value>-119.75</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-186' y='-30' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='1' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]&gt;</run>
                              <run fontcolor='#787878'>&#10;Avg. Unemployment Rate: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>7.1999999999999993</value>
                                    <value>&quot;TENNESSEE&quot;</value>
                                    <value>&quot;POLYGON((-84.3219 34.9879,-84.6208 34.9879,-84.7755 34.9879,-84.8102 34.9879,-84.9771 34.9879,-84.9805 34.9879,-85.2655 34.9844,-85.3646 34.9826,-85.4741 34.9826,-85.6044 34.9844,-85.8634 34.9879,-86.3117 34.9913,-86.3187 34.9913,-86.7844 34.9913,-86.8366 34.9913,-87.2102 34.9983,-87.2241 35,-87.6065 35.0035,-87.9853 35.0052,-88.2026 35.0087,-88.2008 34.9948,-88.3642 34.9948,-88.3798 34.9948,-88.7865 34.9948,-88.823 34.9948,-89.0176 34.9948,-89.1984 34.9948,-89.353 34.9931,-89.645 34.9948,-89.7249 34.9948,-90.3089 34.9965,-90.2932 35.0417,-90.2133 35.0261,-90.2011 35.033,-90.1751 35.1165,-90.142 35.1356,-90.0969 35.1182,-90.0656 35.1373,-90.0673 35.153,-90.0951 35.1599,-90.1177 35.1894,-90.0969 35.1947,-90.0777 35.2259,-90.1021 35.2537,-90.149 35.2555,-90.1681 35.2798,-90.1559 35.3024,-90.109 35.3041,-90.109 35.3424,-90.0743 35.3841,-90.1299 35.4136,-90.1455 35.3997,-90.1368 35.3771,-90.1733 35.3789,-90.1716 35.4136,-90.1403 35.4362,-90.1125 35.4727,-90.0812 35.4762,-90.0673 35.4658,-90.0743 35.4362,-90.0551 35.3893,-90.0412 35.3963,-90.0517 35.4067,-90.0326 35.4275,-90.0186 35.4675,-90.0482 35.5057,-90.0378 35.5492,-89.9891 35.5596,-89.9578 35.5422,-89.9509 35.5214,-89.9213 35.5144,-89.9092 35.5388,-89.9109 35.5492,-89.9422 35.5579,-89.9561 35.5892,-89.9109 35.617,-89.8953 35.6152,-89.857 35.6343,-89.8518 35.6569,-89.864 35.6708,-89.897 35.6517,-89.9318 35.6604,-89.9561 35.6934,-89.9561 35.7334,-89.9092 35.7595,-89.8744 35.7404,-89.8483 35.756,-89.8188 35.7577,-89.7823 35.8047,-89.7354 35.8064,-89.7058 35.8186,-89.7058 35.8359,-89.7719 35.8655,-89.7667 35.8898,-89.7493 35.902,-89.711 35.9055,-89.6711 35.8846,-89.645 35.9037,-89.6572 35.9263,-89.7145 35.9645,-89.7336 36.001,-89.7093 36.0028,-89.6937 36.0202,-89.6745 36.0879,-89.5946 36.1279,-89.5963 36.1574,-89.6294 36.1853,-89.6937 36.2252,-89.6937 36.253,-89.6016 36.2374,-89.5633 36.2513,-89.539 36.2496,-89.539 36.2756,-89.5772 36.2878,-89.612 36.3104,-89.6207 36.3243,-89.6033 36.3417,-89.5442 36.3364,-89.5199 36.3486,-89.5094 36.3747,-89.5442 36.4268,-89.5199 36.4685,-89.539 36.4981,-89.4851 36.4981,-89.4921 36.4685,-89.4677 36.4581,-89.4434 36.4685,-89.4173 36.4998,-89.3461 36.5033,-88.8352 36.5033,-88.8265 36.5033,-88.816 36.5033,-88.5171 36.5015,-88.4893 36.5015,-88.0531 36.4963,-88.0392 36.512,-88.0322 36.5398,-88.0705 36.6788,-87.8567 36.6649,-87.8428 36.6336,-87.6934 36.6371,-87.6412 36.6388,-87.3354 36.6423,-87.1146 36.6423,-87.0608 36.6423,-86.7636 36.6493,-86.5985 36.6527,-86.5637 36.6336,-86.5064 36.6527,-86.4108 36.651,-86.2057 36.6406,-85.9763 36.6284,-85.7886 36.6215,-85.4359 36.618,-85.2968 36.6249,-85.276 36.6267,-84.9753 36.6162,-84.7859 36.6041,-84.7789 36.6041,-84.261 36.5919,-84.228 36.5919,-83.9882 36.5902,-83.9308 36.5884,-83.6945 36.5832,-83.6754 36.6006,-83.472 36.5971,-82.9854 36.5937,-82.8308 36.5937,-82.6083 36.5937,-82.2938 36.5954,-82.2434 36.5954,-82.146 36.5954,-81.941 36.5937,-81.9219 36.6162,-81.8263 36.6145,-81.6473 36.6128,-81.6768 36.5884,-81.6907 36.5519,-81.7081 36.5363,-81.6959 36.5068,-81.6942 36.4668,-81.7168 36.4564,-81.7185 36.4251,-81.7411 36.4112,-81.729 36.3921,-81.7342 36.3799,-81.722 36.3521,-81.7654 36.3399,-81.7933 36.3625,-81.8558 36.3364,-81.8784 36.3139,-81.9062 36.3034,-81.9184 36.2878,-81.9323 36.2652,-82.0296 36.1244,-82.0539 36.1262,-82.08 36.1036,-82.1304 36.1053,-82.1495 36.1488,-82.1773 36.1435,-82.2225 36.1574,-82.2451 36.1314,-82.2903 36.1349,-82.3355 36.1157,-82.3546 36.1157,-82.4032 36.0879,-82.4172 36.0723,-82.4606 36.008,-82.5058 35.9784,-82.5405 35.968,-82.5579 35.9541,-82.6101 35.968,-82.6135 36.0045,-82.5909 36.0323,-82.6031 36.0393,-82.6361 36.0653,-82.7508 36.0063,-82.7752 36.001,-82.7769 35.9698,-82.8221 35.9228,-82.8516 35.9489,-82.8985 35.9454,-82.902 35.928,-82.9194 35.928,-82.902 35.8933,-82.9211 35.8672,-82.9159 35.8412,-82.9455 35.8238,-82.9611 35.7908,-82.9959 35.7734,-83.0358 35.7873,-83.0793 35.789,-83.121 35.7664,-83.161 35.7647,-83.1905 35.7282,-83.2392 35.7247,-83.2548 35.7143,-83.2548 35.6952,-83.2878 35.6726,-83.2983 35.6569,-83.3417 35.6639,-83.3973 35.6239,-83.446 35.61,-83.4981 35.5631,-83.5833 35.5631,-83.6076 35.5787,-83.6406 35.5666,-83.6632 35.5683,-83.764 35.5631,-83.8283 35.5249,-83.8804 35.5179,-83.9135 35.4762,-83.9534 35.4606,-83.9604 35.464,-84.023 35.4119,-84.0073 35.3719,-84.0386 35.3476,-84.0299 35.332,-84.0299 35.292,-84.0542 35.2694,-84.0977 35.2468,-84.1481 35.2468,-84.1881 35.2398,-84.2106 35.2659,-84.2263 35.2677,-84.2906 35.2259,-84.2923 35.2068,-84.3219 34.9879))&quot;</value>
                                    <value>35.75</value>
                                    <value>-86.25</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='188' y='28' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The average property crime rate in California is much lower. But the same in Tennessee is too high.' captured-sheet='Statewise Property Crime' id='2'>
                    <capturedDeltas>
                      <worksheet name='Statewise Property Crime'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]&gt;</run>
                              <run fontcolor='#787878'>&#10;Avg. Property crime: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>2845.2999999999997</value>
                                    <value>&quot;CALIFORNIA&quot;</value>
                                    <value>&quot;MULTIPOLYGON(((-114.6271 33.4342,-114.6514 33.4133,-114.6827 33.4185,-114.7244 33.4046,-114.707 33.3838,-114.6983 33.3525,-114.7035 33.3299,-114.7296 33.2986,-114.7192 33.2865,-114.6844 33.276,-114.674 33.2587,-114.6896 33.2448,-114.6757 33.2222,-114.6757 33.1839,-114.707 33.0918,-114.6914 33.0831,-114.6653 33.0345,-114.6462 33.0484,-114.6132 33.0275,-114.5749 33.0362,-114.5158 33.0275,-114.5019 33.0084,-114.4932 32.9719,-114.4689 32.9719,-114.4811 32.9354,-114.4637 32.9041,-114.4759 32.8398,-114.5106 32.8155,-114.5297 32.7929,-114.528 32.7582,-114.5836 32.7356,-114.6166 32.7286,-114.6879 32.7373,-114.7018 32.746,-114.7192 32.7182,-115.0116 32.6989,-116.1039 32.6187,-116.4216 32.5936,-116.8785 32.5555,-117.1252 32.5339,-117.2269 32.6956,-117.2478 32.7303,-117.2704 32.8172,-117.2773 32.9267,-117.3086 33.024,-117.3677 33.1387,-117.4546 33.2534,-117.5258 33.3299,-117.5954 33.389,-117.6388 33.4255,-117.8317 33.5558,-118.0524 33.6949,-118.1202 33.7279,-118.1671 33.7383,-118.2575 33.7192,-118.3079 33.7227,-118.3896 33.754,-118.4069 33.7835,-118.4261 33.8704,-118.4678 33.9416,-118.5234 33.9955,-118.5842 34.0216,-118.6624 34.0285,-118.8084 34.0268,-118.9422 34.0598,-118.9787 34.0685,-119.1021 34.1137,-119.1994 34.1693,-119.2776 34.2406,-119.3489 34.291,-119.4479 34.3501,-119.4844 34.364,-119.54 34.3883,-119.6096 34.4057,-119.733 34.4074,-120.1483 34.463,-120.4159 34.4804,-120.5967 34.5621,-120.6175 34.5864,-120.6245 34.6298,-120.621 34.8228,-120.6419 34.9375,-120.6419 34.967,-120.6401 35.08,-120.6506 35.1182,-120.6731 35.1443,-120.7079 35.1651,-120.7844 35.1894,-120.8348 35.2242,-120.8661 35.2729,-120.88 35.3858,-120.9025 35.4223,-121.0068 35.4849,-121.1771 35.6257,-121.2727 35.683,-121.3631 35.796,-121.5125 35.9784,-121.6672 36.1331,-121.8097 36.2513,-121.8636 36.3139,-121.9227 36.4546,-121.947 36.5832,-121.9331 36.611,-121.8879 36.6197,-121.8636 36.6319,-121.841 36.6632,-121.8254 36.7153,-121.8184 36.79,-121.8341 36.8474,-121.8723 36.9117,-121.914 36.9482,-121.947 36.9603,-122.0687 36.9673,-122.1295 36.9882,-122.2042 37.0316,-122.2946 37.1029,-122.3832 37.1706,-122.418 37.2384,-122.4006 37.3531,-122.4475 37.4852,-122.5136 37.5043,-122.5136 37.5982,-122.4962 37.6659,-122.5031 37.7076,-122.517 37.7754,-122.4736 37.8015,-122.4145 37.8067,-122.3867 37.7963,-122.3537 37.7233,-122.3728 37.7076,-122.3832 37.6989,-122.3728 37.6433,-122.3433 37.6016,-122.1921 37.5339,-122.1573 37.5339,-122.1538 37.5512,-122.1521 37.5651,-122.1799 37.6416,-122.2529 37.7493,-122.305 37.7893,-122.3172 37.8136,-122.3241 37.8797,-122.3363 37.8901,-122.3954 37.944,-122.3919 37.9596,-122.3519 38.0031,-122.3015 38.0291,-122.2876 38.0517,-122.2946 38.0674,-122.3311 38.1056,-122.3867 38.1265,-122.4076 38.1282,-122.458 38.1021,-122.4684 38.0969,-122.4805 38.0309,-122.4666 37.9874,-122.484 37.9283,-122.4284 37.8814,-122.4788 37.8328,-122.5379 37.8241,-122.5727 37.8519,-122.7186 37.9197,-122.8455 37.9944,-122.9341 38.0152,-122.9793 38.01,-122.9932 38.0205,-122.9915 38.0517,-122.9724 38.1213,-122.9706 38.1717,-122.9811 38.2446,-122.9915 38.269,-123.0228 38.295,-123.054 38.3124,-123.1409 38.4341,-123.313 38.5644,-123.4416 38.6861,-123.5407 38.7677,-123.6223 38.8355,-123.7005 38.9172,-123.7127 38.9589,-123.711 39.0528,-123.7961 39.2978,-123.8065 39.3691,-123.7892 39.5359,-123.7926 39.6037,-123.8048 39.6714,-123.8517 39.7948,-123.8795 39.8383,-124.0325 40.0016,-124.1002 40.0729,-124.3071 40.2137,-124.3557 40.3075,-124.3783 40.3735,-124.4096 40.4396,-124.3714 40.5421,-124.2063 40.8115,-124.1593 40.9123,-124.1367 40.987,-124.1454 41.1295,-124.1107 41.2633,-124.0916 41.3711,-124.0898 41.4649,-124.1072 41.5692,-124.1524 41.6978,-124.2567 41.7778,-124.2393 41.8073,-124.2132 41.9272,-124.2115 41.9985,-123.8222 41.995,-123.5181 42.0002,-123.2313 42.0037,-122.2894 42.0072,-121.4482 41.9967,-120.88 41.9933,-119.9988 41.995,-120.0006 41.1834,-120.0006 39.7218,-120.0041 39.4455,-120.0058 39.3169,-120.0041 39.1657,-120.0041 39.1118,-120.0023 39.0667,-120.0006 38.9989,-119.905 38.9328,-119.5852 38.7139,-119.328 38.5349,-119.1577 38.415,-118.4278 37.8971,-117.8334 37.4643,-117.1661 36.9708,-115.8453 35.9645,-115.6489 35.8099,-114.634 35.0018,-114.634 34.8714,-114.5871 34.8349,-114.5523 34.7654,-114.4706 34.7115,-114.4255 34.609,-114.4359 34.5951,-114.4029 34.5655,-114.3803 34.5291,-114.3855 34.4578,-114.3751 34.4474,-114.3351 34.4491,-114.2986 34.4248,-114.2882 34.4057,-114.2638 34.4004,-114.2273 34.3674,-114.1787 34.3501,-114.1387 34.3031,-114.1335 34.2597,-114.1648 34.2579,-114.2239 34.2041,-114.2291 34.1884,-114.2569 34.1728,-114.2882 34.171,-114.3229 34.138,-114.3507 34.1328,-114.389 34.1102,-114.4133 34.1085,-114.4359 34.0789,-114.4394 34.0216,-114.4654 34.0112,-114.4602 33.9955,-114.5002 33.9625,-114.5228 33.9556,-114.5349 33.933,-114.5263 33.8999,-114.5037 33.8687,-114.5297 33.8565,-114.521 33.8252,-114.528 33.8148,-114.5054 33.7609,-114.5106 33.7331,-114.495 33.7088,-114.4985 33.6966,-114.5297 33.6775,-114.5158 33.6601,-114.5315 33.6514,-114.5228 33.6132,-114.5402 33.5819,-114.5245 33.5524,-114.5593 33.5298,-114.5662 33.5124,-114.5923 33.5002,-114.6201 33.4585,-114.6271 33.4342)),((-118.3322 33.356,-118.334 33.3334,-118.3618 33.3264,-118.4243 33.3369,-118.4626 33.3612,-118.506 33.4133,-118.5373 33.4342,-118.5442 33.4498,-118.4991 33.4446,-118.4191 33.4151,-118.3322 33.356)),((-118.5807 33.0345,-118.4434 32.8763,-118.4573 32.8624,-118.5043 32.8972,-118.5581 32.9719,-118.5773 33.0101,-118.5807 33.0345)),((-119.5435 33.2795,-119.481 33.2552,-119.4688 33.2291,-119.5314 33.2448,-119.5487 33.2621,-119.5435 33.2795)),((-119.9137 34.0772,-119.6826 34.032,-119.6356 34.0303,-119.5852 34.0407,-119.5626 34.0233,-119.5957 34.0025,-119.7225 33.9747,-119.7868 33.9729,-119.8633 33.9938,-119.905 34.0529,-119.9137 34.0772)),((-120.0458 34.0007,-120.0075 33.9695,-120.018 33.9486,-120.0631 33.9277,-120.1153 33.9243,-120.1622 33.9399,-120.2161 33.992,-120.2057 34.0042,-120.0718 34.0268,-120.0458 34.0007)),((-120.3621 34.0737,-120.3377 34.0407,-120.369 34.0251,-120.442 34.0372,-120.3621 34.0737)))&quot;</value>
                                    <value>37.25</value>
                                    <value>-119.75</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-188' y='-13' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='1' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]&gt;</run>
                              <run fontcolor='#787878'>&#10;Avg. Property crime: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>3644.7272727272725</value>
                                    <value>&quot;TENNESSEE&quot;</value>
                                    <value>&quot;POLYGON((-84.3219 34.9879,-84.6208 34.9879,-84.7755 34.9879,-84.8102 34.9879,-84.9771 34.9879,-84.9805 34.9879,-85.2655 34.9844,-85.3646 34.9826,-85.4741 34.9826,-85.6044 34.9844,-85.8634 34.9879,-86.3117 34.9913,-86.3187 34.9913,-86.7844 34.9913,-86.8366 34.9913,-87.2102 34.9983,-87.2241 35,-87.6065 35.0035,-87.9853 35.0052,-88.2026 35.0087,-88.2008 34.9948,-88.3642 34.9948,-88.3798 34.9948,-88.7865 34.9948,-88.823 34.9948,-89.0176 34.9948,-89.1984 34.9948,-89.353 34.9931,-89.645 34.9948,-89.7249 34.9948,-90.3089 34.9965,-90.2932 35.0417,-90.2133 35.0261,-90.2011 35.033,-90.1751 35.1165,-90.142 35.1356,-90.0969 35.1182,-90.0656 35.1373,-90.0673 35.153,-90.0951 35.1599,-90.1177 35.1894,-90.0969 35.1947,-90.0777 35.2259,-90.1021 35.2537,-90.149 35.2555,-90.1681 35.2798,-90.1559 35.3024,-90.109 35.3041,-90.109 35.3424,-90.0743 35.3841,-90.1299 35.4136,-90.1455 35.3997,-90.1368 35.3771,-90.1733 35.3789,-90.1716 35.4136,-90.1403 35.4362,-90.1125 35.4727,-90.0812 35.4762,-90.0673 35.4658,-90.0743 35.4362,-90.0551 35.3893,-90.0412 35.3963,-90.0517 35.4067,-90.0326 35.4275,-90.0186 35.4675,-90.0482 35.5057,-90.0378 35.5492,-89.9891 35.5596,-89.9578 35.5422,-89.9509 35.5214,-89.9213 35.5144,-89.9092 35.5388,-89.9109 35.5492,-89.9422 35.5579,-89.9561 35.5892,-89.9109 35.617,-89.8953 35.6152,-89.857 35.6343,-89.8518 35.6569,-89.864 35.6708,-89.897 35.6517,-89.9318 35.6604,-89.9561 35.6934,-89.9561 35.7334,-89.9092 35.7595,-89.8744 35.7404,-89.8483 35.756,-89.8188 35.7577,-89.7823 35.8047,-89.7354 35.8064,-89.7058 35.8186,-89.7058 35.8359,-89.7719 35.8655,-89.7667 35.8898,-89.7493 35.902,-89.711 35.9055,-89.6711 35.8846,-89.645 35.9037,-89.6572 35.9263,-89.7145 35.9645,-89.7336 36.001,-89.7093 36.0028,-89.6937 36.0202,-89.6745 36.0879,-89.5946 36.1279,-89.5963 36.1574,-89.6294 36.1853,-89.6937 36.2252,-89.6937 36.253,-89.6016 36.2374,-89.5633 36.2513,-89.539 36.2496,-89.539 36.2756,-89.5772 36.2878,-89.612 36.3104,-89.6207 36.3243,-89.6033 36.3417,-89.5442 36.3364,-89.5199 36.3486,-89.5094 36.3747,-89.5442 36.4268,-89.5199 36.4685,-89.539 36.4981,-89.4851 36.4981,-89.4921 36.4685,-89.4677 36.4581,-89.4434 36.4685,-89.4173 36.4998,-89.3461 36.5033,-88.8352 36.5033,-88.8265 36.5033,-88.816 36.5033,-88.5171 36.5015,-88.4893 36.5015,-88.0531 36.4963,-88.0392 36.512,-88.0322 36.5398,-88.0705 36.6788,-87.8567 36.6649,-87.8428 36.6336,-87.6934 36.6371,-87.6412 36.6388,-87.3354 36.6423,-87.1146 36.6423,-87.0608 36.6423,-86.7636 36.6493,-86.5985 36.6527,-86.5637 36.6336,-86.5064 36.6527,-86.4108 36.651,-86.2057 36.6406,-85.9763 36.6284,-85.7886 36.6215,-85.4359 36.618,-85.2968 36.6249,-85.276 36.6267,-84.9753 36.6162,-84.7859 36.6041,-84.7789 36.6041,-84.261 36.5919,-84.228 36.5919,-83.9882 36.5902,-83.9308 36.5884,-83.6945 36.5832,-83.6754 36.6006,-83.472 36.5971,-82.9854 36.5937,-82.8308 36.5937,-82.6083 36.5937,-82.2938 36.5954,-82.2434 36.5954,-82.146 36.5954,-81.941 36.5937,-81.9219 36.6162,-81.8263 36.6145,-81.6473 36.6128,-81.6768 36.5884,-81.6907 36.5519,-81.7081 36.5363,-81.6959 36.5068,-81.6942 36.4668,-81.7168 36.4564,-81.7185 36.4251,-81.7411 36.4112,-81.729 36.3921,-81.7342 36.3799,-81.722 36.3521,-81.7654 36.3399,-81.7933 36.3625,-81.8558 36.3364,-81.8784 36.3139,-81.9062 36.3034,-81.9184 36.2878,-81.9323 36.2652,-82.0296 36.1244,-82.0539 36.1262,-82.08 36.1036,-82.1304 36.1053,-82.1495 36.1488,-82.1773 36.1435,-82.2225 36.1574,-82.2451 36.1314,-82.2903 36.1349,-82.3355 36.1157,-82.3546 36.1157,-82.4032 36.0879,-82.4172 36.0723,-82.4606 36.008,-82.5058 35.9784,-82.5405 35.968,-82.5579 35.9541,-82.6101 35.968,-82.6135 36.0045,-82.5909 36.0323,-82.6031 36.0393,-82.6361 36.0653,-82.7508 36.0063,-82.7752 36.001,-82.7769 35.9698,-82.8221 35.9228,-82.8516 35.9489,-82.8985 35.9454,-82.902 35.928,-82.9194 35.928,-82.902 35.8933,-82.9211 35.8672,-82.9159 35.8412,-82.9455 35.8238,-82.9611 35.7908,-82.9959 35.7734,-83.0358 35.7873,-83.0793 35.789,-83.121 35.7664,-83.161 35.7647,-83.1905 35.7282,-83.2392 35.7247,-83.2548 35.7143,-83.2548 35.6952,-83.2878 35.6726,-83.2983 35.6569,-83.3417 35.6639,-83.3973 35.6239,-83.446 35.61,-83.4981 35.5631,-83.5833 35.5631,-83.6076 35.5787,-83.6406 35.5666,-83.6632 35.5683,-83.764 35.5631,-83.8283 35.5249,-83.8804 35.5179,-83.9135 35.4762,-83.9534 35.4606,-83.9604 35.464,-84.023 35.4119,-84.0073 35.3719,-84.0386 35.3476,-84.0299 35.332,-84.0299 35.292,-84.0542 35.2694,-84.0977 35.2468,-84.1481 35.2468,-84.1881 35.2398,-84.2106 35.2659,-84.2263 35.2677,-84.2906 35.2259,-84.2923 35.2068,-84.3219 34.9879))&quot;</value>
                                    <value>35.75</value>
                                    <value>-86.25</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='188' y='65' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]' field-type='quantitative' max='20262964.406379953' min='-5067857.1292238748' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]' field-type='quantitative' max='3850186.014161814' min='-23358212.670374934' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The average violent crime rate in California is also low. But the same in Tennessee is too high.' captured-sheet='Statewise Violent Crime' id='3'>
                    <capturedDeltas>
                      <worksheet name='Statewise Violent Crime'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]&gt;</run>
                              <run fontcolor='#787878'>&#10;Avg. Violent crime: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>666.60000000000014</value>
                                    <value>&quot;TENNESSEE&quot;</value>
                                    <value>&quot;POLYGON((-84.3219 34.9879,-84.6208 34.9879,-84.7755 34.9879,-84.8102 34.9879,-84.9771 34.9879,-84.9805 34.9879,-85.2655 34.9844,-85.3646 34.9826,-85.4741 34.9826,-85.6044 34.9844,-85.8634 34.9879,-86.3117 34.9913,-86.3187 34.9913,-86.7844 34.9913,-86.8366 34.9913,-87.2102 34.9983,-87.2241 35,-87.6065 35.0035,-87.9853 35.0052,-88.2026 35.0087,-88.2008 34.9948,-88.3642 34.9948,-88.3798 34.9948,-88.7865 34.9948,-88.823 34.9948,-89.0176 34.9948,-89.1984 34.9948,-89.353 34.9931,-89.645 34.9948,-89.7249 34.9948,-90.3089 34.9965,-90.2932 35.0417,-90.2133 35.0261,-90.2011 35.033,-90.1751 35.1165,-90.142 35.1356,-90.0969 35.1182,-90.0656 35.1373,-90.0673 35.153,-90.0951 35.1599,-90.1177 35.1894,-90.0969 35.1947,-90.0777 35.2259,-90.1021 35.2537,-90.149 35.2555,-90.1681 35.2798,-90.1559 35.3024,-90.109 35.3041,-90.109 35.3424,-90.0743 35.3841,-90.1299 35.4136,-90.1455 35.3997,-90.1368 35.3771,-90.1733 35.3789,-90.1716 35.4136,-90.1403 35.4362,-90.1125 35.4727,-90.0812 35.4762,-90.0673 35.4658,-90.0743 35.4362,-90.0551 35.3893,-90.0412 35.3963,-90.0517 35.4067,-90.0326 35.4275,-90.0186 35.4675,-90.0482 35.5057,-90.0378 35.5492,-89.9891 35.5596,-89.9578 35.5422,-89.9509 35.5214,-89.9213 35.5144,-89.9092 35.5388,-89.9109 35.5492,-89.9422 35.5579,-89.9561 35.5892,-89.9109 35.617,-89.8953 35.6152,-89.857 35.6343,-89.8518 35.6569,-89.864 35.6708,-89.897 35.6517,-89.9318 35.6604,-89.9561 35.6934,-89.9561 35.7334,-89.9092 35.7595,-89.8744 35.7404,-89.8483 35.756,-89.8188 35.7577,-89.7823 35.8047,-89.7354 35.8064,-89.7058 35.8186,-89.7058 35.8359,-89.7719 35.8655,-89.7667 35.8898,-89.7493 35.902,-89.711 35.9055,-89.6711 35.8846,-89.645 35.9037,-89.6572 35.9263,-89.7145 35.9645,-89.7336 36.001,-89.7093 36.0028,-89.6937 36.0202,-89.6745 36.0879,-89.5946 36.1279,-89.5963 36.1574,-89.6294 36.1853,-89.6937 36.2252,-89.6937 36.253,-89.6016 36.2374,-89.5633 36.2513,-89.539 36.2496,-89.539 36.2756,-89.5772 36.2878,-89.612 36.3104,-89.6207 36.3243,-89.6033 36.3417,-89.5442 36.3364,-89.5199 36.3486,-89.5094 36.3747,-89.5442 36.4268,-89.5199 36.4685,-89.539 36.4981,-89.4851 36.4981,-89.4921 36.4685,-89.4677 36.4581,-89.4434 36.4685,-89.4173 36.4998,-89.3461 36.5033,-88.8352 36.5033,-88.8265 36.5033,-88.816 36.5033,-88.5171 36.5015,-88.4893 36.5015,-88.0531 36.4963,-88.0392 36.512,-88.0322 36.5398,-88.0705 36.6788,-87.8567 36.6649,-87.8428 36.6336,-87.6934 36.6371,-87.6412 36.6388,-87.3354 36.6423,-87.1146 36.6423,-87.0608 36.6423,-86.7636 36.6493,-86.5985 36.6527,-86.5637 36.6336,-86.5064 36.6527,-86.4108 36.651,-86.2057 36.6406,-85.9763 36.6284,-85.7886 36.6215,-85.4359 36.618,-85.2968 36.6249,-85.276 36.6267,-84.9753 36.6162,-84.7859 36.6041,-84.7789 36.6041,-84.261 36.5919,-84.228 36.5919,-83.9882 36.5902,-83.9308 36.5884,-83.6945 36.5832,-83.6754 36.6006,-83.472 36.5971,-82.9854 36.5937,-82.8308 36.5937,-82.6083 36.5937,-82.2938 36.5954,-82.2434 36.5954,-82.146 36.5954,-81.941 36.5937,-81.9219 36.6162,-81.8263 36.6145,-81.6473 36.6128,-81.6768 36.5884,-81.6907 36.5519,-81.7081 36.5363,-81.6959 36.5068,-81.6942 36.4668,-81.7168 36.4564,-81.7185 36.4251,-81.7411 36.4112,-81.729 36.3921,-81.7342 36.3799,-81.722 36.3521,-81.7654 36.3399,-81.7933 36.3625,-81.8558 36.3364,-81.8784 36.3139,-81.9062 36.3034,-81.9184 36.2878,-81.9323 36.2652,-82.0296 36.1244,-82.0539 36.1262,-82.08 36.1036,-82.1304 36.1053,-82.1495 36.1488,-82.1773 36.1435,-82.2225 36.1574,-82.2451 36.1314,-82.2903 36.1349,-82.3355 36.1157,-82.3546 36.1157,-82.4032 36.0879,-82.4172 36.0723,-82.4606 36.008,-82.5058 35.9784,-82.5405 35.968,-82.5579 35.9541,-82.6101 35.968,-82.6135 36.0045,-82.5909 36.0323,-82.6031 36.0393,-82.6361 36.0653,-82.7508 36.0063,-82.7752 36.001,-82.7769 35.9698,-82.8221 35.9228,-82.8516 35.9489,-82.8985 35.9454,-82.902 35.928,-82.9194 35.928,-82.902 35.8933,-82.9211 35.8672,-82.9159 35.8412,-82.9455 35.8238,-82.9611 35.7908,-82.9959 35.7734,-83.0358 35.7873,-83.0793 35.789,-83.121 35.7664,-83.161 35.7647,-83.1905 35.7282,-83.2392 35.7247,-83.2548 35.7143,-83.2548 35.6952,-83.2878 35.6726,-83.2983 35.6569,-83.3417 35.6639,-83.3973 35.6239,-83.446 35.61,-83.4981 35.5631,-83.5833 35.5631,-83.6076 35.5787,-83.6406 35.5666,-83.6632 35.5683,-83.764 35.5631,-83.8283 35.5249,-83.8804 35.5179,-83.9135 35.4762,-83.9534 35.4606,-83.9604 35.464,-84.023 35.4119,-84.0073 35.3719,-84.0386 35.3476,-84.0299 35.332,-84.0299 35.292,-84.0542 35.2694,-84.0977 35.2468,-84.1481 35.2468,-84.1881 35.2398,-84.2106 35.2659,-84.2263 35.2677,-84.2906 35.2259,-84.2923 35.2068,-84.3219 34.9879))&quot;</value>
                                    <value>35.75</value>
                                    <value>-86.25</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='76' y='-155' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='1' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>States: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]&gt;</run>
                              <run fontcolor='#787878'>&#10;Avg. Violent crime: </run>
                              <run bold='true'>&lt;[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Geometry (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Latitude (generated)]</field>
                                      <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>466.04000000000008</value>
                                    <value>&quot;CALIFORNIA&quot;</value>
                                    <value>&quot;MULTIPOLYGON(((-114.6271 33.4342,-114.6514 33.4133,-114.6827 33.4185,-114.7244 33.4046,-114.707 33.3838,-114.6983 33.3525,-114.7035 33.3299,-114.7296 33.2986,-114.7192 33.2865,-114.6844 33.276,-114.674 33.2587,-114.6896 33.2448,-114.6757 33.2222,-114.6757 33.1839,-114.707 33.0918,-114.6914 33.0831,-114.6653 33.0345,-114.6462 33.0484,-114.6132 33.0275,-114.5749 33.0362,-114.5158 33.0275,-114.5019 33.0084,-114.4932 32.9719,-114.4689 32.9719,-114.4811 32.9354,-114.4637 32.9041,-114.4759 32.8398,-114.5106 32.8155,-114.5297 32.7929,-114.528 32.7582,-114.5836 32.7356,-114.6166 32.7286,-114.6879 32.7373,-114.7018 32.746,-114.7192 32.7182,-115.0116 32.6989,-116.1039 32.6187,-116.4216 32.5936,-116.8785 32.5555,-117.1252 32.5339,-117.2269 32.6956,-117.2478 32.7303,-117.2704 32.8172,-117.2773 32.9267,-117.3086 33.024,-117.3677 33.1387,-117.4546 33.2534,-117.5258 33.3299,-117.5954 33.389,-117.6388 33.4255,-117.8317 33.5558,-118.0524 33.6949,-118.1202 33.7279,-118.1671 33.7383,-118.2575 33.7192,-118.3079 33.7227,-118.3896 33.754,-118.4069 33.7835,-118.4261 33.8704,-118.4678 33.9416,-118.5234 33.9955,-118.5842 34.0216,-118.6624 34.0285,-118.8084 34.0268,-118.9422 34.0598,-118.9787 34.0685,-119.1021 34.1137,-119.1994 34.1693,-119.2776 34.2406,-119.3489 34.291,-119.4479 34.3501,-119.4844 34.364,-119.54 34.3883,-119.6096 34.4057,-119.733 34.4074,-120.1483 34.463,-120.4159 34.4804,-120.5967 34.5621,-120.6175 34.5864,-120.6245 34.6298,-120.621 34.8228,-120.6419 34.9375,-120.6419 34.967,-120.6401 35.08,-120.6506 35.1182,-120.6731 35.1443,-120.7079 35.1651,-120.7844 35.1894,-120.8348 35.2242,-120.8661 35.2729,-120.88 35.3858,-120.9025 35.4223,-121.0068 35.4849,-121.1771 35.6257,-121.2727 35.683,-121.3631 35.796,-121.5125 35.9784,-121.6672 36.1331,-121.8097 36.2513,-121.8636 36.3139,-121.9227 36.4546,-121.947 36.5832,-121.9331 36.611,-121.8879 36.6197,-121.8636 36.6319,-121.841 36.6632,-121.8254 36.7153,-121.8184 36.79,-121.8341 36.8474,-121.8723 36.9117,-121.914 36.9482,-121.947 36.9603,-122.0687 36.9673,-122.1295 36.9882,-122.2042 37.0316,-122.2946 37.1029,-122.3832 37.1706,-122.418 37.2384,-122.4006 37.3531,-122.4475 37.4852,-122.5136 37.5043,-122.5136 37.5982,-122.4962 37.6659,-122.5031 37.7076,-122.517 37.7754,-122.4736 37.8015,-122.4145 37.8067,-122.3867 37.7963,-122.3537 37.7233,-122.3728 37.7076,-122.3832 37.6989,-122.3728 37.6433,-122.3433 37.6016,-122.1921 37.5339,-122.1573 37.5339,-122.1538 37.5512,-122.1521 37.5651,-122.1799 37.6416,-122.2529 37.7493,-122.305 37.7893,-122.3172 37.8136,-122.3241 37.8797,-122.3363 37.8901,-122.3954 37.944,-122.3919 37.9596,-122.3519 38.0031,-122.3015 38.0291,-122.2876 38.0517,-122.2946 38.0674,-122.3311 38.1056,-122.3867 38.1265,-122.4076 38.1282,-122.458 38.1021,-122.4684 38.0969,-122.4805 38.0309,-122.4666 37.9874,-122.484 37.9283,-122.4284 37.8814,-122.4788 37.8328,-122.5379 37.8241,-122.5727 37.8519,-122.7186 37.9197,-122.8455 37.9944,-122.9341 38.0152,-122.9793 38.01,-122.9932 38.0205,-122.9915 38.0517,-122.9724 38.1213,-122.9706 38.1717,-122.9811 38.2446,-122.9915 38.269,-123.0228 38.295,-123.054 38.3124,-123.1409 38.4341,-123.313 38.5644,-123.4416 38.6861,-123.5407 38.7677,-123.6223 38.8355,-123.7005 38.9172,-123.7127 38.9589,-123.711 39.0528,-123.7961 39.2978,-123.8065 39.3691,-123.7892 39.5359,-123.7926 39.6037,-123.8048 39.6714,-123.8517 39.7948,-123.8795 39.8383,-124.0325 40.0016,-124.1002 40.0729,-124.3071 40.2137,-124.3557 40.3075,-124.3783 40.3735,-124.4096 40.4396,-124.3714 40.5421,-124.2063 40.8115,-124.1593 40.9123,-124.1367 40.987,-124.1454 41.1295,-124.1107 41.2633,-124.0916 41.3711,-124.0898 41.4649,-124.1072 41.5692,-124.1524 41.6978,-124.2567 41.7778,-124.2393 41.8073,-124.2132 41.9272,-124.2115 41.9985,-123.8222 41.995,-123.5181 42.0002,-123.2313 42.0037,-122.2894 42.0072,-121.4482 41.9967,-120.88 41.9933,-119.9988 41.995,-120.0006 41.1834,-120.0006 39.7218,-120.0041 39.4455,-120.0058 39.3169,-120.0041 39.1657,-120.0041 39.1118,-120.0023 39.0667,-120.0006 38.9989,-119.905 38.9328,-119.5852 38.7139,-119.328 38.5349,-119.1577 38.415,-118.4278 37.8971,-117.8334 37.4643,-117.1661 36.9708,-115.8453 35.9645,-115.6489 35.8099,-114.634 35.0018,-114.634 34.8714,-114.5871 34.8349,-114.5523 34.7654,-114.4706 34.7115,-114.4255 34.609,-114.4359 34.5951,-114.4029 34.5655,-114.3803 34.5291,-114.3855 34.4578,-114.3751 34.4474,-114.3351 34.4491,-114.2986 34.4248,-114.2882 34.4057,-114.2638 34.4004,-114.2273 34.3674,-114.1787 34.3501,-114.1387 34.3031,-114.1335 34.2597,-114.1648 34.2579,-114.2239 34.2041,-114.2291 34.1884,-114.2569 34.1728,-114.2882 34.171,-114.3229 34.138,-114.3507 34.1328,-114.389 34.1102,-114.4133 34.1085,-114.4359 34.0789,-114.4394 34.0216,-114.4654 34.0112,-114.4602 33.9955,-114.5002 33.9625,-114.5228 33.9556,-114.5349 33.933,-114.5263 33.8999,-114.5037 33.8687,-114.5297 33.8565,-114.521 33.8252,-114.528 33.8148,-114.5054 33.7609,-114.5106 33.7331,-114.495 33.7088,-114.4985 33.6966,-114.5297 33.6775,-114.5158 33.6601,-114.5315 33.6514,-114.5228 33.6132,-114.5402 33.5819,-114.5245 33.5524,-114.5593 33.5298,-114.5662 33.5124,-114.5923 33.5002,-114.6201 33.4585,-114.6271 33.4342)),((-118.3322 33.356,-118.334 33.3334,-118.3618 33.3264,-118.4243 33.3369,-118.4626 33.3612,-118.506 33.4133,-118.5373 33.4342,-118.5442 33.4498,-118.4991 33.4446,-118.4191 33.4151,-118.3322 33.356)),((-118.5807 33.0345,-118.4434 32.8763,-118.4573 32.8624,-118.5043 32.8972,-118.5581 32.9719,-118.5773 33.0101,-118.5807 33.0345)),((-119.5435 33.2795,-119.481 33.2552,-119.4688 33.2291,-119.5314 33.2448,-119.5487 33.2621,-119.5435 33.2795)),((-119.9137 34.0772,-119.6826 34.032,-119.6356 34.0303,-119.5852 34.0407,-119.5626 34.0233,-119.5957 34.0025,-119.7225 33.9747,-119.7868 33.9729,-119.8633 33.9938,-119.905 34.0529,-119.9137 34.0772)),((-120.0458 34.0007,-120.0075 33.9695,-120.018 33.9486,-120.0631 33.9277,-120.1153 33.9243,-120.1622 33.9399,-120.2161 33.992,-120.2057 34.0042,-120.0718 34.0268,-120.0458 34.0007)),((-120.3621 34.0737,-120.3377 34.0407,-120.369 34.0251,-120.442 34.0372,-120.3621 34.0737)))&quot;</value>
                                    <value>37.25</value>
                                    <value>-119.75</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-165' y='-56' />
                          </annotation>
                        </annotations>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='California provides better unemployments and also ranks 1 for the process friendliness. Tennessee provides very little unemployment benefits' captured-sheet='Unemployment benefits' id='4' />
                  <story-point caption='The average median household income in California has always been higher than the US average. But the same is too low in Tennessee.' captured-sheet='Statewise Median Income ' id='5' />
                  <story-point caption='The average median income in California is higher than the US average. But it has always been low for Tennessee' captured-sheet='US Median Income' id='7' />
                  <story-point caption='The motive for crime is thus low in California than in Tennessee.' captured-sheet='Dashboard 1' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Statewise Unemployment Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Unemployment Rate:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Statewise Property Crime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Property crime:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Statewise Violent Crime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[avg:Violent crime:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Unemployment benefits'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Median Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[none:Year:qk]</field>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Statewise Median Income '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ym66pd14s03oo1h5n4ke00n64zl].[none:States:nk]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='11' param='[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:States:nk]</field>
            <field>[federated.1pdak030h08zzb11m9gm91chd6yk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='US Median Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dyvsfe05g5nqp13rkitw0xb5cqm].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Statewise Property Crime'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Statewise Unemployment Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Statewise Violent Crime'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Unemployment benefits'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Statewise Median Income '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Median Income'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='3' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9eZRc133f+XlL7WtvQDe2BkgQK8ENXCRKlESKomIttixZsilZPvacOJOT
      E89MJplJxpOZo8lynDh2kokmzuLYlqPYsi3TkizJlChRpETS3AmAJECsjaWB3quqa6966/xR
      /Xt963V1oxsLAYb4ntOnqutt9917f7/726/m+77PDdzAuxT6tW7ADdzAtcQNAriBdzVuEMAN
      vKsREECzWuKtE6dptlpruoHvtJiaLfU8dm7sGK+++iqzs7McPja2tpY5LQ4dPra2a5aBtOPQ
      m0fx3qEaz9Ucn1NnJ65EEwHwXIs3Dh1kZrqAI21wLSanC1fsGVcSxpe+9KUvAfynf/9l7r7v
      bsbPT/DNx77O6PadTJw+gZnM8u2v/B76yChWcQrH8zly9BTl4hTVWoPJs8d57cQMKdPBjCeo
      FaeptCGdjNGYPMrvfPNFPvNTH6JcmuH8uUnK5RL5gUGmz5/GNWKceOsolXIRy2rTtOHcySPM
      zJXIDqznt3/zn/ORhz7Im0dOEo/A4eNn8FoVpmbmKBaLtNptpmeLDOSzHD92jIipcer0Oear
      DdrFcb72+LPsv203jcmj/MH3D5EsvcnhYoyNWY3zM2VahXN87fFnuXX7Rs5OzNGfz17j4Vge
      V2t8/uD7h3jzB18ltmEPbqtGy4GZ82NosTSnj73ZGYu+ASpzE1TaMDN+kkq9yam3DvCTl4/Q
      blTxfY+2q5GKafxf/+gf8cBP/Swnnn8WJ5ugWpxn6txJXnjzDLQbXWNt+u1r3u+mfHnog/fz
      G1/6Eh//4q9x7MRxzOo4TzzxOM30dhpHjvGBz9T4zS9/hZHhjZTPn+SWm9fTSO/gkdv6GTs3
      yfHnv8PDP/cFvv77XyE3PMI//kf/AF3XQdNA04lEYnzt9/89O3ZtYK7+cb7+p3/KhpENlMaO
      cNd9e7D0Pt6aaDBUf4PbPvDT/Oi102jA1/7jv2Z4135ePTHO4We+xy/9j3+bmTefouj18/Sh
      M8RbU/zSJ+7nsScPcNt73stTTx8k7hf5m59+CD+WA0BDozhxiifOOvzWF+/ku1//I37w7Mv8
      vS98FD+W48v/8jeoEuV/+vX/h4HYtRqKlXE1xkdDozQzwac+9kWylWN84+Uqu/Mu55x+Jr72
      F/QxuzAWRzn36nPkhkcYTdRJ7/wQtfFD9O95hB9/9w+58yO/wH13b8ApjXGsaLBpMMumn/kk
      R579Dt85VmX/iMGJs21e/+E3u8Y6Xz11zfs9EIHGzk7xC5/7GRq1BvGIzvmJSWptF7vVJJuL
      UyhbRI0on3/0czx8/63cdM8j1Cvz+O0mlUqFe+/ex8FDJ0glovz8o58HoG/DNiLNOQ4ePEAs
      laNWrTE7V6JcaxI3TR599LPU63WK82UKc3OUSiU0TeP8+UmGBzMUSyWyg8OMnR5nw4ZNfOYj
      +ym2YzTqDYqlEq1mlXKhgBfPkd+0m/ft2UijXma+UMCPJinMzgAwNTWFr8f54B0b+c9/9G3e
      On6C/nSMaCpDYXaGwf4cD37858hErs0grAZXY3ympqbwfZ2HHn6QZqOB7Ue57979NIoT5AbW
      LY7F8EhwXb3RILt+lF1bR5iZmeGXvvgoJ89MkYzomAM38eCuPE88/SwHDx+jvnDPm7cMU67M
      Lxnr66Lf/esM//Tv/4r/yqnCkt9r0yf9r/7ZX/m2dw0a9S7FcmOxiLb/ta98xZ+rtN62Nl1p
      aL5/wxF2A+9e3DCD3sC7GoESfOzCDE3bXfWFCc1j02D+ouf5vo/neRiGsar7yoKkaRq+76Np
      WnBM0zR0Xcd1F9up6zqe5y25h67rrHZx03W9o7ADnucF99M0DcMwcF0X3/cxDCNoT7ht4WvV
      d+j1nNUiFutoh61Wa8nzriRknOS7CtM0l7ybaXamjuM4XedKn0GnP2S8pL/UeSDPDPft5b6H
      Oj8uhoAA/tuLRzlVrK36wpvNFv/LJz8ILB1o9UV838eyLKLRKJqm4XlecFyuk86Rz3w+T61W
      w3Gcrt/lUzpW7q/eSz7z+TzlcnlJ54RhGAa5XC5ok+u6GIZBoVAgm80SiUSWvEO9XkfXdaLR
      aNeE9n2fUqljc/c8j1QqheM42LaNruskk8lgQq8G7Xa7q0/Xcu1a0Wg0ME2TZrPZNWF93yeZ
      TGIYBs1mM+jDfD6PrusBAUgfaZpGIpEIro/FYlQqFRzHCfpMCKrZbAbzwTAMkskkkcjlacS+
      79NoNLr6brnzNE1bJIBLeFTAaWEpEYQ5n0DTtCUTP8ztq9Uq0Wg04A7q/UzTJBaLYds27Xa7
      i6jkeulguS6RSNBacCCp7dR1ves6IOBQfX196LpOu93G933i8XhwTiKRWHKd3Dsej9NqtdB1
      nWazSSKRwDRN2u020Wj0knv7aiOZTOI4TjCh1ZWu2WwG3+W9HcfBdV1SqRQA8/PzQT8ZhkGt
      VsP3fSKRSHBPmfQqZCxc16XRaJDL5S7rPXqNy3LnwRXQAWQihyeh2ohIJIJlWcG54Ukd/u66
      Ls1mE8MwyGQyweTTdZ1MJrP0JUKrQbvdDjpaxCZZslXxJplMks32dsIId6vVasFzRAxwXZd6
      vY5lWXieh2VZwbKbSCTIZDJEo9Fg8hiGQTqdXiKqXW8wTZO+vj6SySSpVIp4PB70vXBz0zRJ
      pVIYhtHFreXcSCTSxbjC4q/6O3SP3WrF5IshHo8H470SfN+/nBVA6+ISvaguzOkdx+nqNPVY
      L9lYxIdUKoVpmpimGSxv6XQa3/exbTu4l/pMVTZtNBpdSzpANBq9qEgh4pF0pkxmWe4ty+o6
      P5PJEIlEgr94PB6sVOl0es3y/9uB8Njpuk4ikQiYiKZpRCIR0un0ipxVCMXzvIAIRPSTfrAs
      K1idZbKrc+hKrZC6rpNKpZaIwCoCiWKlGy03sReOrqlR0Wg0mNCmaXatFiohwOIkjkQiJJNJ
      oKMMNptN2u02uq5j23bAdZdbSXpBiE3ue7FzVU4SjUYxDCNYytU2+75PrVYjl8sFE12IVsSi
      WCx2XRCB53k0Gg1c18W2bdLpNLFYLNB/NE0jGo0Gsv+lTMx4PE4ikQA6jCQWiwWSgroKm6aJ
      4zhXTAkWGIaBaZrYtr3ifbsJwPfZnXBwmzWOa32Y7Rq63cJOD3ZCGrpPDdBL7pJJrVpXTNMM
      xAaBHBdrgSrHi7jj+36gSInML9ypl8ilInxfWcovZSLK6uU4TtdSri7j9Xo9WAFULhePx6+q
      FWct0DQtEEk1TaPRaAQEHY/HSSaTgTK7Wnieh+M4eJ5HPB7H8zzq9Tqe5xGLxQJCMgxjiaiz
      GnFlrVhOvwyjaxbsSrhENJ/jfkcu3qPX+N8euZsNhRPgL5VfVZGil2yvHlcntlgZVAtC2BTm
      OA7z8/MUCgWKxWIg6qgvF35heZYsx5FIJFBY1XZdrjUlrNTLSiT6QKPRAOhqs3retYaINSqk
      by5mQRErS0uJSrVtm1KpRL1ep9Fo4DgO7XY7WKWFwKCj31UqFUqlEq7r0m63qdfrtFotWq0W
      7Xb7iuhKqsl1VSuAadX5xfffzj/77gsQyxBtzFNu1Tgzfp5f+/xnKFerPPbaCWaqTSxfY0LT
      +Rd//gT9WPzKz3x0WTOoCpUqRZlUiUCuDUxUIftz2Bwantjqs2VZbTabXRNR1/XLVrZM0+zy
      M6irWNjMK2g0Gti2fdlWjiuBsI4U7j9ZacOij3B50X2E0ahjKBMvbE0S02ilUsHzPBKJRCDS
      9vK3ZLPZyxYXVetf+P3lMyCAT+zeiGno6FaTO/qT/K2f+xg+EI/Ficc7HHPfnt1omkbbsjh8
      7CQX5or8+aHT/PjQW3x4/z6efPE1Wh584v79PWXx8IoR5kK2bQd293a7zcmTJxkdHaVQKDA8
      PMzs7CxDQ0NMTU0xOjrK5OQkzWaTaDTK0NBQYHkRPUMGUp30l9OpIiPLQIVXItUB5/t+19Le
      brcD0elai0JqO1TGI0xHFHzpOznXdV1qtVpgzwcC/4gQRjQaDa5VrXTyu2r3l8kpuoGIq7Iy
      rEUEWw5h83z4WDBCt+7ayfjkNL9w/218+N47VxykWDTKXfv2cBewfrCfP3zuTezKT/jRVBsa
      FfZtGWHLxpGuBvQSj8KTR+WclUqF0dFRYrEYkUiEsbExNmzYwPj4OJlMhtdff52tW7cGk318
      fJxt27b15O5hM9ylTkKZDCpX6XUvTdNot9uBSCerXbvdptFoBLbzawVVh5G2i2wu4o+u61Qq
      FTRNI51O02w2A9keCAjAtu0uB5llWYG8LxNdGIEopCoTEXieRyaT6erfy2UWYm0Ke6vlvX3f
      X9QBypUKmUSch++7a00PvXffHn79Ux/k2TmbTH2WiO/w+y8eozhf7mkm7WX96eUXWLduHbOz
      s9RqNVzXZf369eTzeQYGBmi322zZsoVSqUQmk8GyLAYGBtA0LZhcKocLP2N+fj6Q09cC1R8Q
      RvgZrVYraHu5XA7aIt7Pa4XwBBOIqVKgtlG88mJMUEUoUZhV/UZWXsuyAgYmv8unrPQCIT5Z
      KVW94VIRDpsRdJl95cuff++HHDm5xrTFBWwcXs8/+eyHSSYTDDhV6sU5vvPKYaC33B623ixn
      yRkdHSWXy7Fhwwby+Tye55HP5xkZGSGbzbJlyxZyuRwbN24kl8sFXEwcNfL8MERZvRQIR4xE
      Ij2tX+o72bbN/Px8MJkMw0DXdVqt1kXNtVcLKjMScVCMAr2cmSphu667JAZI0zSy2WygD6jv
      Fba2qQ4yy7ICT7wcsyyrS59oNps9ufelvrd8qm0MWjfnx8ll0pf8gKGBAe7cuwctEmNAtzl1
      YZrxiUlgsWPDDxfxoNcKoDZc/ZPzpeMikQj5fD44t91ud+kW4pCSdqiDuVarjNo+1Y8Qfq+w
      rVs+DcPAtu1rSgC6rpPL5bomvRBmOK4pDNu2g/cSM6ogmUwGsn4qleri5uo9pT9EnwqPvWpY
      EBNtq9W6JEJwXTdwzKlBk+qYBG/88J5R7rrt1jU/RMX7d2+jZSbYt2mIfMTnyYNHuxRDgTph
      esXjqBBFTK4LK7Ge51GtVrsITOzREjqhWmbU+9ZqNYrFItVq9aLBU2rb1XaH2yjHwqZSgSoP
      XyuIjV/Xdfr6+oIQhkQiETj6etnPhQH1WrFlZUyn01iWhW3bARcXpFKpQHcQp+hy1kN1LBuN
      RuDNXwtM0ySXywUBeL38DcEo7d+3d00374WRkRE+fv9+xi5MYZdmmZiZ5RvPvkK7bXURwUoT
      XkVYfu91jcrVgSCiEToTUWJ25Hp1UEUZbLValMtl6vX6iu3xPG+JWU06NrwK9ILqkLvWHmHD
      MMjn810GAtu2A/kdlk5I+U0IISxGilio9oU6PiIWqpYleYYqLvV6lhDCWlcCeZYQ95Lja7rb
      KvDA3Xfw8HvvphLvo9ls8pNzRb761IvLavTygr0Q5jBhcanXhKvX68FEEy6jmsLChCjPN02T
      VqtFtVpdtpPFRi339v1O7LmqD6hiWriNIgKp7VwtLteJ1ot4w0in02Sz2a6/5ZxJsoLW6/Ul
      46Be47pu8FwRRXpxfRmDXiER8n+73Q4iAtYCua7XnLniPmjTNLl7/36+/fJhtEgCp3SBRm57
      cDxse5ZPdWkV8cU0TSKRSJfFJmxZkuvERLdccFwvHUSWWNUiITbweDwe+A/E8aUqgNVqNbim
      2WwG50jiSlgkk3dptVpBsFij0QjEj4th4htfo9luY27eih+Nozs2N73/Q0RX8GrL6ub7fhBI
      KKHkQrRhhBVPte96jUGr1cKyLPr6+nr2OywSryjM4ikWZiEmUdu2icfjXdG16rOgw8Bqtdqq
      HWXtdhvXdYnFYkFOgswv37+saNDlEY/H+ewH7mHswhR92TSReDJ4iXB47HLLLBDEp/cSG3qF
      I6i25XDEobpyyLXiuAmfo3JLkZfFKVOtVpfIrkDgQBJFUOX04tHWdX0JsbXb7SBwbCUP9Trf
      xpyfgvmp4LfTx14n8cinGBndGhCR7/uBLV4+2+12QAiinBqGQblcRtd10ul0EKCoImzBC+s/
      omCqjKtcLpNKpYI8AFk1VaITBlCr1YKgO1lNJQR+fn6+Zz/IM1cLdfVIJpNBDJnruh2mtuo7
      rRG377uV227di2maVCqV4IHQm6tIY8PHep3X6xpRfOWFxcIQnvzSeeJB7vW8sOMs3AbhqCq3
      krgXTesE22maRrPZDOzgYjp1HIdKpRI8CwiceWsN0djcqnLk1AnS/QOkUilisVhgNTFNk2Qy
      2bUqAoGeIyKBxOZI5G06nQ64s8TlqO9vGEbgM3BdF8uygpwKsQzVajUymUxg8RInmhCDWJ3k
      3cUJFolEaLfbWJZFKpVaopOpq6qs0heDPFcYj4znVV0BYDH7R1LnVJl4uUmtHu91bKXfwxYi
      ETmks2XSCfcRcSasZ/R6ljoJhLuL11I8jeqqUK1WA0uQ/C5ZUurSLsTmOE6QiiiOpdVCzqzX
      611JQBKCLWEJ4f5WRUjxzM7PzwcTJZlMBkqu9K0oqu12e4mNX40uFaVVPS59BATxUKpJVBV7
      TdOkVquRSCRoNBpLxKB4PL6mgEZZvYWwVUZ71QggGo0GD0wmk0uUvl5ypcSL9ApYU+VqWD7u
      X34Xs55wV2lPpVJZEswm6GUuhUWZP5VKBYMqKYDqu6htlHcVLilBYOHwaZkUnucF8S9rIQD1
      vVXi6qWchs+X9kp71ODERqMRmJCFiagWNckjkGeo5l3xvaimZdU3ImEhAgmTVsdX7idiiwrJ
      yV6tKOT7nTD1sDjt+/7VK4uiaZ2wBJmAyWQykDNVTh82iUYikWBZ7MWR1c/wcXXARZmr1WpL
      5EY1j1m9nzox1cntOE7g6FE9zL3aoN5XOLFwODVmppdSeSnw6U7zXM6CEu470cfk/URel/cQ
      b7rI75ZlBSKVGArK5XIwVrZtB0qsrGiNRiNomxpDJNeHpQJYDImo1+uBWVa1ssl51Wp1RYud
      CgnU68VAr9oKAHTJeiL/qhk6KjdUG6XGpahOpV7LuIqwIuu6bsCJJDhrNZMtvNpAR2bO5XLB
      qhZuR/g9hJOLpUesQ2G/hSo2iFi1VqzGGhKe/Op1vVZCERnVdqZSqa7JKtGh6jmqL0Ceod7f
      siwSiUQXg5OJLlxfnqGuJGHHoayerut2VfXoBVm11LB6wVUlAOjmQJLWKI1ZiVv1CqtVuW14
      FemFer1OOp0O5EgRiS4FotyJgqlC8otlMsiEFgeZ5Nmq91LfWSpH1Gq1VSl2KjSWxvCo/4f1
      GXVlE/FGTMiqY6sXc2k0GktW6DCjkP5VS6v0Wp17VQoRxGKxrpIzIlaJbqG2UYhwpRzvlYwv
      b5s70vc7mUThuHx1Moc7Xa0moZ6ryq6qSKXKjyIPt1qtwBIgCulyCnh4ooSXTBn4cHtU77N6
      rjrQy71jMpkMktAvxRLk081l1XarDsZefZvJZMjlcgHRqZG0QM94fHVl7mqHQli9rGZhUVHe
      U8yeYdO4OvktyyISiZDL5YI2qUQjWXjLrZ6q2Boe16u+Agg0rVOGRNzZYhtXZdFelheRKZez
      U6vfe60GYh6VZ4ljS1XIRVEXS024DcItw3KoPDMc3BYWAcTOLsQs3EzNF5CKCTJIqw2VkLdV
      9Rr1c7lxkGukT6RsS1geB5b0l7y7+hmLxUgmkz0rMYTb5HmdomHioFruXUV5lTki2X0S4yWG
      FckwW+6dVeIMt+ltIwBYnAziMRXOqU66XrBtO3BYybKnyothiGKn1gKSwbwwMcF77ruvK0Zf
      07Qu3UR+7xVBqD5TNe+GIRNdCFjeQRxRmUwmuKdYRCzLCjzM6fTqI3PVydhrMoU5n3DLZDIZ
      iD+9TIRSgUPkcDWRRu6rTmrxLSw3EYXwdV0PvNK9zlXNzpFIJLAayViIFS8ejwfiz0qVK6LR
      KK1Wa4kVEt5mAhAIt52ZmeH4yZN8/ZVjNOM5OvzMBzSM2hyJdJzBzZsXrpKOXzhHnXMLfdgu
      zPL+O24Ozla79q23xign+jHxufCjn5AyNHZvG6Uvnw+4oMiRzWazyxMsn70sP/IZJhARZ8Ir
      SjgbTLzOci+1itpq4LP86qe2Mdw+sbmLB12sLepKJ34U8Z6GRVB1pRMTY1j8USHik+gRopup
      eo/v+wEhqcwnk8kEedWO49BqtUgkEkEoyUorpuhZYYVd066iH+BiMAyDf/PY98nncnitJnbf
      lu4T2nXI5DCyOTRjdc10Wi36R9b3PJaZmaeRWAfA0YXfXj54nD7NIWu3uHXrFtatW0c2mw1q
      +6gDD8sH4KnnhE110BnwWCy2RBEWLtsrTl2S+peDSnS9xLJebVP/F44tTjBN07qiVaU6nxCt
      +GfCuow8T7iwxPnIsV7tVvMAarVa4FiEReud6AniTJQwCSEiMSmvNr1UTNjhGKNrRgCmaTK6
      ZTMvFl3M7Lqe52iDI9SnJklv3NzzeI8rlj3Sl4wyHRoPvX+QPiw+dedeorEYT/74OT72kQcp
      lUqBbBrOXe1lfVKPi/Xne8+9AGg8dO9dgYglXEpd4mOxWCCG+P5iKUXhcMu+qUx+5XuvCddL
      vwrrWr24uNxPxA3RExzH6Rk2rpoqdV0PfAZqIKOsimqYigTnibFCwrRhMZylWq0GNYbUtkt8
      z3Iil4owAQTvd9ErryJ25mK8WGzgpPqWHtQWPJqRFNqFcVIbN68oX14MsXgUr+qgKybM+tkx
      xoDHqzWefGUMx3FJZ3I0WhZnx89z/5272Lhhw7KK5XLtOXriBE/Ma7iaxo7z59myeXOgxMlA
      +H4nfkmtnuZ5XjCgF7MG9RK7ekHl2suJSGJ1icfjXRXvRFQS+V8sVWFI2ISIb67rBquf9Fsk
      Egk86bZtE4vFgtVFnGhAkHssjktN6zjlGo1GYBZXK0xcjFGo/dCrRuk1JYCh/j70Z97EHxoG
      z0W3W2BZ4Lpgt/BaTfRkGqfQsSxcdPJrMH7q7BL5H8BqtnCqGtGBIQA826bi6sxlhxgvN/Cy
      UdpzFX7nWy+zbSjBYDbBD595mU/91IOsX7eOWCxGvV4PxBPxeor4oiZ5vHZuGj+aAdvCcxeP
      i+InVh/f97sqxqlybCwWWzFLLczF5beVLGW9oE524fiqDV+Ud2mPmtACi8FxUhFbxJSw6Cgr
      CSwmzoiRQdO0QOmXc9S+kEK8YsYWq0+r1VpT2cZYLNYVag3XmAB8TcdJrUMvlvCMKK4ZAzPZ
      aVXEIVmZR48naGISnZ4ksX4Ez7FxagvcRdNAGWCnViUxvKvns/RGA626GErsNuvY5oLyFU+i
      j95MYqDMe/wKX/jcz/K7f/xNXp+yeV+xwtDgYBDRKbFEYta0bZu5QiHgjG8dP8HBuglJ0CNR
      Xjw7yY4dtwQJN1IIShS4S13RVCy3EoTFmbBCHBblRBnPZDJBRTfJ8e1VXh4IwpplIkvcfdDv
      C5a/cNyO9Fe5XA44uITNSAy/1HaKRqNBfoZEiwJks9mLErgKVfEP2rHqq68CirUGaBpeYulO
      M1G3hjG0BwB9YD3V2Qnss6ex5mbYfsdtS808QLW2/OvEkkm8Zh3orAB6NEa0PUc7uVhuXddg
      4+gWvvXDv+a540VcPcaZySI7bx4NbNCqKFGuVPndZw4yrSUYas2yacdNTJ05h7PlDjTHIlIv
      M7BthHg8TrVaxTAMEonEsua/S0F4+NXJLYqjeixsv19yP98PzLTCqWWSqtGZ6vVq1GhYP7hY
      wo9aTLjRaJBOp3umnWaz2UDRVoPp1uo4FHHtuhCBitXlU/R8N2QGHNpAC3Btj3i+h84AtCvL
      l8MG8GwLt7XosR0cHmJ24gLWwMbOM6Nx7ti5nX/91e/h6jEi2EF90oGBgWDyi7L40qlzTMU6
      bTG1BFZ5nv7RbdTbDR4YyfHp930wsP2LxzMcM3QlCCFsjxeu3iviNWzWlesFsVgssKyI3iKy
      tlqNu5elKayMi16xEtT+kP4JK6uSVqnqS7KhRzjB6mKQ1VccbNeUAI6Mzyx/0HPXPjl8n8nj
      J8I/kshmicYTJDSXpLuw2wmADlZUY3bhTKNZY3j9evLpBBSr2ER44o1Ztgyf5z39/ei6zslT
      Y3znxCRx0+BE1YFIZ4AbDgzoOtFUmi/c1M/9d94etEBiW8Lvs5b3e95Io8X6ubtZIK4rk4+l
      Io18DyuzYYTNt3KdqmAKVBOpCpmskgknIp5YuNbyjisp7OKbkcA3TdN6KuSrgUqU15QANHzw
      vM63FZw4q7+hxoad27u4gu/7WM0mrVqNZF8/yXXDXVGoZiJJ8ZXXaRPFcyyqtRqpZAzo6Bm5
      qMeu7dsAmJ2b4/Gj5zjhpcAGTAMWBqteqXDcstG0Mp/edXOPpl0epy95Gpv23cmk76Ideolk
      s0bW0LDOnORQYY7bP/rxJdGdqpK5nNUoTDy9QqPVa8RapZoxZYULP/9S9vuSiR2uOKFpi+Eo
      opiLuLbWAEJYJIJrSgB7h/OcOP1W8L9uVXEjHZncAYrPvoIPmHaVHffsRvM9mu5SG/SiMrfo
      SJHYGgAXSPb1EZ0pBp5EUUB1XceMJqiShajPH37jcQ6cmSFhumiey+Z1/czMTPHXx07z4yMn
      cRNp4tqidcZvNbD6RvBcH6fZJl8v8Ni3v8vf+zt/+4rJ+QD77ridvXs7dZvs+x+g0WhQLhbp
      O3kU6/hbjP/kSTa+/0FOPPs067bvpG/DxouKWL3ElomJiWCTwmw2G4SBizOqWq0SiURYt67j
      uxGZX60Up07WS0E4Jkltn+d5geVHcp3DmxWuBcFG2ZLm9nbiT77zIx57+Vzwv9ksYsf7l5wX
      aRe555MP4Jw7jds3iFctY9Vr1I1uyndbTcxohKFMnO17FitRyGBMnRqjFsvDglkO36dwYYqx
      0qIMGWkWcPs2oDXKoBn4sWTH0qRpRK0i2sjW7sYVpvDKJbKtEnfevIXPffpTuNoDh94AACAA
      SURBVK5LNpu9bAJQx2Sl8ZkvFjnzl1/njKuxbfos4/Es93zhly8qIvTyEo+Pj7N161bGx8eZ
      mZlhZGSEZDLJ3NxcVzn0eDzO4OBgV7xU+N5qCcnVQo2HkvsIQQHB3mW+7wde5EQisaodf3rh
      mq4AbrjjVugnzYwQuWkHEYC+fuwzY1STvcMevMI42bGzyi8L3MNyOP76Qez+jZ0YGjS02RnI
      jvR+prZwpabhey665yy1ungu+Uyaf/Z3f7FrA7+3E/n+fvZ8/leI/PkfccgzMcslJr7/bUY/
      8eklIQu9/AQie3uex9DQEOVymVgsxq5duwLLz9DQUJBgVK1WyefzgedW3e5U5dwSqLaWwD5J
      gAqHnaiWIokAFX+DKMiXwnCuKQF8+N59/OXLY3j6xZwZq3sxSZhoYjC5EPcjcq1pmvgJn/5R
      nQt2HIyOfGq0muC5oHfkeXTFouAuFGr1PKKtIn4qhXn0JQy7ibluA3qrgd2yuf99771mk18Q
      jUbZ9fO/xNnf/g2mbIfjJ05gnDjOxu23AN1x+irnV/UENaZHzQ1QZWwJRRavsCTLS9yUrutd
      ubdh0/HFIFtjqWHV4TaLog2LWYXNZvOSVoFrWp9vaGiQ3SOL25S60QyGvTQ0erV0LZ0k8f8S
      YyI7NTYaDcyBQfxyYfGZfeuI1BesUQuE4Ps+eqMMVgujNEm8fB5GNuNlB4iuG2bLhz5MOmYS
      TSToT0X57IPvvZxuuGIwDIP0ve8jGo/hbdjC/GsvAEs9xGEFWP1Uz+11jYRx+L4fbK4tE15C
      3cOmXgl5D4dTL4dwhbiwOKT+LqtFuFjvanFNCcAwDP72Zx6inw61+3oE34xjWr2LIq0GwoVg
      0Wohf7FYDNMwuztK1/FzA2h2E7M+B7aFWTiPk9uAmx7Eya7DT6bBMEnVZhndtxczkSS/Yxdb
      Eya37th+yQrY1cD7HvgA8aFhChPnOTo5w9hzP8bpUcgLlmaphfUB9Tf5X00wl7AHSVmU7+Fr
      ZN+xcrncJd+HIaKNXBuJRJYkQoVFOnUluxRcUyVY8OSzL/Efn3gTtIWsJt9Ft+u4RgpfN4i0
      i/RtHe66xqsUcPuGlt6s3SRneETicTTDwIgtbPTMQuy843BupoKbUrzPZhTjwhi+r+GZsU47
      NA00Hd1uMDyQQI/HicUiGMnUwoBoxKbP82u/9AWSV2Arn15YrRIcRrlc5umv/wnG5DlM22bw
      trvY+qGHl0wkVfYPxyGppdB7+QvU+CFVv1C9z2GCkmdJbFHYfCnXSlUItVxLL6j+DYk3Wuse
      bNdUBxDcc/tuvv7MYQoLfhdfM3CjWYx2BddMYEZh3uh+MV1rERvoobyWZqjHOjpFtFlh0/ad
      XYd938eYfgW0hQEFtJnT+JEoXiKHH0/LieB7uFacyVIZN5HA1zygiuZ3VOh4ucL4+Dg7d+y4
      gr1x+cjlcux6/wd45bE/xR0YZCjkkJIJH7beiLUlvMFdmNtCxxqjFgGQ85Yre6lCfA21Wi0o
      mSOOQqlsJ8QiFevE3Kq2OZxYL8W9ksnkqq1P1wUBZDMZ/vdHH+bXf+9xXEUhdmNZDKuGll+D
      gun7kB/sfPeWVoDQNA3djOKmOyuA5/sYpRk8I4HmtDFqbUTr0OslPF/DN+MYjTJOdl1Xp25Z
      13dFNnK7Grhlx07W/53/mdRCAJ8KKSag/i8TTjU5CsKTHzoWnpXiidT6oSrU/QfkuFowS7zP
      UsFDiEXKxqjBcEIckhQv96vVakGpyIvhuhFeb9q6mUf2jTAYc7siPN1oGs9aQ2lw9VozSu3C
      eexGffF33+/yOmtWi3bdp9XU8WoN3OwATqYPv9mgnduEZyaw/TiWlkGfm0afnwHf54GNKb74
      sYfYsnm1yTpvLzzPQ1uIfgwrprDUCRZWMNX7hFeA8MSX2JxsNtuVcN/LKqM+V7XkwGKYdDqd
      Jh6PBzZ/aXu4uqDUmlK9xnKumta6Eq6LFUDw0w+9l5/5sMb3n3mZ7xy4gM1CqEHk0vb1dbMD
      zLgOTMxg2G10w8ADNFuJs5+bxo3mOqKQoeFrekf8N0003cDLDmHOT2OTxYnnSRsOv3zPJh54
      zz1X1NN7pSEh25qmkcvlgiIA4Yp7gvD3XpN0uXgiTVusgBePx7tyd9VzlvMOSwkZ2bWmUql0
      BfKFnWHSRpXry2/qKraaArrXFQEMDg7iOA6f/PD7sNxn+Mnrp8mlYsz1NIQuY/IKL8uGCf3r
      cemERAAYLQu3MAka+K06aAudZC7GrvhKwJmXX0+kMEkqneXvfvK93LZr0ct8PUPKjuu6Tj6f
      76raoCbyCHqFIIQ5v+pLkPMk9KTZbAZhy2GzZJiAJLgurDireb9hohELX9hyFRbRelWAWw7X
      FQHAoiPki5/6KD/9YBnf9xm/MMELJ89z4EKJSiSDttCRRqtGymnTqszjRBbkPXsVe32ZEehf
      8CLXm53ANkBDkVfFMbbQ+el0nH/xq5+kL39pO72HrShvB8ITWT7VCdzL9ClQiUG1toS5M3Ss
      VFKFT8qoqJYiuVYQXk2kGrQk3wtisRi+v7gtq6RQiuMtDGlfuBz6crjuCEAgZUosy+L2fbdy
      y8038el6naOnTlOstfDdUQb6cuzdfhPF+Xn+62vHmYtnL35jQO8bgFIRP52HepWobmEbHUXb
      KF5A0w20RgVPi+KbcTTf5YN7Ri958sPbO/F7QSaQukl1r4R5wXLyflhvkO/ibOwVctHLjNrr
      WZJAr54TjUa7rE3qDja9TLO6rpPNZrv2NlgJXQTg+z6/9Vu/xa/+6q8GD7Ntm82bN/Pss8+y
      f/9+XnzxRdavX8/GjRspl8tBnmh/fz+zs7OUSiX27dsXaOK2bTM9PU00GmX9+vVBHftIJMKb
      b77JQw89xGOPPcb27dtJJpPcdtttQXvUgkySd7p3x/YlnKs/n+dv3reXf/Xs67iZPjzbQjO7
      zWBdnKDVwI/EOivJ3rsw201uaxW4ecMW5i0XN5rk2fPzJKuzWL4LtoUR7fZDvNMgJeKl79Vt
      Yper07rSBAqvIOKN1TQtsDqFE1sMwyCbzVIqlVbdbnXPAyE0WNwjQCxEou+IB1k2QLlov6j/
      nDx5kqGhIV5++WXK5TJ9fX2YpsnmzZuJRCIUCgXOnDkDwBtvvMHIyEggN7700kts376dsbGx
      wKMnS5fslHLgwAE2b94cbJ4g8TNTU1Ns27aNF198kc2bNwf7TZmmGdibw9vuCGTJS6dS/I1N
      /Tx+Zppf3beNg5MFXnaii841EWUqBR7cMsjWdQNMzhU4NFen4Drs3TrMxx95OLjvT42fZ3Bw
      gD99+gWemGjx6vk5PreGmJbrEaJkShHeyYkJmkrZkqD02AqhEMtCPI10xBur3WbL6ChmaANB
      2bapV5W2MNRVSv4XhVscZpIX4LpuYJKWyhbCPKUiRc9mq55g2dGlVCrRarU4efIkvu+zZ88e
      +vv7OXLkCKOjo4HttlAoMDTU8cZOTExQKpXYs6eTx1ur1Thz5gx33303tVotsP+Wy2UGBgYA
      mJubY+vWrTQaDer1OnNzcwwODmKaJoODHVu+ZCbZth0Qg1rLJmzRkBd2HIfffvIFKunOs2i3
      2G2XePSRhxgaWAy5lmwmuS6MWq3G3/nDv8KJJvk/P7CTvTtvWXYOXGlcqif4Ymg0Ghx+/XWO
      Hj7MfT9+niiL8VZntg6T35Dn5kTI4iM52Aufvg+HGx6371zqBHz9zTfYlY4y4Zk0s/34G7eS
      XTfC4NAQvu/T19fXc7fH8ERXFWcZ37CXOhwK7ft+sCWX3McwjGU9xF0rQD6fpzRfoNqs4QOb
      b+pUa6u26lQmaiRyaabnCx0nKUDEYGq+2PmeiJGPD3OhVFwwxPjkRkY4ceFClw0eoD49E7zQ
      4RMnFzvYMJkpzrNty8auRkopC4mzD7+g2mkSrGWaJr94xw7+wxtn8RNpdjVn+bVf/Pkl3Eas
      D8tlL7mu2zGbxjMcPDv5thLA1UIikaD59b9gaH6esqGzQcm/NnQd14gQ0S9uQTF0n0iPfFwz
      liBu+NxkeNCcwz4+y8kjBuXb3kMmn8dxnCDJplfpl7DiLb9pmsbs7Gwg/vTKOZZqEjIPRGSS
      eKUlbQ3/MFUucEGHluvRcjwsx1/49Gi7Pm3bp+0u/O+4tB2ftuPScjzajk/LcbFtD8dxcR0X
      x+58YnvgOOC4+LaL7zj4tovneGA7+I7b+XMdfvd//Ri379kddEImk6HZbFKv14P9a8O7g/Sy
      Vmxcv46b3zzOCT/FtnX9lyS+5HI53r91iGcnapydrAXLshDZOxGapmHu2c3uHz9HLw/LLRtH
      eH3sNLflLm3FicXjwGLxgfGWQ2V0B+tNg8JPniD14N/g9OwMPrBueGQJIwsr0sIs6/U6pR9/
      j1a7zc6f+2JgfpWMMPElqNvZSun55cb+HTGCUpZP4kRSqVQQhquilxnv0fffwxsnx8hlLl2J
      /eyD7+XIXzyNFutwkPCGC+9ERIaHOJ80WNdwsTSNQkTDMKDiWiQiEbRkGte3MFZ4v0qzzaHz
      U/ihYsXnS1Vu6Vus3t12Pe4pn+PY2JtEHJfq9x/Dyw1wZr5G7b4H2LlrV7AftBrgJtdDZ2zP
      nTjGPZkox61FxVjEY7leIkiBJZ+9cF0TQHiCqVQuZfZE4VHtzeo18ViM/bt3Bor1pSCXzfLo
      HaNEDDOwMEhaXvh57xQkcNk4GGPO8YjpGrebOhow5llYjsvGfI4jkxfYl41RaFkUWjaa1u1n
      1GNxbl8oGKAiHovi1KYxdZ267ZKJRzE0jT2DHTn8O60Yt977ABuf/i7a7AWMvXuDbZPUStnz
      pRIzMzN4vk+zXid97hj0JdmWT3P06BF237k/KE7meR65XG7Nq/KSszOxBEPNOq7v4wKeoeFq
      Op6p4/o+nsfCp9/1v7vwv+t1jvm+j698x/M7vef5+J6nfJdjXue777N+oDNZwxNLymxUq1Wy
      2WyQBlev1wMbtLqPlXgbw3Uh1wpN07h9z+7AKaNudv1OJQLftkjrGuloqF/6+4maBkOZFJ6/
      gSPFArN1jw8NDyy5R6vRO0YrEovhVnxMHeKmTrHSYiQZx9Q1PN9n9/abqD/zfXZHfU5X54NK
      1cHm1abJ5PlxImNHuSeT5Mjp06TQiPgORcuhlBlg4+YtgalTNiC5FCy5atPwZjZd0q2uPjRN
      CywhYiGQGJRjx44FobViKqvX60ENyb6+vjVPUoknkYwnz/M6STXK5hyr8TZej3Bnpnr+3rYX
      xcr12TTrs2neOj/R81xtmVw9x/M43XQw9A6BJCIGh+bK7F+XR9c0SGVJWQ20ZBSq85w+8Aob
      995GLBZj/OxZWs0mznyROzOdUI65RovtQ4Mcblr0vedhdm/rlJ1ptVqXXWVvCQE0q0Wee+av
      ufvhT9CePcuRsQl2bR7kdKGFVbrA3v3vY6jv8vJfD77yAhVL5wP338WhF1+gqWfwm7P40X6M
      aIR77tq3Yphq2ByYTCbZtm0b1Wp1yR5Svbb3CaMXF/d9P6jmnEgkaDabwe4uhmGQSqW6YlNW
      KlB7vcH3fSj0Lkrmr6HpxekpDsxMILZRH59oMs207fH+zeuIKGXQ35gucHBmHk3TSO2NYMeS
      gMOo4XLM7vgGGo0G3thR9uVSsODD0jSNyXKNXDzG8J7b2LBtsebSpdQDCmMJAejRGAPZNG3b
      BU1j7949HDv0InU/wkAyzYWJqcsmgMUNEkyy/evYOTrK6RMeExfmMLCZqu1hQ3r1Iovv+2Sz
      2UBEEYh9WPajWm6ZtCyrqyCrbF+USqUCR4w4UiSRo1wuE4/Hg/pCy5nZrkdomsb8pm0cPXsc
      HbBcD6vVJmvouPU6hw8cwvZ9qq5HTNNoAzu3bVhyn5ypsTO6mLvb6Yc6o6bJ8WKFHflOclEk
      EmFjNs18qci2bIIXX/lrzNkZXkGjjcbwfZu4cPBVJk8cZTgR5eh8EU3rWCJH169jIBHj+PQc
      RutNduy/Z9WbYqwGS2aE5roYfcMk/AY1x2F2cooHHnyEeqPO5PhZNmy76bIfumXLFrItqFWr
      rN+4kaiu4TgGDzz0IGOnTjOyhskPBI6slQK7xITaizurBV3DQVrh/yXtrlqt0mg0qNVq5PP5
      JXvcXu8YSMbZPtBhZGXLplTy2Cz6gNOk4XpMWQ4FI8qAZ/PaybPMawb9is4wX2/wegP6YhE2
      JyKLkZmuQ7Va47yhdxKOTJNitcqd+Y5IMzJ7nhHf4fVqi7tjBvU/+y8kNNBv2sl2hbmeKJR5
      +uhJ5myf+x75OFu2jF7xBKQlBBBNZrltbyeoLJvOIHSfSqbYvnPPFXlobmA9Yb/cvts7MUC7
      LuJoWm6CScHTcMy4iCRSISLcgeGw3eVKa4Rj08PE1G63mZubw/c7G9yJqfZ6JQYzpdbq6RGg
      Bmi+z126g6Zr4Fkc1iLcmlgUP/14Z6X8/tQ8Tcfruku1USc7O8eg3rl7e2Hrql79kdI1Ji2H
      qWpddTYzW2+yc9cuPvPRT1y1fryuzaCweitLNBolEolQq9WCDKFwRKIkaqjudPEoW5ZFq9Wi
      v39pZbrwvcT0ptasF2U4Go1iGEYXYcm5okhfDw4086adOGNvYGpg6hpO2PEr/b7CPSQWZ8i2
      2BElKEUTiUTYGoG3Wg7b4h2xcGKmwHwiSj4WWTAI+sx6GnOOh+NDa8MmdvWl+etzU8Txcet1
      5tJ97L19/1VlItd+JC6CXlGKK52byWRwHCfYjxi6A7nU7XgAZmdng+pno6Ojy0eQKpBdCWU1
      EGVs06ZNXduzyj1U3SCcE3utsP2WHbxyYAs3zZ0lZRrEMgkKjRYDpiryXSSUeMEZ6UMX07Ft
      u8MElASb7b7LqUqDWF+aM9Ums/EoD+zdTt2yGa82ee+GdRyZm+e9Wzdi6hpPjE0SS6YYHFmq
      e1xJXPcEcCmQDRUkX1ScKxK+oIYzSFXjZDIZHIOVrTliXVru2eFze2Gtde2vNDRN4+aHP8b0
      H/1HtuqwORVnStMpNJoMGBo+cLbtUHcXCWJSh1h1McRBzKCzvkbSV7y3AC44Ski6DmizRV5y
      ffbv2EZ2waueMg3ONiwOzZQYyaQYTHaYyfr167j5gx/uavPFwvXn5+e59dZbSSQSFItFhoaG
      qFQqwaYkxWKRw4cPc889HUU6m83+90kAAsmLlc2qJWfV9zuFVefm5kilUkSj0U6cycLukEAg
      zkgI8ZVCrxS+a4X+gQEmt+2C852NY4eTUQqGxoVKnULL5ea5FnlVzzFg01z3XrsHDZ1Npk6p
      6XNHyiSinP+s5fJWSzbVgFM6bPUqHB6fxdAlz9fnjOexIWbS0jROax3inHJ9Ru//YFd7VwrX
      B+jv7+ett94in8/jeR7Hjh0jm80yMzPDLbfcwtTUFH19fUxPT1OpVBgeHv7vmwAEsnmDQEQl
      iR3xfZ/5+Xk2L+zmCFAoFNA0jb6+viB8+0qgV6TjtcRND3+M8390nk0LJSkHYhHIpjk+O8O2
      i4homqaR9322uT7n6Dj0Vakpq2nc5Czk5wIXPEjUF/Ya83wcYEzz2YRP0rLZbi6uurFMDsfu
      LmszNDTEL//yLy8J15+bm2Pfvn1B8n86neb48eNEo1HWrVvH7t278X2f7du3U6vVaLVaZDIZ
      br755uujMty1goTLSgbTzMwM6XSadrtNLpcLMpjU0IcrJbdLIvhKZtOrlQ8QxuGXXqD2yrPc
      4jVJGB3CPFaoMXRqruO5XcBxA3br3W0d0+BmXacCTEQ08hGdDaaG5fmMtT1uaXcIYFzX2LB1
      gKm2Q9/kPDNAxuuE27RbHnnPZ8rQSKYMYqNbSH/iU2zZvdTqWC7OYtXKC2X+OgXKOvH5Stmb
      4Hf1HPUYwf/vihVgOWhapxqyJN8MDAwwNzdHOp3uMqGu1rYvekU4jn25Z18v2HHnftzb7uD4
      gVcZevUp8oZGu2F1TX6gE/VJ+LcOskDW9qnbLqd8nwgaBXyinkdE06hkEuyOGIw3LTKGTtT3
      ueDDVk3jQlyj1XTY5PoUHniIbT/9yWXt/dbUeYamxzvb6doWvtXGtzvfsdtgt/Hkd8te+HPw
      LRvPtvEtC99y8SwXt+29uwkgDE3TGBwcDJI0Go1GV5Xi5SDm1EKhQDqdDpRkWTl6EdJaCOtq
      IxKJEIlE2HnX3Rz3PCaqZSrJOc7Pv8KGlqWEpXTaWvJ9JI3FCrU/BYHo5PsahqYR1zUKUqrE
      7ugEMU3DXiCfjbrGG1ED4+c+w10ffeQqvulSvGMJ4GpNHskqm5iYwLbtYLvQ5SB+Bwml0HWd
      VqsVBGrJtVLhQnZBd133uhM5Y7EYO++5j1qtxp5EgvrHP8GZQ4fwXn8Dr9liXodT999Ps1Ag
      +8MfkvE8VqqQNAyMa5D3fbx4hBnLwQBKnk8TkLptPjD43nvZ9TZPfngHE8DV5JyGYTA0NES7
      3aZQKNDf3080Gg0Kx0q5QYkWhc5qMTw8TCQSCSoZSPCcOOFERJJCsNcbAQCBI0/TOhXltt1x
      B9qddwJwixL5eiIeJ/vtv8TwfXy/93hENLB8iGsa22cqHK3EiN+2l9JQi2ipRHRulpc9nwjQ
      tyCGXgxaNs+sbXU2V/TcTmi953b+9zufvueBq3z3/M62u77X+VwIw/fdd7kOsBzELxCPxzl1
      6hTxeLzL+1uv1wOHlsAwDObn55fdDkhVoiVuqdFoXHEz65VAKpUKQsnVHWRg0T9y0/79nBgb
      A9siesedpL/5DQaVGp1t4MS997Hhzjs5XyyiH3gN13bY/9nPk8lmsS2LyQsX8Cpl9N/7XYpH
      jsBP/8xF2za4aRtsWpqEc6l4V1uBVgMJf67X60QiERKJBKVSibm5uS7zqKZpwYbaYYRLe8iE
      n5mZYXh4mGw225MI3i4rUC9IcVkpQiAELHkYYT/GiR/9iK1P/QgDeC2TYdsv/iI79i3WeFrO
      iub7Pi/+419nS6WM9w/+IZtGR1dsl9WocOjYGe658zZef+0lig2PjOmgJXM0CnPsvus+BnKr
      3yrp+mI91yFisVhgDpUMtFwux9BCiQ+B7/skk0lKpRLFYnHZ6mvyWavViEQiQTnvXjstXmtI
      uXIJ/FOdePJO8j7bH3yQkyMjtIHExz7eNflhec+6pmnYg0M0TJO5t45ctE3RZJbBhYhRc8GM
      nMwNEDPbVKstzo2fu8gdunFDBAqhl3Id/l+2XFJ3RgSC/ADxNENnEkk+cjigrq+vL/BFTE1N
      kc1mg4CybHZ1ZR6vFiR8oFKpBKXKq9Vq8L7hkBFN0+j7qY8x/sQTpNe4Um371M9S+7f/GjO0
      j0EvtKolCnMF6pbH6JYtJGoO2YiLntpKPjVBdt3aytXfEIEuEZVKJdgPS9f1rvxjQbVa7akT
      aJrG/Pw8pVKJLVu2YFkWlmUFnLZcLnfiVJQtf67V+EiuRDKZpNVqBQr+cll0UoRqrUaKN596
      imh/HzftvbXnfgZXCzdWgFViObOrcMRepTwSiQS1Wo10Oo3neVy4cCEIi87n86TT6aBqnhqD
      JOLT9RAvlEwmg3RQEQGlLn8YwgAuxUK3/T3vIb5QGeLt9I3cIIBVolc+gKrYSqy/ShAizsBi
      bSN1655KpRKkXxYKBXRdp16vBwVfJdvsWkLTtGAbIiAoQtCrohuwpghXz/OCFcV1Oym4l5vk
      vla8q5XgS+GwlmUFsUNqjVJY3GvLcRyq1Srz8/NUKpWAOIS7C0RprtVq6LrO3Nwc+Xw+KAl+
      Pe0/pgYTykqgloaRv3CxMhXiN5E+EKeglDq0bZtyuUy9Xn/bVr939Qqw1nAE27ap1+sUi0US
      iUTgNAoXcG2329RqNdavX49lWRSLRdrtNoODg13hEbIqAMGn7/vk8/klYtX1hLDcr/ahbGoX
      zouQoENJIJKdHAUiBko18VKpRCKRCETGq4V3NQH4vh+k9a1msknq48DAAK1Wi0ajQbVaZXBw
      MBBrhKiGhoYCb69avkPlmnI8nMz/Tii2tVJmW68CBLJ3gGx9uhxM0wwmvvRDrVajXq+TSqWC
      cjRXCtcni3mbIEqbWtdnOUghVrkukUgEuyKKkgiLJVrEZNjrmeFJ0+u36xma1ikKIJNRFYGg
      swpUKhXa7TaNRoNKpUKz2cR13UDpXw5iFta0zk7x7Xa7K+9aCh+oKa+X40N5V68AwKp2EYGl
      nFuSaHK5HLquMzMzE4g38Xg8SK+8lKC9dwohiOwuG+RJBT0J96jVagHXL5VKGIbB4ODgiqut
      hKiLNUnNt1avU6t3XI6oGPgBJPT3BpaHJNS7rkuz2Qx2uBEIYUim2eUWyjIMI3jGO2F81K1R
      w2i1WkF66vVUQCwggBu4gXcj3tU6wA3cwA0CuIF3NW4QwA28qxEQQLNa4q0Tp2m2WiudvwS+
      02Jqtve+r2dOvsWBN96iXi5w4I23mJycDI55Vp033jq5qmdcOHuKE2fOB25zoOte7wZcjfE5
      N3aMV199ldnZWQ4fG1tbg5wWhw4fW9s1K6BSnOH1N49SU7ZtvVJwrQbThXLPY8aXvvSlLwH8
      p3//Ze6+727Gz0/wzce+zuj2nUycPoGZzPLtr/we+sgoVnEKx/M5cvQU5eIU1VqDybPHee3E
      DCnTwYwnqBWnqbQhnYzRKp7h3/3X7/GJh/YzdqHAMz96ijvvvJU3Dx9jaHgDv/kb/5SPfPiD
      HB87j9+uMn5hkpYDR57/Lm/O6GzfPMRT3/h9DkxHuHt7Hy8eOEK9adNuzvOdv/weG0cGmJqe
      pd5qMzU9y+BAnlPHj5HOD2Do7wxT4mpxNcanMXmU3/nmi3zmpz5EuTTD+XOTlMsl8gODTJ8/
      jWvEOPHWUSrlIpbVpmnDuZNHmJkrkR1Yz2//5j/nIw99kDePnCQegcPHz+C1KkzNzFEsFmm1
      20zPFhnIZzl+7BgRU+PU6XPMVxu0i+N87fFn2X/bbi4cf5Uv/7fv8+mPpS2gIQAAIABJREFU
      f4gnn36WoXySqWINr1nm/OQ0lXqL6alpIprNybEz1NsufdkUx44dJ2L4nD47TrnWIh2F0+dn
      6csmOPzmYbK5DL/3u79LhDaHxysMJFyKNYt6aZoLk9M4mIsEkI76/L//5t+xYde9vPDMD3jw
      ru188zuP8+LxIpOHX+OBh+7kt/7dH3BybJxDzz1FqzrN0WmXXSNxnjs8yaGffIfM8Eb+05f/
      A4ePH+cD77+fdP9Gnv/Of6USHeHDH7iPP/7aH9GYOIITSfLDV05TuHCCwthBnnz+ADo+zx89
      zg++9RRRe5bR/Q+zoS/OV37nt3nos7/KluFBbtq6hX/yf/8f7L71dp780ZNsGzB4YWySP//q
      tzl98Hn610f54z/5FmeKsH/v5Zdxv55wNcanUTjPs0cm+Rsfeg/VapWv/M7/R6N6gZaR4z//
      /lc5fvwULz/5OJpW4+TZGb77k4NMvf4E6cGNfO+vjzI/NUbh1Oto8SQvHp/mR3/5dXbcsZ+J
      N57i9GSZr377GQ4+/yTro3X+5FtPUPM0/uwbT3HwpafZs7mfs800d++5iae//afENt/B3Xtv
      Yccto/zmv/oys6cO4BsmPzhwlsf//KsUTx9k5OZd/JfHnuLUCz/Eas7wl999Eg+dP/6r5znw
      3A8YMFt899XT9PtzPP6DH1L0B3jt+R/xgdt38NLJC/zkxy9y6sAzGBGXN46c4ltPvbYoAo2d
      neIXPvczNGoN4hGd8xOT1NoudqtJNhenULaIGlE+/+jnePj+W7npnkeoV+bx200qlQr33r2P
      g4dOkEpE+flHPx8M3M9/5hNU2mBqDvVSiVh2kNNjZxnuT1IqVsj2D3H7+x5hMOZQnJ2lUJon
      k80yO9PZweRnf/4LPP1X3+DQoUPMzs7SaFns3ruXeqnEVKFMuVii0WpSLRdoe3Gi+U185pF7
      3/4ZepVxNcanb8M2Is05Dh48QCyVo1atMTtXolxrEjdNHn30s53Yp/kyhbk5SqUSmqZx/vwk
      w4MZiqUS2cFhxk6Ps2HDJj7zkf0U2zEa9QbFUolWs0q5UMCL58hv2s379mykUS8zXyjgR5MU
      Zjtj/MBHP8n4my/xyoGDnJuYJZ+OUnVMcFo0ykXqjRbz1TLz5Srt2jxeNM3Q4ADrbr6dO28a
      pFkrUigUSG2+FX3qLcYuTOISodlqEo/oXJiZo1JtkI56OGYKq1FjdnaW0nwJ/Bu4gTXgn/79
      X/FfOVVY8ntt+qT/1T/7K9/2rt6zp4897/+tf/gbV/SeNxxhN/Cuxg0z6A28qxEEw7Varase
      hCWpfgLDMILfwtGRvhIz7yuJJGrUpERyyj3UWj1qWPFac0zD7VwLer3LpaYJwtIdMW/gyiIg
      gLejUlmj0Qg2q5Ca/ZZSTEkmnQR9+QvJIZrW2QxBClLJ1kSSRSSJ25FIpGcwlq7ry9beCcNf
      iPJcCwGE81jV71JS5VIIYLm0wxu4crhoOLRtWbAQm325kE2spW4mdLitmgSuaVpX2qBsXSoE
      k0gkqFarAEGJQVkJwpNW/vc8j2q1immaq9piU8Ka1fh/31+6sUWv5BX1PTSts12QZVkrMpfw
      qvFuwivP/ggntZ769Bn23H4X89Umxw4f5oEH7qPp6LQrM4yM7iQZuzqRsMsSgOd5nDtzhurL
      32dqdo4N932YgZFNDG/aclkPVPfWVSe/TBiZUL5SbkR2W8xkMsHmdtJG2QVGwpRhcQsjdXWR
      Z8nKsdxqoCaBa5rWtQHechACDBe/SiaTFy165S/k0V5PIcJvJ27ZfSvfe+o5NqxfT700y49f
      eYN927bxwnPPkBvegl06j57ZyLaR8L6iVwY96wKV5+c59+zjDI89S3xhnpxoRzHiKbSNO9Di
      KQb2vYehdeuCQqrLcTCZ4I7jdKUNChzHCSonqAnTMulkwsrq4TgO5XI5SJxIp9PBPmBqpQYR
      o+R+avqeer9esCyLRqOx7MRXJ3v4uPp8tTL0pewM+W6o1VQpzjBdbjOUidCwPEq1FrkoxNNp
      5usWTq3I6C17SUSvzgqwhAB83+f1P/iX3NQYX/HCqgMlI43tgz66ly0f/OlAzhbF1HXdoDSI
      53ldu6pL1lS9Xu+pgKtKrWmaQQaQ4zi0220cxyEej3cVcG21WjiOQzQaDVYO+U2F6ATLJZg0
      m02azWZQ0nw5qGKRKgqpItPFiG0lXAkCkFqeN9AbXWzJ933OnTrOUGX8otpBxoQMtc6eCeMv
      cuzlPrbf8wDpdDrI/0wmk7iuG1RDrtfrwUSwLItoNNolDqnblwrXFOLQNC2omZNOpwPCCafO
      2bYdJFaLaKGuKvL8lXZpFCVb1/VlCUAV1YAl4o9M/tXoHFcTN9w8KyOY5r7v89S/+XVu0atk
      LilTuDOJpWaOYRhBnqgKGRApDCvnywQWkUqSoSUlUCZ5YyFaUFYHScMTri/PED1AiEdEGuhU
      HlgpvVCuVaNPVzo3PMmkxMd/7+LLpcLzPVzfJaJfe70nWBvb7Tbrt91C1rh0jqGKA1Ifppd+
      IMeF4+u6HpQeV3d0bLfbNJvNroJLIpbItUIolmUF54i8ra4awtVhsWrBShO8l+h0sXeXvWdz
      udxVr2fzTsYb0wf48ZkfXutmAMoKEI/H2fuz/wOH/8Jny8RrV/xBvUQFIRgxUwpU7iyFY4MG
      h5RJwzACf4IQnyo7m6YZiFNiV5cqbY1GIyC48GRVrU3LQX0XqWVzAxdH1SrTci6+ur4d6NKO
      HMchd89H+G7qDuxLjJJQa9yok0pkatM0SafT5PP5QBGGRdFHtiEKK5VquQ1ZWdRdGcUCJGZM
      QTqdJhqN0mw2SSaTgaIubavVaoFYpeJiVhvVCqTqIGGEiUj1cbxbUW6XadpXPvHlUhCM8sTZ
      MWZ+/C0iTovR4e00yh65NeoCKzl0ZFO4/7+9M4+NJL/u+6equ/q+2c17SM5w7tl7drXSar3S
      agVp7ayOSLJhOY6NxHDiJHAuwAicBEj+MPJPACMw4BgxAsdRbCOOHceSj0iWo9VhSbsrrXZ2
      rp3hzHDI4dlN9l3d1dVVXZU/mr+q6mZzSM7OcGaPL0Cwu7qu7nrv9+73RLsQsWoKNUOkPQj/
      fb9eLdoQCmIVhN9vdCqKso14RU/KYDDouEOj0ajjo387unogENixW5lt204Azhv3UBTlvhvH
      9xO1VgXDch0e+w0EXt44z+ncI7vvuAc4y3ztrdc5pi1xrLPBQyvf3zfxC+ykNohVut1uI8sy
      pmnSarWcFdErIQZBdBkT6M/1CQaD6Lrec32hWokBdSIKLfYRPSoHXdMrRQYhFAqRSCSIx+M7
      uhlt23buS8QpxNQVr8frvYZau1cC/Porv7bnY1umxleu/tFduxfnyY0+/XFWpRiLLZllZYg1
      afCwt90wyODtT3Oo1WqoquqMFhV6u4i+igQ4rxRQFMUhNkGw3raGwiskxpaC28ZcRIBFuz3o
      qj6BQGBHQvdeZ1BALBgM7klN8uY1eXOdHvQmV/cSpmVi2q6DoaRt7tldW9KKVFrlu+bedZ5g
      Kp0m+4//Q/cGTYNrf/CfoKHu41S987J23Mvj0elPfxA5OKI1nkhyAxzGEWqSsAdEnpA4XyAQ
      cLqohUIh51yiZbk3eNVqtXac6ijuR9gb/diLyBbu1GAw6MQsvKkgdwuW0eLWeolcPMhSsc7E
      cBbDaJPJZPZ1nmqrQlWvMJWcuWv3thss20I3dVqmRljZfbhdSdvEsAwahkosEN91/93Qs4TJ
      sszlV7+Devk1DjXWxWDwPcIlZqGfe7Mk+1uIC+IQ3hmhp4tIsffY8NbkELGyt7Y6Iwg7wtvf
      02tUt9tt570IjgnmGDTpsB+BQMDJXhWwbXtfo02FvREOh53o9t2GrIQI+iXqjQZ0OuTXboGS
      IJVKbZthcDt84+ZXARiPTt71exQwLAO/pGBYXbd1w1CxsanrdRRp9z6tm40N0qEMxcYmIXn7
      /ISGoRJVti9qhtXm8uYFZlPHexinhwGWb14n8+ofMuUDG5t9ckCPqtMfgvcSvngtVBQxQghc
      tcarIwuCF2qMYA7h4REIBoNomubo3SIO4G1aKwJ0lmXddvUHN5/H64YVq/h+cTfTETY3NgkA
      oVyWANDRm6yurjI+Po6hq2TGRzBaLSRZRt4j07VMjevlqwxHR+8ob2mvqDRLJEMpStomPp8P
      Xe8+27bV2tN1K3qJI+nj1Iwq0/7eecH1do0vnf8v/PLT/6pnu43NH138X4T8Ib679DIfO/wi
      Dw0/BvQxQPGVrzG79VvtX0Rv9/P3E32/NABXHxarbbPZJBQK9TCAOI9XdQoEAgM7O4upKl5G
      EpJFuCtFFLrT6exKHOFwuEci3f/UghZf+8qfER2Z4KWXPgGALxjh7NmzAIyNjd3RWV9b+R4/
      NvUCP1p79bb7zRUvM5mYJqLcmRerpldJBlOo7Tp6R6fRVpGQaO7RLVrSipzJPUJFK237rNFW
      yTfWtnmVXl3+LhF/hM+c/CkuFs5R1Dadz3qWJd+RRzFv83xrlo+XtSRlA77dGWFjhzyxQYQy
      aAX05syLIQii97sXQucX86OEd+V2EMautyag2Ww6rk8Rfd4N3tle4l7udXLZ7WIF9Y0KRx96
      iNnp/Y0DvR1s2+bc+g84O/b0luTfGd9b+ja3qgt3fK2qXiERShJRImhGk4bRIB3O7DkuoBlN
      xuKTVFrbGUBt19FMjaruNgKzbIvvLX2Ll45/DoBoII7adoOuzpO8evE8GytLrIRHmbd7Z9Ta
      gNqRmJ98mjO+GkuhUeq5WfSP/QKLww9zK3qI9fOv8vp3vgFAvV4bqP70Q2SNNpvNnlVa9NYX
      +wgXqdfFuRfi9YpUUVvgJS5VVfe0oos5VvF4/L7P7QrFIhTya5TLlV1Ide9YqNxgKnkYxacg
      cXsnhmY22Wjm7/hatVZXAoT9ETSzScNQyUaGaRqNXY+1bRskSIcylHdggGQwxVp9xdm2VF3g
      SPoYPrlLC7E+BnAo5MRDj3DmsSeQZZm5N1+n+s3fJSrbSBJcafoopad55OyHWU0O8aHnP8Ez
      ItL72BMAHG42Of/lL/GDl7+G9tZrPPbFf0I8lXZuvL8udlAevdCvhbtU0zQnfuB1pwqvzm46
      Y39Jode9Kia+yLK8q89f4CCKVnb7Xko4wdRYhHM/WuXJ5+Bu3NG5/A95fPQpACJKjKbRIBoY
      bB+p7Tp59c7bUtb0CofTs4S3JECzrZKLDNM0eyXAN25+jY8d/mTPtqbRIKJEtxGx996OZU6y
      pq5yKvcwAHPFtzgxdMrZp//YXhVoKx0hNzFN4Kf/Dbee+XkuBA9xKtphOBri1uICH3jhxYFF
      3pFIhA9+8ZcYScZ4S5W4/udfwjQNZ/XeqYDE+154hFRVRdM0x8sjPCiAYwTXarVdc3WE6uS9
      ljhWuES9gbH7iVarRbVa3VOqRDoxRLVTvyvEb9s2Za3EdLLbSW80Nk7D2Nn9HfSF3pYEqOpV
      EsEUYX+4RwJ4VSDbtvmLa39Cu9O7gJW0TTLhbFcNHiD/1Hado0MnWVNdCXCjPMeR9HHnfcgX
      omW6/VUHKrOZXI7h0TGOnT5D0tJYPfVJCrUGpra7mHr4+Z8gl83wVrnN0sVuUl0/EfbX1Xr9
      8mLiuvDYiNQBgEQi4RwjgmeiZHEQFEXpGUDtZUKvUXu/i88ty3KM8kajsWuUeDVf5gNPPLyv
      a1QqlYHby60SHz70Eee3OT50CkkabONYtoVf9tOxOjvaCpZt8dfzf7njfdTbVeKBhCMBGkZj
      mwokGHCl1luUVdKKZMJDAPgkHx2rd7FQ23UOJaYpa0Wg69mSJJmg37UXu9/TM9p2pxutVspc
      +J+/RXvsBCeef4nYqaf40Mc+seMXE/D7/XzwIy+woVu8+YNXyd+62fP5Tp4ULyN4mUEMU/b5
      fE5xjDhe0zRUVaVarW5bxUVCndd4hl4G7P9/vyDLsqOe3S4dRODwkSkCgejendS2wcU3L1Es
      V6hWqqyt3GI1n+etS1e5cO1HyHqEK5fOs7q6zsr8Gpo5uAO1UEHiwQSqvl0FAbhQOMc3F/6K
      m+XBnb8t28In+1wboK2SjYz0SIBqq0IymN5mbAsJAJAMpXqMXegyQDyQQJZkOlaH66U5jnpW
      /0HYxgC2bfP6N7/OV37nN4kcf5yzn/4i9VqN5z76/J514Ic/8AwfffZZaNY4/6f/fdvn/dmi
      ohSzf7s31Vno7N5YgziXZVlUKhXHmBaEJCaaG4bhJNP1Sx/oqh/9Aa+DhJgMLyTebhKpXi9z
      7gdvslfFbXN5ESXip1gscfn6La5ceIOrt25wo3mdzcV1VucXqTbazF++xLUrizTagxmg0e5G
      X0eiY6w3Vgfu8/2lb/GLT/xT/t/N/7vtM6/UCCsRmkaTlqmRCQ/12ABVvcJDw4+yVFvoOb7U
      ciVAKpSh3OplgC6DRshFR1itL/PdpW9yMvfQtvtQZAWj03Vh9iw1pmny5T/8fbLjh3j+p36e
      cKg7ETyZSg38srfD0x99AQNIRiI96QcCwhU5SAXxui6FugIuwQ6KKgNOgUsy2e0gUK1W8fv9
      PSpGLBZzpheGQiGnFLPZbKLr+h338LlTmKbJ2toaPp+PTCaDpmm0Wq0dp1dWV24yt7jJ0PjQ
      nq+RPXSU7KGjni0Pc614hWRoluGnRgCTq5euMHrmYR5T2tyq3hx4HrVdJxaIMxobJ6+uMZOc
      Jd9YYzLR7RSyVF0kFcownTpCLJBgsTLPdMrt0r1UXWQonAPYkgAaNjZ+2Y9lu+pMVa8wkzrC
      d5e+5Tl2gZvl63zq+BeArieoopUg7d6fjY0kyYzFJvhv536Lz5z4SSbi293FwhBOh4dcBnjj
      h68RS6b53M/8HPD2R3VGo1Ge/egLKIpCo9EYqPfD9jpd73W9Yfx4PO4U0QsGaLfbA5tSidRr
      4eERATFRUC+Y0dtISxynqiqxWOzAmEDXdaLRqBN1FvfYarUGBum0pk6roQEd2sBehrzOzc1t
      2/anV/+Yjx/+cSqB7uAISQmQX1lE7+j82dX/jf/09mj3lc2LNI0miWSGH629zmvnXyXfWOP5
      mU8yGhvjjy//Pj9x7LPMzc0x1p7iz175Mp848rec4//w0pd4cfZTzM3NUdMr3Fycp6pXmEvO
      Ubi1wVyye5+Xb11iOnkEda3JuUtvMFd8i/nKNV6c/TQLNxYAqFVUvrnwdb4b+w7PTj1PLBCn
      cGuTueQccSPNJ9OfJVyLM1fb/t1rqw3OG+cZi024DHDmkce2jf18O/Dm5wNOYtsgI7j/dX8U
      WbhIBWGrqrrj8UKiiCQ4bwKcYCjxvlarbZNM9ytN2auySVK3E57XiBfIzRzh+ewIICGct5bR
      4vL1W2TjQZYLVcbGcuiaxpEj3dX3+PHtenC0GuLxM08MzN79tvq1gcdshFaZCkzx0PBjfLX8
      f3h05Cy/dOyX+Z03/jNX6uf4uY/9Ase3XI7T5hRz5y8657lZvs7xY8d46qGnAdBMjXPGa4Q6
      AY4fP85wNefse854hUdnHsXOGFR8GxSb6/zKs/8Wn+wuCLP2LKdPnuHN/OvYMZPZkSOM1UYG
      3nc/lpV5hmNZjueOuwyw14HR+4Eg/mAw6BSlD1r5wdXlByWpCaNYELU3KDZopTZN0+lMIRAK
      hdA0zUmKE8X44vzguk33W6DxdiAizSIVxHvdQcawoWvMvXWB+cUin/vi3yZINxluKBXHaOsM
      p+LU6xV8/qij+onvV9UrJINddVaohIPgzdj1oqZXyUVGwIJnp57nI1Mfxyf5+XuP/iMkJAK+
      oHOcDz+66dZVf+PmV/n08Z9y3isolLUiQ+FsN+MWibbRRpZkKq0yMSXBeOwQf3Dpd/gXT/9r
      bMvGtHrvaTQyjp5pcWnjPIcTR4kqsT3VcUf8UWqtKqZpHkx3aEHYXi8PbPe+7NRhDXB6AXkj
      xt406v7riWL6fvtDMIfIPxIVZMFgkFgs5hjQBwWRsi1snVAo5BTXD4pPhGJJ0kMpbF13vEAd
      vUmtViOZHsIfiXF4+ggTo9luMtyWV6llafz6q7+GJEs0Ow0SoaSTjdv/p/gUdKvFH135PSf9
      3O/3o7ZrpMJp/H4/n5h9iaDSLWmNBmNEgtHt55EVbKmbjKeZGrnYcM/nmtkkvnUfsUAcfSsh
      zrAMwoEwx7On+OdP/yrZ6PCO93ooNcNaY5mGWScZSu24n/cvFc6gGt1KvXuX9ueBLMtOCaJw
      Z94OgyLGYlUS6kEul3OIPBgMOi7TfuYQxwrVQrwPh8OO3i+K5pvNpmMHeOuVDwKSJDn2iqZp
      26rbXBice+0CiVTa8QL5ghFOnDgBQCIxWI29UZqjY3VYV1fRO63uSr4DEsEUv/2j36Dd0am0
      yqTD3bqC+pabca/IRLKUtE0Un+J4b7wI+ILElO79RpQoTaNBPOieX/Ep5KI732f3HAGMjkG9
      XSO2x3uLB+LU2zU6VudgGABwGtN+/3t/w8q5v+ShUROwWanZ6B04Miwqp3qPu1W2OTSqIG2t
      dwvrBkdGgmwqU8jJY/gjWcbGJ0in047xOAj9UqjZbOL3+53gmmVZTlCt3W47K99Bot1uO/bN
      zrUDCo+ffZiVYnNPBrDA9fJVPjDxDEu1RWRJZiiS23HfQ4lpTgydoqSVWG+sOgzQMjVC/r3n
      Qg2FcxS1DWy6EeZ+hJUI0UA3yTCiRJxg2H6uAZAKpVmu3SId2lsBkPACLVbnD44BoKuqpErf
      IpYzmc111YyO1EFHchigH7ptMTvmqjgtvcPhrAUsUNMWWLee48qlEo8+8aTj6xfRZAGvWrO5
      sU5l4yZHTj7dY2/Ytk08Hne6UhiGceCJb4FAgEQi0WOfDIJldWirDQxgr+X8q/VlPn/qi3xv
      6VtElbhjrA7Cs1PPA3CxcI68usqpbNeX3nUz7t02ykZybDY3MC1jMAP4w0S2ilfCStSJBQg7
      Za8Yi09yZePittyhnRANxGm0Va5sXjpYBgAoyePMRKsU6hYbqs16vcOzj0S4uKjz0KHtgbaS
      2uHK0labcmC13OH0WHcln183sPkOdlHl+vKr3Kp1iB89yzM/9tFtKoSwBaor30ExF4GnnQCb
      6BQnCl2ETn4/4K1cG4Sl8+fIGxZDw1n2WltW06tb/vsJ8uo6iZDGhyLP7XrcaGyci4Vz+7j7
      XgyFc9woz6EZTR4bfXLb52El4lRvRfzd1AjTMvfNAOOxCb52/StE91gi6Zf9mLbJzfL1g2eA
      bNzGaMooMpya9iGtmkgSaB2J9arFRt0iFHBXmYgicWrENUqDkg+tbRMJSvhlm4cOWXQOhfny
      tQyTGZv45iV8vhccz5NlWSzPnaNaK1GsqZydWSUc8JNfX2ZicqanbteLgwyG9eN21w7FUjw6
      OU4Yac8McKM0x2z6OLLUNYpLWnFPRJYJZ53iEaNj7LuV4VAkR7G5QctskQ4NtgFEnk5YiVBp
      lbsFM6H9S4CO3dlXjbBu6qRC6YNnAKmjM572PDrJxu+TOHssyHrZxJIljh5yiXHuVn9agM18
      3iIcsCiqFpWmRTIsc3hmguNLf0W+4xrbtm2zsnCN2Y2/4GpDIt+QKKrjRMc/ybGjJ+l0Ove9
      m5tw8YIb87jduKrckRnyK4tcXdrgsQ8+uSc7YLE6z9OTzwIwHpvkavHynhhcltyIu2rU97zC
      CoT8ITRTQ5YGj4h66fjnCW/p+xElylp9pcdVu1eI+oL9MIDiUzgxdPrgGUBX8+iKjSyDLIFl
      Q8fqqhvDKR+b9V7VY6Nm0dZ1bMAnSxRVi8enfURDMoeHFL4/Z5AKQeBoBsOWmAk2UFst2rpG
      /uXfZDJu4Q/alEomii0zcuwnmZya7v4ID8BQCtu2KZfLjotOeLtuNzSjY5r4/Hu/908d/7xT
      EHIoOcOmtrHnY9OhIUpakabZuKMuDLZt72hwRz1llWF/hIahMl+a48zwo/u6hiRJfPzIjxPw
      7d0tkAqlOTZ08uAZoNXKsT53g2XVYrhtE5Dg5rzOYtCPGQuhSB1urrvBjE7HJpfwM5py1aC3
      VgxOTfhAkoh0LB4NyfzV639KBQvFJ5G7+BUWr15kOi1T0uHqpkVeg1Ygy82FBYcBHgSIpl4i
      SOftlrFTcDK/vsDfvHyDU08+uicJIIgf4HDqKB1r701/R2PjTuLbnTBANpIbaAD3Ix5M8Gb+
      dZ4af4bh6Oi+r/PRmd0zlb34u4/8IrCHGWF3G5mIj8N+mY4N04prpLbCErOnZPxyiLl5jZND
      XYKfmpS5sGpQqroi9NItg86mScOEY1vScjiskYjJZKI+wswx37HddGG/xOwzP8kHP/ThB64h
      lYjWivsShns0Gh0YkGupVXQ7yvBU6o4KYtLhDE9NPLPn/UdjY9wozbFQnecLp/7Ovq83mZh2
      kuVuh0Qwyb//yH88cNvrwBnAd+gxOtevkw5BqWGTUdwvHN4yfv0+CcXvbo8H4HjKfT8R8GPU
      YDQqcW7DZDgKPp9EXYeK3sHqwNRYgGsVi8KKiTwyy99/5tkHclKKiE/0t4XpT90W6LR12qbJ
      6MjotpKUUn6Vgtoml4qj6zrj47uvvLthNDbB/zj/X/mHZ/8ZY/GJfR//3PQLe973fjgeDpwB
      Zh/7MN+7/ApPRZZZ60Cp0iGjSDRaNivFbm5KtWGxGdzyzwM1zWJDcR+3ZtjQkQCJyZiPby+Z
      hHMBpkZ8DMV9vHJZI6JIfPzxMN+JKoyd/rEHkvgBp0mXt+wzGAwSCAQG1gXojSrn3jhHNJHj
      w32fSX4fRqNJsdNE9se35QLdCRJKkl/54L8jEUzua17COwUDh+TdayzMXSLzo98m6IPNhsVm
      oUM1ALPZLpFeXrGYCYCEhGpYXOvIdCz4wFj3c82A9brFcESioNkYBsTlrmFdbdt0Yj6ycRkJ
      WCjD05//l0xPzxzId7tTiNRu0cFaTNdJ7aMWo14pslKoMjGWwzBFoHOjAAATjElEQVQM0pkM
      1h56H72XceASAGDm+BnOzT3KEfVNslGZzjAoHZuhSPdBpQI241tB2IoMsbhMw4CoH1IhGdOy
      kS2J2aSManWo+yR82JQ1aPkkpi0LuS0xMyLTCk6STNybEZt3E4Zh0Gq1aDQazvy0/RJuPDXE
      ydTeC2Xex31iAICZZz/HWxdnGV/5a5LBKr0pPG5bRmvr1ckhmVXVYmmzg0+CctMGLAJZhZxP
      4pTf4lKhw5kRH5dvmoy2bW6kf5znPvvigX+326E/1dq2bVRVdQZ89NdLvI97i/vGAKlUig98
      +DlKGydYXF0lIWtcufE6/vI8S5ofe+Q49fwNUn6Dw+EuwYzHZMa32tVcWDFRDJtAQKbZsmhL
      NnqnSzjhTADlY7/M2UNHdrr8fUO/oSdmBQjGaDQa97351nsJ940BoEsMQ8OjBMJRQqEQyUOn
      sW0b4bsorCyQvfC7NAyI+EHQjmmBjoQk2bTmW6yPnmBdVVDaK3ztmk5Q8XPqAST+QRDd6oSB
      GYlEHliD/d2I+8oAArFYjFqt5lRtQVc1GJ6YYbX5OUKZceYufpUTnRtUdFiOnuHoT38Gy+pg
      Ld9gfHSGiUOHMAwDvdWi/nu/yvLSLSYP7e5/PkiIjnSCwMVQkHa7/f5UyfuEB4IBwK2JjUQi
      PfXD48ce6Ra9nP0Mq9/6Da7aU7z42X/gHjjm+rpFdddiW6I5d+GBYwBJcifGlMtlR+9/EDrT
      vVfxQMhaSZKIx+NOGkB/CoAkSUSiMRqnPsfY8cd3PZd14sdQ9PoDSVgi2U1IA1EG2Wq1dpxK
      /z7uHe5LHGAniIa40WjUcQf2N8JKJBK7JrHV63VkSSJ4wGWNe4HoTSr6EQlmF1VoYuq96ISx
      nziAVi+zmK8yMeKOSNrLDIT3Mm4rAQ468ufz+ZxOzaJXzqAu0jtBlDoCWFtF5g+aS1FMp2m3
      2z2MLAg+EAg4g/32i2JVJRP0sbx2i1L1wZjD+6BjRwYQ01rOn3+TWq16cDe0VbcrSZIzT9jb
      Xbq/b4+u61QqFRqNhtNNOh6PE41GMQyDWq32QKkWmqY5bdkHFf9LkuRUpO23R1E06Get1mB4
      aIRwQLpr8wPezdhVBTJNg29+/c954cXPHriXQtf1nkmR0CWUVCrlSAehTsTj8W2qUX9/m3K5
      7Aysu1+uRrGw9AfE+iUCdBeDdDrdf4o9Q/T+ed+tujP2ZAOI0Pz9gBgs7W2DLqSC6BNkWRbj
      4+PbHrRoOuv3+51ZYaFQyBm6Ib7vQTK26PzgbeECXcnWb6/4fL592QCD4O2L1N9zybvN20qm
      f5vwVPVvE8d7+znd7evstN+dXHvQtj0tDfeL+KFLBNFolFQqRTgcdnpoih9L9PURbQW9nh/h
      URJFJ0JKiAJ4LwEeFDRNQ9M0Z/CeMIbvROXZC7wPvtWsU1W1XmLoGGxslpz3YlabaM8i9pVl
      mXKxgG6IjhsWzabG2vIyHdvdr9lsUi4WaGhtZ9ugcxq6RqFQIL9RdLZ1TINGo0FT6y0RlSRY
      z+c992OzurTAwuIyln3779ioVykUCpSr9YHf+x0jG0Wj21QqRTwed7xBgUCARqNBrVYjn8+z
      sbH3cr+Dhuj+Jhr3CoNY9CBSFMVpAy8+u1u4fP6H/PXf/JBU3B0HdevmNd545duUTXeBK+TX
      uHL1Kleu3XAPNpp8/3vf5cL1FYLKlkdJr/HG6z/CNDSWSm7a9vy1y2xWW6yu3HK2LS8tcuXq
      VeYX3YEXSiBIq6mi9qi4Nqurqz1qb3Vzje+/8gMKJc+AD71CzQgzHDZYrrjXHvQdgwGFer1O
      U3P3837vB8tHuA9IkkQ6nXYIRuj3t3OR9s8uPmhIkkS73aZerxMIBHoIXJIkJ/9fdLq7E0/Q
      ThiZOMzkuM7N5QKHJ4e728YmiSdSVBp1oFvueGh8FBs/saQng9YX5KGHH2GzsE5TN4kE/eCP
      cnj2MNg22YRLRqdOP8yNmwvkxty25BNjY9QaGu2Oa5bXK0XkQBjVQ9ilxUWGJodot12GTGRy
      zBwy2Sh7xjYpMcJylVJLJjvkPu9UboIXZmap1JsOExQKecrlMvG0W5ecSmWwbIn1lfleCVCr
      1ahWB3t8KpVKz5idvYzyOQj4fD7C4TAjIyM9RSVeGIZBvV6nVqtRq9UclQO464S2G7LZLMlk
      klAo5LRCFHPKhDQwDMNJCblbaDcqvHbhOtmM2z6wVimyXtik2XRX3KXVdaKyxtxS0XO0RaNW
      pd5ogVhAJGiqDZrNBh3PrJobN66zsVlEUVymsKyumpfLDTvbbKvD8tIykt+NUcSGsyy8tUC9
      5A6+WJifJzM6SSjoiWV0dEp1DVOr09DdZ7e6vEh+s4xtuwtLvaFz9sknKW24g/0sq4Mt+Thz
      uq8o/sKFC5imyfT0NK1Wi3w+zxNPPEE8Huf8+fNIUnc6u3A5ZjKZnrFFFy5c4Gd/9md55ZVX
      iMfjaJrmqCihUMgZNTo1dfdTFMSAP0FIhmE4o4dqtRqapjEyMkK9Xndapvv9fqf7gmiReK8h
      BmEUi0Un6CV+Q8uyaLVaxOPxu764+MMJThyRaGkt4pFuKxhFCRAKhciOuOkks0ePU9zIM2J5
      VBNDpdwwGIoH2VTbTKVDYLao6x3SikG9ZRJRuqt2JjtCJBJBravEwl0ng0j2q1arxCNdJkgM
      jfJ0OsfqmjtwLxxP8+STT3L58lvOtonJSUob62gtz+8hBxkZSmADiaC7ho/khjFtMEyXKcZG
      siwvLTGUdXuMeu+nRwKsra2Rz+e5dOkSN27coFAosLCwALitA/P5PMVikVu3bnHx4kUuX77s
      GDnxeJxms0mpVKJQKBCNRllaWnIavr788ssUCoV9Pbj9IBwOO7lEYuCcsAkCgQClkjtbVjTG
      Fa7SjY2NA5MEPp/PGfhRr9cduyAajTodq8Vg7ruFSjEPShSt6aoSlmmgam0qZfd3qW6usVFW
      KXuH6gXTSHoFQw6Ri2ypHL4Qw+kYtj9IyOdKAHGdtu5KsFgiRW4o3eOSXrx+jaX1NdbyLj20
      NZUfvPJdMiNu7bGmVplfuNUjKcAmGImRjIWxPBK/Xq/j9/l65kdUGy06ZptyxZUqsUSKkZER
      ZMnulQBf+MIX3AtrGm+88QanTnV7SH7kIx8Z8LMOxksvveS8PnPmjPP62Wef3fM57hSinha6
      rceF2ub3+2m3204TKjE4T5ZlZxqL6AotWorfSw+RyPn3+/1Uq9Wea4n0hbsZxU6lh1heW+Xw
      7AlnW6GiEpDaxOKu9AtFYsRaJqmUp3WMtgHJQ6yv3WR6ekt6S2CYBko0RTLi0cNTGTY380SH
      XKmSX1umsLxA/OgHnW2HpiZZXC0wMuKuzM1igYmTT1BaXWB0qHtPwUiM02dO0/Qay5LM+tIC
      HWROnXHdxKlUCn8gSDTkzjgO+sD2BwhKLqkbbZ1ms0WjofUyQLutU5j/Oj5bB8vmcNxm89Kf
      QMfudrCyQLJs6HT/2xbYFmDZWBZgdbs7i+3un41tgyVeW+K157NOd7t/NMepT/3Ebs/zthg0
      XwDoybuRJMnJxhQiUbRRtyyLQCBAJBK5p53jwuGwE/UV7dhFPECkRNwt2LaFbfUy1MTIEFfm
      5km23evoWoN6s03I8igHwTRy4wqRaAzDtAj4ZbAtTLODadZo6kNdwxgo5FexlDiZpEuEmaEc
      sk+hrhYRxrau6xhtHcNjGCdGxikurRFNuMG/UCROaeEaNzcajI9t9QvS6wyNjCFLNsWazli6
      u5iEwiEWltY4fuKkc7xmbA1SsV3p02w20FoGoVC4lwEMo02o9X3CVhGp3YG2iWxYSHoH2haS
      YSPpFpIBUtvGattYho3dtjENsA0wze72jglWG0wTLMOmY4Bt2JiGTcfs7t8xLDpiW9vGbIP0
      1Jm3zQAC3lGp0FuOKMSxpmnEYjF0XXcCZMJINk2zZ8TqvYDP52NoyK3jvVcJicOjEwyPTnBj
      fp5UvFsstLK2wRNPPsnVq1cZzXZX0nAsAWsFNhoah6e2VBFDxVAyTCebFFSDyVQQJH939TY1
      tHbHYYCTpx/i+vwCZsc1RNu6jtGxiHnUukA4itZqcWR20tlWWV1GMyyklg50iX0zv0rbF+GR
      k55mWRKUNruqbXrc9VZ1OhaSZPdcOxIKoDZb+BT3d1VVFSUYoa6q75w4wH7R6XTY3Ow2drX7
      9EQxFbLVahEKhZyIoghOiaosMbn+3YDSZoGb168SjLoqwyADUfYHGR4ZIenxpaPECKNSUCEb
      E+pON/GwqdbRTff3vX696wXye3T2ZqPO5uYmlofcrI5JIpGg2XRtheToMOFAmKhnVl21rrKR
      X+uNS/iCVGp1ovEEQzFX/Rok5WrVCpVyiUDAZYBMOo1py4xk70Nz3LsJke3Zn+4rCs39fr+T
      RiFGpwq3qYDwYIlAlBci3ULXdaeF+jsV66u3uL5a5dMvujbAerGCJElM59zBEmq5wEa5ScWb
      ANncwLAlkGwWNxqcGIuD7Gd0dBQaeW6orvMgHouTyQ7TbLYcL9DkzFEmZ3rvZ2O9wOTMYVYW
      F4Du8Ov6RpG1QonhtGuTTI6PEwxFUJuerglKhNPHDjN/8xa5kTFnRoJpmoyO5HqGrCSSKWQl
      RDDgPtu1fAG1XiNw+FQvA4RCYerZn0G1hd5kb02V3/ov/vC8dvI13O3e1z4bfIDiPdVOx9jg
      j3pWnl1wu6CWSAIThC3Gq3qlQb+t0K/qiLRlkU2qKArhcPiBqzHYC04/8iTTM+WeIFE2GaNU
      VVleKzA51nVPJrNjJLOwtLzsHhzO4LdrFEplHpraqrXu6Fyb70Z7J6ZcFa6rh6/26OGDkM2l
      eOvCBfwBdzGK5kY5LAXwB1y7y7Yt2m2DbM7TYNdoUqg0mTh0CMXn0sDGZpGR0XHW11dJJ7pz
      kbVmA0nys7FZJJPqMtbJU6dZX1pAN4xeBvD5/EQiOQKJYfKLV8mMH0ZTqwzndh6ns3/YFAqb
      DA/naFSLLG82ODE7xcbGBopkE8kM736K3a5gu3OBRdpBNBql0+lQr9edmoOdkqh2grAPoMss
      wm35ToHXuISuO1AJRVE9akhTrVGq1GjpHgPcbNImwNRIhnLTIB70uTYAdI3iLWSyI2Syt5/r
      BdCxIBIOgc9dmQ2tQattEvX8pLLPTyQSxvQ6BGSFSNCPZUv4PS7YRx97AoBRj7kQDATQTZuA
      RwIsL85jNGvUApEBKpC6zpqcJRqOsra0QNuS7y4DWAb5QpHh4Rxgs7yyTDJgcHO9zmxSphUb
      ZvRtOl68WaDg9uC3LItUKjWQ2Pdr6FqW5aQ0vFOlgtcdKLDkCUw5CKYZTrfRO1I3CAYg+95m
      8FBCUfw9XqBIcohos8lmqcZoritVAqEIo6N9WoFtUixXGUrG0NodolsG+GZhnYWlFY6fPE0i
      2pUsoxPbg66BcIJDM0dZXV3dzgCJ8eMoyJj+FMPjk2ja7Sc67htygGOzXR9zNJnlqce6Exof
      HRol5Pdh3gU6UhSFeDzuqC6i/jYajfak0HrTq/cLbxrz/RiodzfQ6XQwGmUM2TWMZyZHuHT5
      OkqktxX6UG73VX0/aOsaG5ubhGOu/dGsFllaK3L48OHbHywHSEYUVtfzpEZcL5Isy4RDIeRd
      nqdttlhYXARZGSAB/CHCALGt4WXhu+8HD3mM0P5V5G4oFEI9EZJAdGPwukOBHkbYDxN489Yf
      tJLL/aKbN+N+99WVdU4/+jiL89fu6XVT2VGeyvbOAYiksjx1Nrv7wWaL9PBYN4XD8/vP35wn
      MzSMsUspb3ooR9voDhl517pBJUkiGAw6BK4oCq1WC1VVnXRj70hVsd9uBC3miXm9R+/UTm6l
      Sp2po2cIS+7vMDE5SWUzTzK1t5Gj9wWGyrW5Oa5cvUqh5pa7jk9Oc+TIEUf9uR2uz88DD1Bf
      oHsB0W7Em3MvxqhGIhGazWbPKKL+4dqDAmjeLm7edi7vRAylYywsLhKNucGkgTr3g4ZQhrFR
      A6PVIBN3dYbSxjprKyvMnjjdUxPQj4ZaJ5lI0NLb714JADhF8gLeDFDbtp105Gaz6Xh3BqlE
      /eV54n88Hn9H19smUllmpqcZzt553fF9gdTNWvBHevOQIqEgqtbGt8szWVpeAtt+9zMAdPN/
      hIEqiNqbaSlyfsRw7Z3KJAdteycHxt7ZkAiHIyiyTdv0jNky4dmnH2dldfW2Rx+aOszU1BRj
      w9kHqzHWvYJt27TbbZrNppNpKYxYcLsnmKbpSIy9GMbpdPqeqj/v5mdyL5BfXaJldEgNjZKM
      7ey8UWsV1KZGoVh590sAcA3iRCLhdJLojwiL9Od+Q3iQUSzSL96puv+7FbIss7a8TLWu3na/
      dqvB1StXSaaz7w0GEBCd53w+n5OGDFupuVvd2PrVoH7Xqdj2TooAv1dQyOeZmJntScUeuF+x
      xrPPPUejuvneUIG8qNVqTl6QqAXw+Xz4fD40TSMYDO6o23v706RSqXsuAd4rz+SgUSkWqNRU
      /OHEu9sNOgiiM4QgfFEpJvz5uq73NKj1QkiOQZ+9j3cOCsUKptEG3XjvMYBIixBELOwDkTYR
      CoVoNps9s3u9iW/vE/47H5NjI7RtP4rPfm8ygKgF9hq8iqL0FL+oquq4S6PR6PuqyLsIkXgS
      ESZ7TxnBpmk6QykE+vtGChXIGx1+f9V/9+L/Ax2/Jmjl19BJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Median Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Statewise Median Income ' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Statewise Property Crime' width='192'>
      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
      L+Zls2wKN6LgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Statewise Unemployment Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Statewise Violent Crime' width='192'>
      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
      8jzHA9zxJx8jUrkwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Median Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Unemployment benefits' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29Z3BkWXaY+b303icSiYT3QHlf1XZ6psfQDEcUxRFFiisuZ6nYldaEFIrd
      jV394I+N0DKWISlWoZVoY+g0IqkhOaZnOEbT3dOuujwKVfDeJTKR3me+fO/tD5RBZlYXgCpU
      AVN4X0RFFDJvnnfefe/ce869594rKIqioKJySNHstwIqKvuJagAqhxrVAFQONaoBqBxqVANQ
      OdSoBqByqFENQOVQoxqAyqFGNQCVQ41qACqHmuduAGrmhcpB4rkbQLVafd6XVFH5RFQXSOVQ
      oxqAyqFGNQCVQ41qACqHGtUAVA41qgGoHGpUA1A51KgGoHKoUQ1A5VCjGoDKoUY1AJVDjWoA
      Koca1QBUDjWqAagcalQDUDnUqAagcqhRDUDlUKMagMqhRjUAlUONagAqhxrVAFQONaoB7CEV
      qYwsS/uthsouUA1gj8hXcvzxyO9xNXx5v1VR2QVPbQCVdIR33n+XlUiOqpjgO3/1Td7+6Aa5
      QoTFxRQL47fYyIl7oeuBpSpX+ZvJP2c8Nspk7O5+q6OyC3RPK8DgDHDiSIViUUHOJbC09HFk
      oBWdJsvK7Dj2lhAdVj2yLAObO8NJ0ovjJiiKwg8XvsNE7C7H/KdYySxRlaoICPutmsoO2FMX
      SGcN0urTMzN6m1RJpCqKSFt84hdtW0RFUbgRvsKPF3/Ilwa+zKXWVymKBdKl1H6rprJDnroH
      KMSX+ejj61SrLs6cbmdleZmyosekM9DefwxdZYnVZJFWjxkAWZbRarVPrfh+oygK86kZvj3z
      dV7reJMzwQtkKxkUFGLFKF6rb79VVNkBT20AFm8bP/3TbQ/+DrV2P/i/ywbgftpLHEiSpTj/
      afQPGfAd4c3un0IQBOwGBzaDnXBulQHf8H6rqLID1FGgJ6AoFvjana/iNLn50sAvotPoARAE
      gZCjjdXs8j5rqLJTVAPYJaJU4a8n/pxkMc6vHPsKNoO95vtWezuR3BqiVNknDbdHlCps5CMo
      vFgx2ZOgGsAuUBSFH81/j/HYKL989NfxmL0NZUKOdtLlFNlKdh803Bl3Nkb4f6/8FvlKbr9V
      2XdUA9gFtyM3eGfxB3yx/xfocvc+skyzrYVStUi6lHzO2u2c9dwaRbHAdHxiv1XZd1QD2CFL
      6QX+y9if8qmOz3Ku5SUE4dHj/CadCa/Zz2p26TlruDMURSGSC6OgcCd684Ubmt4tqgHsgHK1
      zLenvk6rs4M3u3/6E19+AJ1GT8AaZDWzfCBfLlEWSRbjBG0hFtJzZCuZ/VZpX1ENYAdcWfuA
      9dwaP9f/i2g1j5/D0AgaWuythHNryIr8nDTcOUWxQKaS4ZX2N8hX8qxkDmZP9bxQDWAbNvIR
      vjfzLT7T/VM021p29JtWRzvr+TVE+eCNBOXFHPlKlm53H93uXu5Ebx3Inup5oRrAYxBlkW9N
      fZ2grYVLra8+1vXZisfiRyto2chHnrGGuyde2MCit2LV2xjyH2M6MU5FKu+3WvuGagCfgKIo
      3ApfYzoxwZcG/z4GrXHHv3UaXdgNjgM3IaYoCpF8GLfZi0FroM8zSL6SZy27st+q7Rs7MACJ
      xak5KsDy1AylZ67SwSBVSvDdmb/h9Y43Cdnbtv/BFkw6E35rgOUD6F9H8mG8Zh86jR6fpYmg
      PcTt6I39Vmvf2NYA5kbe5/d/9/f44z/5E95698ahmDtUFIXvzHwDm8HBq+2f3rHrs5WQvY3V
      zNKBmm1VUNjIR2iyNiMIAjqNjkHvEcY37tRk7R4mtjUAq6OFT33mNY4OD/PKK+fQPw+t9hFF
      Ubi7McLYxm1+pv/nsRisTySnxd5KqpSgKBb2WMMnR1FkNgpRmqzNDz4b9B0lW8kcOHftebGN
      AUiUK+D22MilUiTiKV70diJbyfDW9F9zJniBfs/QEy9sCdpbEWXxQAXC6XKKqlzFY36Yqh1y
      tOE0uhjfGN1HzfaPbQwgz3s//pA7N2dwBQL4/a4XOmqWFZkfzX+Pqlzlsz0/80Suz328Ji86
      jY5ofn0PNXw6ovl1zDozDqPzwWcaQcOQ/xiT8TFE6WAtXRWlCt+a+vozNc5t3mc7n/+Zl9Hp
      IZ1IkEplOXhTO3vHfHKGK6vv87N9fxeb3r79Dx6DRqOlxd7KygFKiYjk17HorQ0ZrMeaTrKe
      WyVWiO6TZo1IssT3Z7/NB0tv87U7X2UqPv5M5iu2MQABX0sPr1zsJ5UzohNKL2wPUKoW+cbk
      X3Ck6SRHm04+Vet/n5C9nXB29cAEmJFcGJ+lCZ2mdh1U0NaKzeB4Zi/Zk3B17UM+XPkxf//o
      P+JI0wn+0+gfspCa2/Pr7GgYdHpihlwyS2Rqnvyeq7C/KIpCNL/ONyf/kkw5w0/1fmnbdIed
      0upoI1GMU6wejEA4ml8nsCUAvo9Ba6DfO8R4bPRApG/MJaf51tTXeaPzc5wInOFLA1+mxzPA
      n47+HuHc6p5eawcGoOXIqeMU4+PIbQM4t//BjpDLUf7ia98iJz3fFkdRFCpShbXsKj+c+y7/
      9uN/xb+9/K+YSUzxd4d+CbfZs2fXarG3kSmnyZb3P+GsLJVJluI0WYMN3wmCwNGmEyykZsnt
      4zoGhc1M1f80+oecCJzhjc7PoxE0mHQmvjz8DwnZ2/nqrf+4mc26Rz3VDtYEKyzPzGN0OSnF
      NigB5j24cHhqgaFzvYTDGYRChO7edhYWYgjlCDOrOU6cP8H6xAQlvRu3LsXcep6T5y6Qnr/N
      zGqa3lNn0CUXmI0UOXX+PD676bHX23zpl5mI3WUidpf13Cp+S4B+7xA/1//3aHN2YtAa9uDO
      HmIz2LEbHYRzqwTtoT2VvVvSpSQVqUKTNfDI71sdHdgMDibid7gQeuU5a7dJvpLjP9/9I9xm
      L18a+HJNT2zUmfilo7/GH438R/749u/ylVP/tGY060nZkQFUZQOf/9Iv4jFq2HlCwOOQGZma
      BL0FyVXmpZDC7ekwZmOV25fHsPicbCQzpAsCF1/tYuSD9yhnk8zOjKHXN/PqhTbm15cZuzmD
      3W0nlso91gAiuTB/NvoHRPPr+CxNHGk6wS8M/QP81maMWuOe+PuPwqg14bc0sZpd5lTzuWd2
      nZ2waQBl/J9gAFa9jU5XN3ejI/tiAJIs8VfjX6Mg5vnHp/9nDLrGxsiit/DLR/9bvjryO/zJ
      yO/xldP/FJvB8VTX3VFMa7Ob+PF3v8F3v//RnqRCKKU4TX2v8Lmf/lk6rDKWtiFiU3cItHTT
      2u5CazBiNhrxBwLoNQqiKGEw2zBZ3ZTWx3jng2uUtE7amu1oDSbMxse33GOxUfJijn928f/k
      n1/6l3yh5+doc3Zi0pme6UupETQE7a2sHoCUiI1CFJvejllneeT3giBwrOkUC6k5MuX0c9VN
      kiX+duYbzCan+JVjX8Fj9n3i/IvD5OLXTvz3VJUqfzTyu0/tXu6gB9BgtWnB1EbQKzz9PiqA
      YPJz9rgfgONnTgPw5he/CMClz3zxYcF78dqlz3zu3gcVbiVXKWhkOlpaCAz3bHstWZGYS0wx
      4D3yIAXgeSEIAiF7G9fXLqMgI7B/+yFF8mGabI+//17PALIiM5uc4lTzucfKq0gVYoUoQVvo
      qepUURSuhS/zwfK7fPnIr9Lu7HxseQEBp8nFf3P8H/MHN/89//nuH/EPj/13mPVP5pjv4H2W
      mJ9ZolxsIZqNU3j5pacKhKvVKisrT5596Ay24wQKyXXmd7DstlQtcmf6Dp/u/DwLCwtPfN0n
      pZwVia5uMDp5G4fR9dyvD5vB5cTMBG6Th/n5+ceWteQdvDfyLq7iJ/vX6XKKH8y+xWJ6jpPN
      Z7kYehWrwfZEuoVzK3ztzlc51XweR3F7/bbyquOz/OXYn/IHsf/Az/T9/BNdfwcukI4T588i
      52Yx9p3Yk1EgQRCe279oYR1RrtDm7Hyu173/z2PxYjXYWMut7Mv1BUFAlCqkyykCtuC2ZY8F
      TrKQniUv5hu+kxSJq2sf8vs3/x0SEp/t+RlWskv8h+v/mh/Of5e8mNuxTiWpyGj0Jn9+9485
      2nSST3V+Fo2g2dV9hRxtfHHgF5iMj5EqJ5+obrbpAar87V/+GWnBgtFmI7K6jMTQU3XkOp2O
      zs7Op5CwOyZnRunt6mO478iej/LsBEVR6Ix3oDil53rfW0mVEmiX4Hj/CTo9j9fBGbDzUfYd
      dB6BTt9mWUVRSBTjvDX9V0yWx/g7F36RV9vfwKgz8fnqT3MjfIW3F77Pt6J/wesdb3K25dIj
      67oqV1lOLzAavcnYxiiZcpqzw+f5e0O/gln/6NhkOwKhAO8kv4vgkulsfvy9PYptDCBJttLG
      iU6RiG2Q6t2rpICtu+EoioIsSwgaLQIgSVUQtGg1AooCAgqKIKARnv8IiKIozCQm6HR1o9fs
      Tx6rIAi0ONpYzS6hKArCPtRDppxGkqu4H7GPUT12o5N2Zyd3N0YY8A6joHA3OsJfT/w5VoOV
      3zj9P9Hh7H5wHyadmUttr3Gs6RTvL7/Nd2e+wcerH/D5ni8y4B0GARKFGLci17i1fo1kMY7f
      GuBS22sc8R/HbfKg1Tx5ZGnWmwk52plNTHEicGbX9bvNlXWkVkf43rqIqJlCr9g5W1dCzET5
      8M443V1naLZmeOfyBBgtXDzXyUbYQDU/h7f3JD7r838BC+LmaqfXOz+7Ly/efVodHYxv3EGU
      K7taWbZXRHJhnCY3Jt3j50oAdBodw/7jvLvwA97o/Bzfn32L25EbvNT2Gm92/8wjZQgI2I0O
      fqr3S1wMvcL3577Nn43+PiF7O5JSZTWzgtfi41jTKU4ETtP8lIFzPX3eIW6tX6UiVTDqdle/
      2xiAm9/4X//ZY0sYnAFODFcoFiG5usHxNz5NZXaMbLnE9Oht2o4fw2vRI0nSvd5CRhSfT9bh
      XGIGjUZLsyX03K75KJrMzZSqBTZyUZosjakIz5r13BoOgxOtot1RPXQ6evjb6jf491d/G52g
      55eGf40h31FQ2Pb3Np2Dn+//B5wJXOT9pbexGmx8tvNnaXN0PDD+arW6J/d1ny5HDz+c+w7x
      /AZ+y6PnOT6JbQxAZGFqntK9wy20Ogudve2fuChGq1UoVGREWcao0RIINlPMZVFQ0Gg2421F
      UZ7b9ujz6Wn8lgAey/Zd/7Mk5GijKkskSvF9mRGO5iP4rQH0j5hcehRBR4gedz92o5Mv9P7c
      E2XGdnv66PL0PpeDQgL2Fix6CyvZJZrtO9u54z7bGIBEPLJOprqZzag3umnvba8pUYgvc+Xa
      CNWqnUuvHmH+8o/QOJs5a7IitrowSGHCqRIh98Nx2vvGsBMkWSJbyeA0unbVbVblKnPJaQZ8
      R3Z1vWeBQWMgYGsmnFvhWODkc79+NB+mzzuw43rQoOHXT/1TgH11HXeKWW+mzdHJTHKCc6FL
      u9J5GwMwcebVV7jz4Xf4/uUl3P4gZ16qfYAWbxuf//zDReOvv/nZB/9vbQV4uqnq8dgoXx//
      Gv/Lhf8dl2nnZw0kSwnixRh9nsGnuv5eEbJvbpv+vANhUaqQLCV37Rr8JLz499EIGno8/by7
      8ENkRUYr7NzD2EGToJArKHicBjLJ9HNdEpkpp/mr8a9Rqhb47sw3dpwBqKAwtnEbq95Gh7Pr
      GWu5Mwa8w6xklsiLj96RWVEUYoUN/nr8PzOxhwftLaUXMOlMNeuAX0SGfEepSGVmk1O7+t2O
      xp/8wX5OvPYmM7ennutk/ser72PQGvl01xf4wdxbpMtJXKbt05U3hz8n6XL3Pji8Yr8J2lvJ
      VTJky5mGFVm5So6Plt/lvaUfIcoiiVKcAd/wnvjPkXwYk86M07Q/s9DPC4/Zi8/SxHR8nH7v
      0I5+Iyvy9j3AzPV3+L3f/X3+8I//jPduTT+3sw8LYp7LK+9xPvQy51ouISBwd+P2jn5brpZZ
      Ti/Q6x44MF25VW/DYXSxlnuYBiIrMtfDH/P/Xf1tPlh+l8/1/CxfGvhFltLz5PZoDUE0v47H
      7D0wDcGzQiNo6Xb3MZOc2rGnUK6Wtu8Buk++xld0PnJAsK2b7UeSnx5FUfh45QMALoRexqgz
      cSp4nutrH3Ou5aVtZ3TXc6uIskjbNolVzxOz3ozP4mclvcjJwFmW0vN8d+ZvWMuucqblIm92
      /RQ2g51Stchb03/NdGKS08HzT3XN+1uhB3a4p+lPOn2eQa6sfkCiFMe7g7UCC6m57XsAjVbD
      2twYG6kc3/mrb/M8FvflxRwfr77HpdbXHiRZnQleIJxbZW0H+9dMJybwWZpw7yJoftZoBC1B
      WytzqWn+cuxP+f0b/w6z3sr/cPaf83cGvozd6EAQBMx6Cz3ufu5ujDz1qqfqPXfqUcsgX0Q6
      XF1U5eqO089Hozd3th5AoEo+n6NclZ+5C6SgcDtyg2K1yIXQyw8+D1iDtDrauRG+su2LMZOY
      pNPZjX4fcn8eR8jRxkpmiZXMIr98/Nf51eO/QcjR1uCmHW06yUJq7qmXJ2YrGYpi4YUPgO9j
      0plpdbTvKBAWJZGJ2N3tDKDA/OwGr37pl3jp5DF+7Su/tCfLIR9HuVri3cUfcqn1tZrVPjqN
      jrPBi9wIX3nsbsa5SpZwboVe78Az1nT3HPEf59dP/RP+2cX/g2Hf8YbdGe7T7x2iXC2xmN55
      avCjSJVSlKpFAo9YB/yi0u8dYiE5u+2O13PJKUS5sp0BZPneX73FBx9+zPTcHLdvjfOsd7y/
      HblJuVpqOIZIEAQGfUfRa/WMRm9+4u+X0gsoCrQ7Dsbw51ZMOjNH/CfQanSPDc6tehtde7B3
      f7y4gUlnfuJc/Z9EejwDRAsR0qXUY8vd3bhNwBrcfl8gi81Fc3Mzzc3N+P3uZ7ovkCiJ/Hjx
      h5wKnnvkCYwOo5NB31Gurn30yO07FBTmktP4LU01u5/9pKHVaBn2HWMidoeq/OR5M9Hc+uYq
      uOc2drf/+C1NWHQWljILn1imKBaZSUxyrOnkdu+zi5/6hTfp7e2lt7eX7s7QniyJ/CRGItdI
      l1O82v6ZR7aQgiBwMfQKy+lFVjONwbAkS8wmp+j3Dh2Y4c8npdc7iKRIzKemn+j3iiITyYcP
      TQB8H4veSqujg6nY+CeWWcsukyjGObq9ARjwN9mYHLlJPJPlyjsfPLONscrVEh8uv8vJwNlH
      tv73aXd24jZ7GYlcb3APUqUksUKU3gOS/vA0eM0+WuytjEZHnuj3FUkkVUo893XQ+839tIjZ
      5OQj3UdFURjbGN3cFNi0I49Gg8cO/+Y3/yUblsAzCYIVRWEyPk4kH+bVjk8/tqwgaDgfeonR
      6M2GHdfWssugbI62/KSjETQc8Z9gKnb3iY4wqkhlkqUETbbDEwDfp8PVRa6SfeRep1W5ynhs
      lGHfMbSCdicGIBNJSvyL/+u3CJY3nsk8gKxIvL3wPU42n8Vnadq2/PGmUxTEPDOJyQefKYrC
      dHycdmcnRu3zmK579hzxnyBbybCY2v1oUK6SoSKV8Zr9z0Czg02ztQWH0cl0ovEg8Eg+TLIU
      Z9B3FEEQdmIAAkIlyld/56vcXow8k1yg6cQk0fw6l1pfRyNsr5LT5GbAO8yV1Q8ffLbpL8/S
      5e7b9/TnvcJj9tJkDTIRv7Prk2Yi+XXsBgdm3bMeuD54GHUm2pydNQ3kfUajtwhYgw92yNvR
      5rjh1RQuXwsenbzn2aCSLPH2/PcY9h2jxd66o99oBA1ngheYTU6RKMaAzczRjUKEHnffCzPq
      sblLwymmYuOUq7tzgyL5dRxG1xMvNv9Jp88zyHJ6gaJYfPCZrMjcjd5iyHfswSTpjrZFOfXq
      a5wbdqMNtO95DDCTmGA5s/hgW4yd0uMZwG3ycG3t8j05kziMrhdu1nPYf4xYIbrrgzaiuTBe
      i/8TJ9tedPo8Q2QqGSL5tQefrWaWSZYSDPuPP/hs210hfuf//gMErxMBMFpbKAFPdmrWo7ke
      /pg+7yAtuzyJ0aA1cLL5LCOR67ze8SaziUmCthAW/V5qt/94zT4CtiBjG7e33TVtK9H8Oiea
      zzw7xQ44HrMXh9HJQmqOTtfmDoKT8bs4DA5aHA89jW1PiHn10xdoDgRpbg5y/OSRPdoc9yGf
      7/kiXx7+1ScaqjvX8hLxQoyp+DhzqRn6vIMv3JCfXmNgyHeM0ejNHc8KV2WReDH2wvWGu6XP
      M8hMYhJZkRAlkbGNUY42naxZMbaNAWhoam0nFPSjQ2J+dp69Xc8PXov/iafqXSY3fd5B/nb2
      mxTEHN2uvj3Wbv/ZTAE5QrwQY6OwswP34oXY5q50O9gH6EVFEAT6PIOsZpcoiAVihSjruVWO
      Np2qKbeNAST5nd/6N/zNW99nfjVCLlc8WGeECXC25RLruTWMWhPNL2jee4u9FY/Zy53orR2V
      jxWi6DS6Ha2ee5Fpc3ZQrpaI5teZjI/hNLlprpsX2SYG8PC//fb/g3yv6xUEzTNNhdgtAgK9
      7n78lgDtzq49O9rooKHXGhj2H2M0eovXOz677X1G8utY9Tas+sOTBPconEYXAVuQydgYs8lJ
      Bn1HGjYm2zYZTqfXYzAYMBgM6PW6AzfAaNFb+YWhX+YzXV/Yb1WeKUebThHNh3c0GhTNhw9d
      CsSj0GsNdDh7GIlcZyWzxLDveEOd/MTPGAmCQJ93kMALPuXf5ujAqDUxk2yc3LmPoijMJqaY
      ik8cuiS4T6LH3UesEMVhdNHqaG/4/iB5NCqPQSNoONZ0ijvRES61vlYzvi8rMmvZZb4/+22m
      ExMMeo9yqe21fdT24NDm7MCst9DvHcb0iFlx1QB+QhAEgSNNJ7h26yMy5dSDA+I28hHeXvg+
      I5HrtDs7+cqp/5Fudy+aXWwO9SLjNLp5o/NzDPqOPNIlVA3gJ4iQvQ2rwcZUfJyjTSd5d/GH
      fLzyPk6ji1868o8erJhTeYggCHz6MfGhoOzh0eCKIrERXkfUGAj4XUhVDToqiFojJt1muCGK
      Inq9+pCeBEVR+IuxP2E2MUVFKmPSmflU5+c413LxqfbYP8zsaa1VKxvcHVumpbsFV6XK+qqO
      YmaRtuGTDwxA5ckRBIGTgbPMJ2d4reNNzodewmqwvTDJf/vBnhqAkk0TzaZxl5sRFImRjz9i
      6JVXcBh1SJKELMvIskyl8qyX1r+4dNp7+Cen/8WDgyrEyv6de/AisKcukFgqIOuMTF+/grs/
      RHZFJFMpcvrUEXSazVZKdYFUDhJ72gPIYoHrV6+C1UePxY6uyUCQDaKZMi2uF2OVlsqLxZ72
      ADtB7QFUDhJqZKpyqFENQOVQoxqAyqFGNQCVQ41qACqHGtUAVA41qgGoHGpUA1A51KgGoHKo
      UQ1A5VCjGoDKoUY1AJVDjWoAKoca1QBUDjWqAagcalQDUDnUqAagcqhRDUDlUKMagMqhRjUA
      lUONagAqhxrVAFQONaoBqBxq9nZjrEqWjz68guBo4fSRAMmEHk1lDa23G59N3QtI5eCxpz1A
      cnGWlpOv4jOIZEp5UtF1VtMCHqu6c7HKwWRPDUCsCFhsesxaHRVJZHLsLgarXd29WOXAsqcG
      4GpxcfeDj5iJZbAbTBw79wr63BrRbHkvL6Oismfs8QEZCoVcBkFvxmzUIkkCGkGiqmgxqAdk
      qBxAntvmuLK8ecR2tVpFp1NjApWDwXN9E+/b2labUxSl4fAySZLQah8e8ibLMhqN5hO/f5SM
      +t/sVoaiKCiKcmhl1H//osmAzRN3npsB3FdAluUa5eq5f4Nby9SXf14y6itytzLun4jztDKe
      9l6eRMajvn9RZEiS9ODz5z4R9sgHpShUq9UHf2611gdFZAnpnhu1GxmKsllhclWkLD78frcy
      krEIyyurFCtSgwy5Wqa05fP7CILwQIYoiiBLiFUJWap+4r1sXmudSDz9QMajjveUZQlZVra5
      F+mxMrbyUIZCpZhldXmZjWSW+5311ntR7r2EUrVCRWysj8fp8ahn+6h7URTlwcteKpUa9VBk
      cvn8g88ffS91etx78TUazT0ZCtrf/M3f/M3H1swes/VBVCsFZqemuHHzBpLeic9lq3lYiqKQ
      iq4wM3GXa1NhQi1BDDpNg4yZezJkQ6OMyZvXMHk93LxyjUQ0jN7TgkVfJ6Oc35Rx6yaK0YXX
      aa2RsTB6lVjVgFkvMHN3FFtTGybdw+/L0WlG43pC7tqDmLfKuHL9Om1OHVfmU5iKq0QrNjw2
      w4PvpVKGickZVpZXuTk2QV9vHyajvq4+ZOLhRaYn7jAyFyPU0oxeW3svYinL9OQ0N27eQGP1
      4HFYHspQFMJLsyyvrbOxscFGIo3V7kC/pU4ruThXR6ZxuBzk4quspqsEvI4tMmTu3rqJ3evk
      yuXrJDaiWP3BmvoAEIsZpqamuHnzBjq7D7fdXHcvEhurC0yO3+HuUpLWliZ0W+4ln1hmdr1E
      OTzJXCRBoiAR8GzRA4VEZJmpmQWMDg8Ww0NnZqselUKayckpbty6hdHux2XboodU3r9UCCW7
      wl98821MrgCS1shgZ6ChzPV33mJivUCrz4zZ34nNVOuxSell/vJb72Jxb8oY6GiUkcwXSK9M
      o/O2E3Tr2EiXar6vphb5L2+9h8XTjKwz0t/e1CBjNVmgv7uT1tY2gh490ToZilRh4vY1Pvro
      Iz766CPuzKw0yCgXCxSKBfL5AvlCkapc23TJ1Qq5QhFZERC0esymupEyReGjH3yT+USVkNuI
      NdCFxVDb0hWjM/zN9y/j8AVR9GZ6Qr4GPYxmCzabbfOf1YxWU9szlNJRDN4OWltb6e5oJ5GI
      NeiRzhfYmL2DvX0Il0Umk6899DAbnuSb//UaTn8LGMx0BT21MuQq733vW6xmIeA04gp2YtLX
      3kulmKNYKTGxnudUfxvJZLLuTgRcbh9aqcjk2F3Gp+coibW9cGr5Lt9+9yYefxDBZKWj2V0n
      Yx96gPsIRjuDPSHikTCZVJyq3oHXaa0pE+zsxUKRcDRJMpmhubn5wXAqgMbkYAO0KSMAAB2x
      SURBVLA7SHw9TCYdRzI0yvC5rEQyCoM97SCD2+vBoBW2yHAy0HVPRiqOZHA2yLCbFO6MzRDb
      WCcjWRnsDrFFBIpcxdbUzdH+TkKtbTT7nA3367DoSRQUPFYdit5G0OfGsOWhaw0WQqEWggEf
      DoOGTFnAZbdsqTCB1u4+9NUc67EUyXSelmATeu3D+tBb3fS1+9kIh0mn4ghmN+6tMgBZUdDq
      9BgMBvR6PUajCe0WGTqzjfjiOOFYgpWVdTr7hnBYDDV6eOwG4iUjg53NaAQdbo+brafgGu1e
      elq9bITDpJJxtFYvLtvW3lGgrbsPTTlNNJ4ilSnR0uxHt0UPo8VJJRMl1DOEWa/BYtk02IeV
      LjEzO0fn4Al6OkJYTXq0Wn3NvZicfrpa3ETC66STcfQ2H07blrPqBO3+nRSvVArML66CoKW9
      oxstckOZlflJ9O4OjpwKoR29RaFcrekF5FKGsckFALxuFzOzS/S11bbgJoeXQD7PxI0PWMnr
      eePlZrbO/ynVCqlsEafXxwmvD7QG6nE3d3LC5iZdkPD7PTUvP4DWaKeyssxEAsRiDsER4uRA
      W02ZcibBaqyAxeHHqS0iC7Wdr1RIMTG/+uBvi6HRua3kU6zHs5htbto8Tgy6upEvsUw6V8bl
      83PS50Ojq7sXQcBis5NfmWd5ZYWoaONTF0/WllEEWjp7UWQZQaPBYKxzEhSFdCaLLIpMTYyD
      1kC3qwrah8+lkkswMbvZC3ocFuaXwnTWtL4Ky7MTJMugMdjpbW15cIrofTQ6A6FQC1PT09xc
      W2P41KW6e9FgN2mYml2ixVZlNSNwbKi3pkgpE2Nyfg0At83I/EqE9oCr5l72Lxu0WiK8HiGV
      K2NzOGn2exqKtHb0kl2+w9/+4B1cHUfwO2pPmhSMDoYGerHoBSoYefXSqQYZ195+i+mNCp1N
      ViyBLqzGWptXJJF0Ov3gX1lsDGYX7nzM6EIck6bCe2+/S6ZSa6xas5OjR49y9OhRThw/QiIW
      bpAxsRLn0oXzJBdHMPi6sJtqu3yN2UF7W4ienh5aQy0E/XXdtaIwcmOE9v4hevoHIDFPJCfV
      FdkM4qvVKqJYhbqXCkXmwx98k6UMtPksOIOdmA31AaOMJElcvX6Nilh9EJw+RMDXFEColsnm
      i7i9TZjqZOitHgb7ujEIMpg8XDw10CCjKdRBW7MXWRIJry5RqKvTzOo433r7Bt5gK1qz7RHu
      i4A32EGrPs7l+SL9Xa0N7pzR7mOgrws9EhprExeO99WJ0OyjC6S30NnRgdemZfT2beJFaA14
      a8rEwsvkyiKSoEeQypisToz6La13Icrf/ugyFneAZr8bBQGr2Vgjo6WzD6tQIhJPk0hkaA4G
      atwoRaqQzORAkVhbmiNaEOhure1Fbo3Pcun8KcwWO6ZqnGjVid/+sHWt5uN8fH2ElZUVVsNR
      2rsHcdlqjbWQ3iCRzFCRBLSCgsXuqNGjkl7mo5sLRBdnyIoV5tcSdIZqY5qZhXkcFgu5XJ5s
      JonW1oTb+lAPsRBnPa0hH58nky2QLMq0bDUkYdP1MEh5NuJpkuk8weZaN0qj1WOz2VhfX2do
      +AhWU32PKHPj8se0Hj1Nb3uQqdtX0HtasW4xgmJiiR99cBNnUwtNbjuKoMOyVY4iM3L5bVbS
      MoGmAN29PdjrYh6jw0dPq5d4JEImFUdj8dS5UQqxSJiS1kHIYyaTy2NzOGp6ktzGPO98dBtP
      cwify4ai0WE2brmOUt1HF6iU5OqdeQwmM4PHTuN2uxrKaBBoHTiOeW6MVEnCUNd6CyYPr776
      0oO/tfpG9yWxtoyhqQ1jMkmTS1PjIwJoDFY8Vi1Ti0k6h88QCjQGjp0tPibHxwGQJCMtwbrr
      aDUEWnrp7vAjiUXmV2JA7f0cOXEOgFI2zt3p5Ybhu2ouja2tD2n9DsN9vVy+NdGgx/lz56lU
      N1tK68AJrNbaUadKNk5G9NPW3IHfZeP9kelaAYrC8sw4OcFB//ELDGkU6tPBxEKKmcUwNquN
      6ckJbO4Abc21vbOkKOi1WgSNBt2m2BpMziCvvHz//hVkoa6ARsvZ175AOZ/i9sgII2PjvP76
      G7itD19OsZglnhFp8duJZ/3o64c2FYnF1Rhnzp9FJyhM37lOuthCk/3h/VjcIV556X6jqqBQ
      p4eg2z8DQKPHbjUDCsvzUyyt+zl7tKemyNjMAmesWhbTGoa9BWbCeY6EtgaoMjPjt6myWXGu
      YA8DHaZGGRaBpayeQVeOhY0iQ8GHMqqZFd6/tUBfZzP5VIxlRaCzpdYIOnqHKRdzZOJRJleT
      dNQFAVI2xkrSQFf7ZkyxHI7Q21UbA0yNfExK1GKqxMm5z2A11j5Qk7cdx8IaePwsLK7Q3dXd
      UGXJ6Brx3L0RF62B7u6emsDR2tSLbvFjwkUXC7MzdPadbJDR1nuEYibGlfffpoCRM+fO49nS
      i+gtLgb6LKQzGRZnp9HZantlBA1nL5xlfGwESQFv32ma6td6KApiKcfyyjoz83NcePWzuB1b
      v5dZnLlLvKhj6MzLnDU2vobp6CIxpYXp0XHOv3SKq+NLhPxHa/QwyEVW1jdwGiCeLhMw1Hv0
      CpVijpWVNaYXFnnp9c/VNkuKvI8xgEaLQa+jXCwxtxKmNdg4/Njb6uX63WX6+zqpKnq8ztqX
      W04vkjN1c+HiRc6fPc3q0lSDjJ6Ql+tjqwz0dSBhwGOvlaF1tPLyqR5MNjf9/X2YtI3B+Ojl
      H3F7aolyag3R0YHdXPvADd4umjUb3Lh1kxu3pxgeGm6Q4QmEcJj1iFWZdCxCte4yUjHDSjSJ
      KIqIoogk1RUQBPzBFswmM+09A3S2eGtSSgAErZ62jg6cHj/nL17CJNQOTwLc+uD7XBlfpqWj
      l7NnTuO21PZmxdgC33v7MhuJLKvpUsOgAopCZG0VdHq0ej3z4yMkC2KtjNQa10ZnMdncWN2+
      2sDz3r14PB6o5Lhz+xbTC2GUupR5h7eF4toYjtY+tLKCz1U3siZoOX72LJpSlmQ6y+CJszjq
      GpVCfIUbY3OY7W7s3iZa/Y5aGRrt/sUAlDPcmV5Co9GRLomcPTbUMFtpc/tpa21BX80ys5qg
      uampZrxY0JtZnbxFPJNjZWEWe6CLZm/tTRYLedBoKeXSFCUdPo+nJo6oZle4NpWhSZvkgzsL
      BEKNL7jD40MpZ4hubLCeqNDdEazxNZVqharGgN1mw+VyYjDoMdf5zgaTGa+/mUConSanEZ3e
      WNN6CzojOrlEoVRFFnS0t4cw6LY8UEXhxscf4Wtr5/aV9yhhpaXZh2ZLnRUTC9xZLuGTInw4
      EaYl1Iatzrd2+ZpwmrVsRGMk00msDm9NnWoNFjwOI7FIlPD6Kq5AGw5LbVxlc3mwGSAc3sDT
      0kmLz4lmS30YrC662lsw6qCSS1PAjMexZThWlrh67TZHz12gqzVIePY22ILYtgwMSGKZfFlC
      L1RJpHNYnXUxgCyxvDBDMlugXCqSK8v4PM6ad8hoc9PV2oxBK1DOpihpLLXDwrK0fy6QYPby
      2isvoUgiTXNTTC2uM9gVrCkzO3qVeEWHTUqQtR7Baal9mEpVpHXwFCG/A41GQzxRP1my2fLa
      3SXWVxZZiRUIdda2mkoxi2yyYjEDRiM2Y2PKgMFoxOb0E2gfYKiUolSsYNrak8hVJEV48MJq
      hEYZGytzRHMiSrmMzuqk217bKmp0RoKhNkzJJGurq8wuhTnR315TJi/JmLRaRElDa4v/Xg/w
      8FpSMQ8mO1ZrEbJmLIZGPVIba6zFixj1OrRWF5b6uEqrQ6/T42sO4G8JNQSnoDB24wPioo3h
      /gF0Wi1Qq0e1mGMlEgfAG2jBYmkcjrUZNUSjMRwGKFQETHWtt97soKfHTDq+wdz8PFqbv1aG
      RktH7zAd93S6c/0Dopkgzc6tgwJZVqMJAHyBFqzmxhhx33oARSpw+f2PSGVyJHM5ZI2pYehP
      o9UiiyWK2QzrWYXu9kBNyyvFZ3j77gaIRZxOOzduj9LVXut7b6zNM7u0jr2pjaODvQ3Dfhqj
      HYtWQtJZCHosoNHXjlgAY9c+oqw1MTU2SrECwWBzjR7l2CxzRSd9rV6sVismY2NFlwt5JEVA
      qlbR6vU4XK6aUaByYonvvX+LclXB52/C7XZhs9S6ax6nnVJZpLm5GVlWMJstNUN/OpMdk1BF
      0tsJuk2bM8p1uphtLkKtIVxWI6l0BofTWTMKVM6EuX53le6eDsrpNRZjZVqaap+L0WzF6bDd
      y89q1ANBQKc3YLFYsFgsmEwm9Ft7M0GDP9BEIZOmLFZp6epvcMXEQprx8UnKmBg+dpyA21Zb
      oYrM8vwUy6vrRCNRklmR9o52jLr6+QQ9FosZRQGb3V7bqwqafQyCk4uUPAMYMhN0HTnLnds3
      ga6aIi5fMy5fM1J1gPboGqlMmcDWfBtBS3NbF32tOmbGRkjkG8fwxUoFo9FILhFhIhWjtb0b
      u3nLbWu1bKzOUxAFEASaOwepC/vYKEq83N7G6tw0XT096BsGJCqM376GGNl8SHZ/G0d7W2vK
      ZJIxUmUtOo2G5qZmLHVCDK4Qn3n9XvAtCGh1jYuGqoU088txBAF0Rgdef22wLmgEoqsLFEQQ
      BA2h7iHqZ1eWZ8dIFSXk3AZZ9zH66/QopWNYm9sx6nX4m4JM3Vmsk6CQTSdIPgjGjTicbvRb
      jFnQCIQXZ5ENFoq5PF2DR6mZj1ZkwsuLJO+lUGQKZUw9PTWNkyyJoDUiSCXmpiexeZppC2wx
      REVB0Ztpbw8CAn0DZox1QXA2vsxKzoYxPUtGZ0VIVzg9sKVXlSr7aAAGO+TClGWBtcV5TNbG
      YdD7aHUGNJUUK6K7xgC0vj5OWstUFejsHybY1RjAhrqH8ORSJDYizKynaW2vdYHE5DxJXTuv
      nQkhi0Xe/fgmHYGXasoc6+9i9OY19CYrS0srdHd11LgOWoubs2c7GGp1oSgy1WrjLG5zezem
      TIFscoNbN65y+vwr+LbMJUjlLDMzSwBUKyVcoT56Wmpf3ztTy1z81BsYBIW50Y9Yjpfo9j+s
      j8LGHEVLJxeHmpFKaX58c5JW/9kaGXqjGV05RxkFsVymzovC5u/EtRplcXEzG3Wgp7ZRQtDQ
      2jXAffNOxcJUJKXmBc9G5kni4UJ/O5VMhCvjU7xy5kitjO6HMh6FydHEsWEHsVichfk5jI66
      YFyuMj4xwZH7Aw75AgG/v8YQ5WqVfC5OOCPwxtkgH03Fa2VoDfsYAzhaeeNiK4oiEV1ZIKPY
      GspsrC4QyxQBqIoQ7KgNxqiWiUQiD/40PsKIRj74PmV7Ox3GNLKzqyHA1doCkLjFxFQeMZvE
      6Q01yMjFouhdATpNWtaWlxG76l8KhWJ+c92zUi1x884s508dqylSKhZRNDo6+o/SNwT1A3A6
      i5sTJzZbOLmc5d3rEw0G0OKzcntkFIdJSzQNx/tr68PobKYydZcJbZZyOobHVxtDIAi0dvXT
      CpQLGSLxDGJVRrul5VVkeTN1+x7V+tGoOpLRVfA7cG2Jz2SxQrFYYW5uDsTig7mL3ZANT/Pu
      aJijg90kSzIXQvX98sOU6XtXrR/lxx3soVOzjrGvF3QSxwcc9SL2cSKsnOLjW1PodTrm1iL8
      3Bc+21DG19KBu6lCPh1nfD7ckDGI3oxWzJOoGBjsaye8HoO6Tn/43GtEVhZYXsuQKi1Q7Pdj
      3jIKpNFbOX/pAuVyCV1rG2Zzrd8NsBzPc/61sxg1AkIuTCRVwhl42OYJWgPp2Br5dgdiZoOK
      1Di6bHO6Ka4tc+fKbZZLTr7w2hm2uqPVXIyro5sTV7Ik4g/WT9sL9Bw5S7lUpKpAoKkJQZbZ
      OpGl0Ro5dvo0xVwaR6gFUap7JRSF1YUpEskkkRwEfG58TbVldBYHfX0PGyNBaMwFCi/Pkbrn
      vlQVK522WkN0tPRzyll88Hego3bCbidYm7p45YyNubkV8qk4q7EMId+WF1ij49jRY3g9nvuK
      oqubn6nkN5PtiKcAcPpDOLeOJO2rCyTocDrsFPMFlGqZfFHEqK9VZ+rmh6QUKx4hRcE80DAK
      JKfnmcvZuNBc5Dtvf8ynX3+l4TLxjQiuYA9t3QME5ibI5suYXQ8rQYxMcC0TxJKdpu/I2UeO
      4BwdaOfGlatYjFrKso0T/toMS53Fz/GeKjPT0+gNVk4f62+QMfrxO1QdHbR7beTpbgjGdTYf
      ly7d8+klkYW1jcYq02gwWTYn8VZWJig4TdjND1/WfHSWGbGNUniW86dOcuXuFG9cOrNFgECo
      a4CQe4HYosCx4Y7GawgadLrHTA8JAsH2Hu6P1y1P3yZdEGviKqlcIBxeR5Elwsvz6Pz9vHa6
      sU4eh5hPkamaOHn2LAO9bSwl6gxAEBDEIgsLCxQzcebXM7zxmTdrZpMNNg9DQ5tegaDRoK1f
      jLOvLpDBxtDQEIos0dPVRjgaxeOofSAt3QPoIuskIyUS5RVKgwFMWx9OVaJQyLAaL6M3GMll
      0rgttV2l1+NmYvwWmWKFYNcgrc66RStaPdmNZYqFFPr5WVxeP22B2l7EHezmYnMXiqKQ3Vhi
      I1Wk1fNQTjk2y2IpgEaK0Nney8idu1w6UzsLe/rVz5NLJ0lsSCgbi+RKrob1DQ+QReaXV+ls
      a3n4maKwvjL3IPgURT2tttqRE41WR3JliWomy9zCAjL10bpCdG2JdHydXEJgek6htbXtEQlx
      j0FRiKwtkrk3+RWLJGmr8070Fic+e4K51SS9xy88Mr1kO/RWJ0J0msuzYxhtHoYH6wxI0NDU
      HCA5MYnW6ufNN8/iqGsgK/kk04ubiYmlXBpbSz+D7bXDqfu+PYOg0eJ0e7g5foXB3loDsLt8
      2F0+5L4hjpRKUN/le3v53EUJUAh2FijLjQ8ylUyg1wlkK+DNJSmUa188na+H120VYLOCNdrG
      0ZdKuUj1njuRSmxQcNY9cblKPl9Ak89TKBQolhpnYAVBg93lxe7yYjGOE8uWa/SQimkmZhYp
      FEtodAY62htb56mldV471sEHyzIvH29v+N4S6OOCvQxSG6VKlZYOe0MZbyCEu6mFzk2tHt/a
      fwIubwC7e7M+QqFWjKZatzEXneXynRU6W5vIp2KsaXS1Izg7oFrKkRMF0pksHW4P8VSW1qYt
      MZ4scuXD99G5WrBrJFZXVzF0dtS4yUa7l6NHN59VNRvh/YnowTEApZJjYnb5/l9Y7J9cQRqN
      FrPF2viFVCa8GiaZTDE1v8BLr36moYjX30ypquHlvmb0UgFRrg3IlEqR5eW1B3+b7F466nKB
      8pnkgxYPW5BOX60LZPB20l6Jga2TfD7P8GB9+i9kkhvkS5vrjeMbCUyttfMVaASy2Rx2pxOp
      UqIkNgaOilgiHI2TScqEIya8Xl/NXEIhNsdkwoGSnMLj9TM6u8pntqaICwJana6+X9g1yY0w
      6fv1odHT3tFR04sY7X4Gt6R16bS7NzKD1c3QkJuhoaFPKKGhc+gULS4Ta3kdFvJIkgJb2q9i
      MsytiQVgM2Gvr/9Yg5T9d4EUibX5aTA2RujboZRzzCys4rQ70JrthPyNK7FGr1/F3dHHzcs/
      xu5r4+iR2pdTY7IzMHDvM0nkzvQ81BmAXpAIr68DYDC7aW2tW8guiaRSm4GWVMmTXEvTfOl4
      TRmxKmMy6CiKCs3tfVjq1jaUkyvg7uHIUAC5nOPd6+MMdzXXlDl39hxlUeKiFxA0Den+Wr2J
      Yi7N+TMXkfMbrGXSn1x5T4og0NzWTfNjimiNVkKhh+6Z5hFzGk+NXGVydp6WIS+Ta1ZCrGAJ
      2bFu6VWNNhc2k5Z8SUKjM2A0NL7u+5gOneD9axNYzCbmwlF+4ac/v2sZGquPN15/BblawTmt
      MD4fZqgunSJVkemx25iRFNo7Qmjqpu0VqUqucG/EQhKJxJIcpZZbozOcff1TGAVYGrvMXLRI
      X+BhDKAxORns72Zhdo60xsqls0eo5/b4JG+c7ObWcoUBa5qYaGaw5aGLYvR1oZm5ws2RCJVc
      mrbOOhmCgMXmqJ1QqsPkbmeweYa7d8cQNHrOn2pMynseaLQ6zOZn/GoJGiyaKuOLMcRcmpiu
      Sr++tqeJr04jO7q5cNJLNRvhw6lZXq97NvsXA2iNBJv9ZFMZlHKBWLpAk/sRbs5jERAE0OqN
      9A43pv4CnDo6RDqdZmBomEImhdloqumSFXlzRdi9vxjq72uQEfBYmJqcwWXWEU5W6euuDT6r
      2TA/eO827d29hJrN5HMFLO5a/1sri6xGYhQzEvFqEbOjtvlWpCqtfScI+OwgV1iP53ZZF5u7
      ITS19dHUtn3Zn3gEDcFgEE9zOwN6hdnZecx1w+QWh5fsxBxL+gL5+Dpud2PFPLetET8JRZEp
      ZDMUqgJ+T6ML89TyZZnY2jxLS0usFs185pVzNbn4iqJQLeeYnJhmYWWVgRMX6WurDZRK+Qy5
      krjZbwganC5XbTaoJJLJFR78rTOYGlamlQo5Usk42aKM1+/DYbPWGGJhfZyRhJuLQ80olRw/
      vjHOpy6d29vKeJFQFMqFNON3x0iVFPqPniDotlEziq0oFPNZCmURjSAgafT4XLUN076fECMI
      GqwO1zN5+QGuvfsWM/Eq3UEntuauhoUoUnqJr3/3A5yBNnQWW8PLD3Dt6k0cXi9er5didIq5
      jdptUeRKnoWFBRbm57h59UPeu964mmt1+jYraYUmt5nb169TqEtbMvm7MWamuTFyiyvXRujq
      bgykVbaiEIvFMBo0VLVG0vEo5WpdpQoCZpsDr9eL2wyjUwsNUva9B3jWKIpMOh5hY32NhaTM
      pXOn6sbfFarlImtrYRYWF2juPtawN9D8navEFRsei45IeIOhsxdwmWpz9TOJMLML61hcXro7
      29HXzUq+8+67vPb662iA1anr5OwDDAQb0z9kSULQaBrWRqjsnnIuwdzyvVQZWaRq9HCsLknx
      hTeArSiyjIJQs3hDKieYXavS39WEXC0xObfKUH9P3e8k8rkcoqRgstow140miKklvvXju3R3
      tmHUa7E4/Q1DqYszY5sZp4AkK7R29dXkz2xu4bi549lOtjJU2RsOlQE8CjExywfzGl4/3YVc
      zvDj65O88fJufW8FsVwkmcygNVnxOO3s9v3Nr4xypxyC2CQnTp9vzHtSeSYcegNQFIm58dsk
      SyBXJTr7j9Dk2l3yllROc/nqGMFQkGoxTUHr5uRA40zt4yiEx/lwSUJOr9DZ3Y/D5X3kDnMq
      e8u+p0LsN4KgpWf4VM2e8btFTK+Dq4OurhaUco53r43BLg3A3NTH0eoC0yUTmUKFltDuMyhV
      ds+h7wH2AlmqcPvaVRSjDbGYp6nrCJ3Nu2u9y6kVPhxL8OrFYxRii9xazPPaucYJNZW95dD3
      AHuBUi3iDg3S1uJGkSosryeA3RmAIolojZu7NZtMFiQp9WyUValh3+cBXgTETISlRHFz8Ygs
      Mr/cuD36dhg9HfS6JW7evMXo7DrnTjUmbqnsPaoLtAcossjYreuUBBPVconW3qOEfI1j/CoH
      D9UA9hBZlp94DL+cWGJZ9NAbUA3neaLGAHvIo86/2inVfILLN6bYaNpMCHQ0tXOkp3GBvsre
      ovYAB4RCeJzJcpBTnZ+8PYzK3qMGwQcEncOLlc1VVlKlwOzi7gNpld2jGsABQconiWY2jwNV
      qhWW1yLb/0jlqVFdoAOCIolM3rlFXtYhVap0DBwh4Hrc+i+VvUANgg8IilzF3dyOS5ZB0KCv
      P1VF5ZmgGsCBYXP4VLh/+rzcuNGvyt6jxgAHBEWQWZ2fZX5uCUGjkEjn91ulQ4FqAAeEUnSe
      krOH011W/uv1BTrbHrfxiMpeoRrAAUFntCJmwsyEMzTZdYTvnWyi8mxRR4EOCOXkCmuim66m
      3W4No/I0qEHwAaGai/HBjQnW1VSI54pqAAcEQWdg+MRZTqupEM8VNQY4IBjcIdzaCuXsBiO3
      Rwk/wc5wKrtHNYADQiW1RjSvMHLzDq3tIaZmGg/9Vtl7VAM4IBhcQeSNCXC0YDfqcNrUdQHP
      A3UU6IAgiyViyczmYhpFQWey4naoI0LPGjUIPigoCpJURRRFNFo9WqPaLj0PVBfooKAVCC8u
      UJEU4usrZEu7P1pUZfeoBnBAKMUWKds76e3q5NjRQRbmpvdbpUPB/w9rtaXRiwflvQAAAABJ
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
